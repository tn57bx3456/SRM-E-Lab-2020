ALL YOU HAVE TO DO IS COPY THE QUESTION NAME AND PRESS CTRL+F  (FIND)	AND THEN COMPARE THE QUESTION NAME WITH THE QUESTIONS PRESENT IN
THE TXT FILE.
COPY PASTE AS YOU LIKE.

-MAABUL QUDDUS
=====================================================================================================================================									
#Only_For_Ref								//Created By Maabul
======================================================================================================================================
SESSION 1
=========
Read Long Number and Split it Into Odd and Even
#include <stdio.h>
#include <math.h>
int main()
{
  int i=0,j=0,r,n,q=0,qq=0;
  scanf("%d",&n);
  while(n!=0)
  {
    r=n%10;
    if(r%2==0)
    {
      q=q+r*pow(10,i);
      i++;
    }
    else
    {
      qq=qq+r*pow(10,j);
      j++;
    }
      
    n=n/10;
  }
  printf("%d %d",qq,q);

	return 0;
}
=====================================================
IO 5
#include <stdio.h>
int main()
{
  	int a;
  	scanf("%d",&a);
  	printf("%d",++a);
  	printf("\n%d",--a);
  	printf("\n%d",a++);
  	printf("\n%d",a--);
	return 0;
}

=====================================================
Sides of a Triangle
#include <stdio.h>

#include <math.h>
int main()

{
  	int x1,y1,x2,y2,x3,y3;
  	
float a,b,c;
  	
scanf("%d %d",&x1,&y1);
  	
scanf("%d %d",&x2,&y2);
  	
scanf("%d %d",&x3,&y3);
  	
a = sqrt(pow((x1-x2),2)+pow((y1-y2),2));
  	
b = sqrt(pow((x2-x3),2)+pow((y2-y3),2));
  	
c = sqrt(pow((x3-x1),2)+pow((y3-y1),2));
  	
printf("Length of side AB is %0.1f",(float)a);
  	
printf("\nLength of side BC is %0.1f",(float)b);
  	
printf("\nLength of side AC is %0.1f",(float)c);
	
return 0;
}

==============================================================

IO 35
#include <stdio.h>
int main()

{
  	char pn[9];
  
	float pp,p;
  	
int np;
    scanf("%[^\n]%*c",pn);
  	
scanf("%f",&pp);
  	scanf("%d",&np);
  
	printf("Product Details\n");
 	
printf("%s",pn);
  	printf("\n%0.2f\n",pp);
  	
printf("%d\n",np);
  	p=np*pp;
  	
printf("Bill:%0.2f",p);
  	
  

	
return 0;
}

=================================================

Valid Numbers
#include <stdio.h>
int main()
{
  	int num=0,n,i,no;
  	scanf("%d",&no);
    for(i=1;i<=no;i++)
    {
      	scanf("%d",&n);
      	if (n%8==0)
          num++;
    }
  	if (num==0)
      printf("No Valid Number");
  	else
      printf("Valid Numbers=%d",num);
  
  return 0;
}

===============================================

GCD and LCM
#include <stdio.h>
int main()
{
  	int a,b,n2,i,n,lcm;
  	scanf("%d",&a);
  	scanf("%d",&b);
  	if(a>b)
    {
  		n2=b;
    }
  	else
    {	
      	n2=a;
    }
  	for (i=1;i<=n2;i++)
    {
      	if (a%i==0 && b%i==0)
        	n=i;
    }
  	lcm=a*b/n;
  	printf("GCD=%d\n",n);
  	printf("LCM=%d",lcm);
  return 0;
  	
}

=============================================

Mickey mouse
#include <stdio.h>
int main()
{
  	int n;
  	scanf("%d",&n);
   	if(n%3==0 && n%7==0)
      	printf("This balloon can fly to miney");
  	else
      	printf("This balloon cannot fly to miney");
  return 0;
}

===========================================================

IO 21
#include <stdio.h>
int main()
{
  	float n;
  	scanf("%f",&n);
  	printf("The integer variant of %0.2f is=%d",n,(int)n);
  return 0;
}

====================================================================

RI - Rotract 3201
#include <stdio.h>
int main()
{	
  	int a,w;
  	scanf("%d",&a);
  	scanf("%d",&w);
  	if(a>=18 && w>=40)
      	printf("Eligible to donate");
  	else
      	printf("Not Eligible to donate");
	return 0;
}

=====================================================

IO 18
#include <stdio.h>
int main()
{
  float a,c;
  scanf("%f",&a);
  c=(a-32)*(0.5555556);
  printf("%.2fC",c);
  return 0;
}

===============================================================

RI - Rotract 3201
#include <stdio.h>
int main()
{
  	int a,w;
  	scanf("%d %d",&a,&w);
  	if((a>=18) && (w>=40))
      	printf("Eligible to donate");
  	else
      	printf("Not Eligible to donate");

	return 0;
}

=========================================================

Number of Digits
#include <stdio.h>
int main()
{int num,count=0;
 scanf("%d",&num);
while(num!=0)
{num/=10;
 count++;
}
 printf("%d",count);
    return 0;
}

===========================================

Exchange of gifts
#include <stdio.h>
int main()
{

  int m , c , x , y , h;
  scanf("%d%d",&m,&c);
  y=(m*0)+c ;
  x=(0-c)/m;
  h=x+y;
  printf("The line equation is y=%dx+%d\n",m,c);
  printf("The x intercept is %d\n",x);
  printf("The y intercept is %d\n",y);
  printf("The house number is %d\n",h);

	return 0;
}

=====================================================

IO 18
#include <stdio.h>
int main()
{
	float F,c;
    scanf("%f",&F);
  c=((F-32)*5)/9;
  printf("%0.2fC",c);
	return 0;
}

=================================================

Miney Mouse
#include <stdio.h>
int main()
{
  	int n;
  	scanf("%d",&n);
  	if((n%4)==0 && (n%8)==0)
      	printf("This balloon can fly to miney");
  	else
      	printf("This balloon cannot fly to miney");

	return 0;
}

=================================================

Fact is Fact
#include <stdio.h>
int main()
{
  	int n,i,sum=0;
  	scanf("%d",&n);
  	for(i=1;i<=n;i++)
    {
      	if((n%i)==0)
        {
          	sum+=i;
          	printf("%d ",i);
        }
    }
  	printf("\nSum=%d",sum);
          

	return 0;
}

===============================================

Average & standard deviation
#include <stdio.h>
#include<math.h>
int main()
{
  	int i,ar[10];
  	float n,s1=0,m,s2=0,sd;
  	scanf("%f",&n);
  	for(i=0;i<n;i++)
    {
      	scanf("%d",&ar[i]);
		s1+=ar[i];
    }
  	m=s1/n;
  	printf("Mean=%0.2f",m);
  	for(i=0;i<n;i++)
      	s2+=pow((m-ar[i]),2);
    sd=sqrt(s2/n);
  	printf("\nSD=%0.2f",sd);
  	
	return 0;
}

============================================

Sides of a Triangle
#include <stdio.h>
#include <math.h>
int main()
{
	float x1,y1,x2,y2,x3,y3,m,p,n,q,o,r;
    scanf("%f%f%f%f%f%f",&x1,&y1,&x2,&y2,&x3,&y3);
  	m=(x2-x1)*(x2-x1) +(y2-y1)*(y2-y1);
  	p=sqrt(m);
  	printf("Length of side AB is %0.1f\n",p);
    n=(x3-x2)*(x3-x2)+(y3-y2)*(y3-y2);
    q=sqrt(n);
    printf("Length of side BC is %0.1f\n",q);
    o=(x1-x3)*(x1-x3)+(y1-y3)*(y1-y3);
    r=sqrt(o);
    printf("Length of side AC is %0.1f\n",r);
    return 0;
}

===================================================

TIME CONVERSION
#include <stdio.h>
int main()
{
 	int h,m,s,total;
  	scanf("%d%d%d",&h,&m,&s);
  	total=h*3600+m*60+s;
  	printf("%d ",total);
  	return 0;
}

===============================================

ATM Transaction

#include <stdio.h>
int main()
{
  float b;
  int w;
  scanf("%d%f",&w,&b);
  if((w%5==0)&&(b>=w+0.50))
  printf("%f",b-w-0.50);
  else
  printf("%f",b);
return 0;
}

===============================================

Read Long Number and Split it Into Odd and Even

#include <stdio.h>
#include <math.h>
int main()
{
  int a,r,e=0,o=0,ee=0,oo=0;
  scanf("%d",&a);
  while(a>0)
  {
    r=a%10;
    if(r%2==0)
    {
      e=e+r*pow(10,ee);
      ee++;
    }
    else
    {
      o=o+r*pow(10,oo);
      oo++;
    }
    a=a/10;
  }
  printf("%d %d",o,e);
	return 0;
}

=====================================================

FOUR SEASONERS

#include <stdio.h>
int main()
{
  int x1,x2,x3,y1,y2,y3;
  float x,y;
  scanf("%d%d%d%d%d%d",&x1,&y1,&x2,&y2,&x3,&y3);
  x=x1+x2+x3;
  y=y1+y2+y3;
  printf("Dinesh\\'s house is located at (%0.1f,%0.1f)",x/3,y/3);
	return 0;
}

==========================================================================
 
IO 33

#include <stdio.h>
int main()
{
int p,r,t;
  float in,total;
  scanf("%d%d%d",&p,&r,&t);
  in=p*r*t*0.01;
  printf("Interest=%0.2f",in);
  total=in+p;
  printf("\nAmount=%0.2f",total);
	return 0;
}

=============================================================

TIME CONVERSION

#include <stdio.h>
int main()
{
  int hour, minute, second, timeinsec;

        
        /* get hour value from user*/
        scanf("%d", &hour);

       
        /* get minute value from user */
        scanf("%d", &minute);

        
        /* get sec value from the user */
        scanf("%d", &second);

        /* calculate total seconds */
        timeinsec = second + (minute * 60) + (hour * 60 * 60);
        printf(" %d\n",timeinsec);

	return 0;
}

======================================================================

IO 23

#include <stdio.h>
int main()
{
  int e1,e2,s,a1,a2,a3;
  scanf("%d",&e1);
  if(e1==0)
  {
    printf("0");
  }
  else
  {
    scanf("%d",&e2);
    scanf("%d",&s);
    scanf("%d %d %d",&a1,&a2,&a3);
    float ep,sp,ap,tot;
    ep=((e1+e2)*50)/200.0;
    sp=(s*20)/50.0;
    ap=((a1+a2+a3)*30)/60.0;
    tot=ep+ap+sp;
    printf("Result\n");
    printf("Total Percent in examination:%.2f\n",ep);
    printf("Total Percent in activities:%.2f\n",ap);
    printf("Total Percent in sports:%.2f\n",sp);
    printf("Total Percentage:%.2f\n",tot);
  }
	return 0;
}

=======================================================================

Number Reversing

#include <stdio.h>
int main()
{
  int n,r,re;
  scanf("%d",&n);
  while(n!=0)
  {
    re=n%10;
    r=r*10+re;
    n=n/10;
  }
  printf("%d",r);
	return 0;
}

===================================================

Product of digits

#include <stdio.h>
int main()
{
  int n;
  long long product = 1ll;
  scanf("%d",&n);
  while(n!=0)
  {
    product = product * (n%10);
    n=n/10;
  }
  printf("%lld",product);
  return 0;
}

====================================================

IO 13

#include <stdio.h>
int main()
{
char c;
 scanf("%c",&c);
 if(c>='a'&& c<='z')
   c=c-32;
 else
   c=c+32; 
 printf("%c",c);
	return 0;
}

======================================================
T
IME CONVERSION

#include <stdio.h>
int main()
{
  int h,m,s,t;
  scanf("%d %d %d",&h,&m,&s);
  t=h*3600+m*60+s;
  printf("%d",t);
  return 0;
}

=====================================================

Gizmos

#include <stdio.h>
int main()
{
  float w,g,t;
  scanf("%f %f",&w,&g);
  t = (75*w+112*g)/1000;
  printf("widgets=%.0f\ngizmo=%.0f\nTotal weight=%.3f",w,g,t);
 	return 0;
}

====================================================

Miney Mouse

#include <stdio.h>
int main()
{int x;
  scanf("%d",&x);
   if(x%4==0 && x%8==0)
     printf("This balloon can fly to miney");
     else
     printf("This balloon cannot fly to miney");
 return 0;
       }

===================================================

IO 18

#include <stdio.h>
int main()
{
  float f,c;
  scanf("%f",&f);
c = (f-32)*5/9;
  printf("%.2fC",c);
	return 0;
}

============================================================

GCD and LCM

#include <stdio.h>
int main()
{
    int n1, n2, i, gcd,lcm;
    scanf("%d %d", &n1, &n2);
    for(i=1; i <= n1 && i <= n2; ++i)
    {
        if(n1%i==0 && n2%i==0)
            gcd = i;
    }
    printf("GCD=%d\n",gcd);
  lcm=n1*n2/gcd;
  printf("LCM=%d",lcm);
    return 0;
}

================================================

Mickey mouse

#include <stdio.h>
int main()
{int x;
 scanf("%d",&x);
 if(x%3==0 && x%7==0)
   printf("This balloon can fly to miney");
 else
   printf("This balloon cannot fly to miney");
 return(0);
}

=================================================

IO 35

#include <stdio.h>
int main()
{char c[10];
 float price;
 int x;
  scanf("%s",c);
  scanf("%f",&price);
   scanf("%d",&x);
 printf("Product Details\n");
 printf("%s\n",c);
 printf("%0.2f\n",price);
 printf("%d\n",x);
printf("Bill:%.2f",price*x);
 
 return(0);
}

=================================================

Y2K Problem Detector

 #include<stdio.h>
int main(){
  signed int current, birth, a;
  scanf("%d",&birth);
  scanf("%d",&current);  
  if(current<birth)
  {
    birth=100-birth;
    a=birth+current;
    printf("Your age is %d",a);
  }
  else
  {
  printf("Your age is %d",current-birth);
  }
  return 0;
}

================================================

Day Old Bread

#include <stdio.h>
int main()
{
int n,r,t,a;
  scanf("%d",&n);
  r=n*185;
  t=r*60/100;
  a=r-t;
  printf("Regular Price=%d\n",r);
  printf("Total Discount=%d\n",t);
  printf("Total Amount to be paid=%d",a);
	return 0;
}

==============================================
IO 30

#include<stdio.h>
int main()
{
  int hno,pin;
  char ar[20];
  scanf("%d",&hno);
  scanf("%s",&ar[0]);
  scanf("%d",&pin);
  printf("Address\n");
  printf("House Number:%d\n",hno);
  printf("Area:%s\n",ar);
  printf("Pin Code:%d\n",pin);
  return 0;
}

========================================================

Sides of a Triangle


#include <stdio.h>
#include <math.h>
int main()
{	
  	int a[2];
 	int b[2];
 	int c[2];
 	float distance[3];
 	scanf("%d %d",&a[0],&a[1]);
 	scanf("%d %d",&b[0],&b[1]);
  	scanf("%d %d",&c[0],&c[1]);
 
	
  	distance[0]=((b[0]-a[0])*(b[0]-a[0])+(b[1]-a[1])*(b[1]-a[1]));
 	distance[1]=((b[0]-c[0])*(b[0]-c[0])+(c[1]-b[1])*(c[1]-b[1]));
    distance[2]=((c[0]-a[0])*(c[0]-a[0])+(a[1]-c[1])*(a[1]-c[1]));
  printf("Length of side AB is %.1f",sqrt(distance[0]));
        printf("\nLength of side BC is %.1f",sqrt(distance[1]));
               printf("\nLength of side AC is %.1f",sqrt(distance[2]));
	return 0;
}

=====================================================================
 Y
2K Problem Detector

#include <stdio.h>
int main()
{
int y1,y2,y;
  scanf("%d",&y1);
  scanf("%d",&y2);
  if(y1>y2)
  {
   y=(y2+100)-y1;
  }
  else
  {
    y=y2-y1;
  }
  printf("Your age is %d", y);
  return 0;
}

=========================================================================

IO 18

#include <stdio.h>
int main()
{
  float c,fah;
  scanf("%f" , &fah);
  c=(fah-32)*5/9;
  printf("%0.2fC",c);
  return 0;
}

================================================================

Better or Not

#include <stdio.h>
int main()
{	int a,b;
 	scanf("%d %d",&a,&b);
 	if(a>b)
    {	printf("College 1 is better");    }
	else
      printf("College 2 is better");
	return 0;
}

=============================================================

Triangular Area

#include <stdio.h>
#include<math.h>
int main()
{
int a,b,c,s;
  float area;
  scanf("%d %d %d ",&a,&b,&c);
  s=(a+b+c)/2;
  area=sqrt(s*(s-a)*(s-b)*(s-c));
    printf("Area=%0.4f" ,area);
  return 0;
}

=========================================================

IO 21

#include <stdio.h>
int main()
{	float a;
 	scanf("%f",&a);
 	printf("The integer variant of %0.2f is=",a);
 int b;
 b=a;
 
 	printf("%d",b);

	return 0;
}

================================================================

Mathematics Idiots

#include <stdio.h>
int main()
{	int a,b,c,x;
 	float q,o;
 	scanf("%d %d %d %d",&a,&b,&c,&x);
	q=(1.0 *(a+c)/2);
 	o=(1.0 *(x+b)/2);
 	printf("Binoys house is located at (%0.1f , %0.1f)",q,o);
 
	return 0;
}

=================================================================

Months

  #include<stdio.h>
int main(){
  int n;
  scanf("%d\n",&n);
  switch (n)
  {
    case 1:
          printf("January\n");
        break;
    case 2:
          printf("February");
        break;
    case 3: 
          printf("March");
          break;
    case 4: 
          printf("April");
          break;
    case 5:
          printf("May");
          break;
    case 6:
           printf("June");
    break;
    case 7:
    printf("July");
    break;
    case 8:
    printf("August");
    break;
    case 9:
    printf("September");
    break;
    case 10:
    printf("October");
    break;
    case 11:
    printf("November");
    break;
    case 12:
    printf("December");
    break;
    default:
    printf("Invalid month");
  }
  return 0;
}

====================================================

IO 23

#include <stdio.h>
int main()
{
	int e1,e2,s,a1,a2,a3;
  	scanf("%d",&e1);
  if(e1==0)
  {
    printf("0");
  }
  else
  {
    scanf("%d %d %d %d %d",&e2,&s,&a1,&a2,&a3);
    float ep,sp,tot,ap;
    ep=((e1+e2)*50)/200.0;
    sp=(s*20)/50.0;
    ap=((a1+a2+a3)*30)/60.0;
    tot=ap+sp+ep;
    printf("Result\n");
    printf("Total Percent in examination:%0.2f\nTotal Percent in activities:%0.2f\nTotal Percent in sports:%0.2f\nTotal Percentage:%0.2f",ep,ap,sp,tot);
    
  }
  
	return 0;
}

===============================================================


Basic Calculator

#include <stdio.h>
#include<stdlib.h>

int main()
{	int a;
 	int b;
	int ans;
 	char x;
 	scanf("%d %c %d",&a,&x,&b);
 
      switch(x)
      {
        case '+':
          { 
            ans=a+b;
            printf("Answer=%d",ans);
            break;
          	
          }
        case '-':
          {	
            ans=a-b;
         printf("Answer=%d",ans);
              break;
          }
        case '*':
          {	
            ans=a*b;
         printf("Answer=%d",ans);
            
              break;
          }
        case '/':
          {	
            ans=a/b;
        printf("Answer=%d",ans);
         break;   }
        case '%':
          {
          	ans=a%b;
printf("Answer=%d",ans);
              break;
          }
        default:
          { 
          	printf("Error in operator");
              break;
        }
          
      }
 
 
      

	return 0;
}

==============================================================

Sides of a Triangle

#include <stdio.h>
#include <math.h>
int main()
{	
  	int a[2];
 	int b[2];
 	int c[2];
 	float distance[3];
 	scanf("%d %d",&a[0],&a[1]);
 	scanf("%d %d",&b[0],&b[1]);
  	scanf("%d %d",&c[0],&c[1]);
 
	
  	distance[0]=((b[0]-a[0])*(b[0]-a[0])+(b[1]-a[1])*(b[1]-a[1]));
 	distance[1]=((b[0]-c[0])*(b[0]-c[0])+(c[1]-b[1])*(c[1]-b[1]));
    distance[2]=((c[0]-a[0])*(c[0]-a[0])+(a[1]-c[1])*(a[1]-c[1]));
  printf("Length of side AB is %.1f",sqrt(distance[0]));
        printf("\nLength of side BC is %.1f",sqrt(distance[1]));
               printf("\nLength of side AC is %.1f",sqrt(distance[2]));
	return 0;
}

===================================================================
 
IO 31
#include <stdio.h>
int main()
{
  float a;
  float b;
  int d;
  
  int sum;
  scanf("%f",&a);
  scanf("%f",&b);
  d=(int)b;
  sum=a+d;
  printf("sum=%d",sum);
	return 0;
}

==================================================

Miney Mouse
#include <stdio.h>
int main()
{
  int a;
  	
  scanf("%d",&a);
  if(a%4==0&&a%8==0)
    printf("This balloon can fly to miney");
  else
    printf("This balloon cannot fly to miney");
    return 0;
}

==================================================

Tsunami Indonesia
#include <stdio.h>
int main()
{
	int a,b,c;
  	scanf("%d",&a);
  	scanf("%d",&b);
  scanf("%d",&c);
  printf("TSUNAMI REPORT");

printf("\nThe number of people");

printf("\nDead=%d",a);

printf("\nInjured=%d",b);

printf("\nSafe=%d",c);
	return 0;
}

=================================================

CHANGE IT
#include <stdio.h>
int main()
{	int a,b,c;
 	scanf("%d %d %d",&a,&b,&c);
 	printf("%d %d %d",a,b,c);

	return 0;
}

==============================================
 
Exchange of gifts
#include <stdio.h>
int main()
{	
  	int a,b;
  int x,y;
  	scanf("%d %d",&a,&b);
  	printf("The line equation is y=%dx+%d",a,b);
  	x=(-b)/a;
  y=b;
  int sum=x+y;
  	printf("\nThe x intercept is %d",x);
  printf("\nThe y intercept is %d",y);
  printf("\nThe house number is %d",sum);
  

	return 0;
}

=====================================================

Xavier Math
#include <stdio.h>
int main()
{	int a;
 scanf("%d",&a);
 int n=1;
 int sum=0;
 while (a>n)
 {	sum+=n; 
 printf("%d+",n);
 n++;
 }
printf("%d=%d",a,sum+a);
	return 0;
}

======================================================

Case Count
#include<stdio.h>


 
int main() {
   int upper = 0, lower = 0;
 int size=20;
  char ch[size];  
  int i;
//for(i=0;i<size;i++)
//scanf("%s",&ch[i]);

fgets(ch,20,stdin);  

 i=0; 
   while (ch[i] != '\0')
     
   {
 
      if (ch[i] >= 'A' && ch[i] <= 'Z')
      {
    //   printf("%c",ch[i]);
        upper++;
      }
        if (ch[i] >= 'a' && ch[i] <= 'z')
         lower++;
      i++;
   }
 
   printf("\nUppercase Letters=%d", upper);
   printf("\nLowercase Letters=%d", lower);
 
   return (0);
}

======================================================
 IO 33
#include <stdio.h>
int main()
{float a;
 float si;
 
   int p;
  int i;
  int t;
  scanf("%d %d %d",&p,&i,&t);
  si=(p*i*t)/100;
 a=si+p;
   printf("Interest=%.2f",si);
     printf("\nAmount=%.2f",a);
 
 
 
	return 0;
}

=====================================================

Mirror Problem
#include <stdio.h>
int main()
{
	int num;
  	scanf("%d",&num);
     if(num<=0||num>100)
	   printf("Invalid Number");
     else if(num%2==0)
       printf("Doll will sing");
  	 else
       	printf("Invalid Number");
  return 0;
}

=================================================

Turbo Task
#include <stdio.h>
int main()
{
int a,b,c,l,min;
  scanf("%d",&l);
  scanf("%d",&a);
  scanf("%d",&b);
  scanf("%d",&c);
  if(a<b)
  {
    if(a<c)
    { 
      min=a;
      if(min<l)
      printf("First person wins");
    }
  }
  if(b<a)
  {
    if(b<c)
    { 
      min=b;
      if(min<l)
      printf("Second person wins");
    }
  }
  if(c<a)
  {
     if(c<b)
    {
      min=c;
      if(min<l)
      printf("Third person wins");
    }
  }
  if(min>l)
    printf("No person wins");
	return 0;
}

===============================================
 
Find and print
#include <stdio.h>
int main()
{
int n,f=2,d=3,i;
  scanf("%d",&n);
  for(i=1;i<=n;i++)
  {
    printf("%d ",f);
      f=f+d;
      d=d+2;
  }  
	return 0;
}

=============================================
 
Number of Digits
#include <stdio.h>
int main()
{
  int n,a,c=0;
  scanf("%d",&n);
  a=n;
  while(a>0)
  {
    a=a/10;
    c++;
  }
  printf("%d",c);
  return 0;
}

=========================================

FOUR SEASONERS
#include <stdio.h>
int main()
{
	float x1,x2,x3,y1,y2,y3;
    float x,y;
  scanf("%f %f %f %f %f %f",&x1,&y1,&x2,&y2,&x3,&y3);
  x=(x1+x2+x3)/3;
  y=(y1+y2+y3)/3;
  printf("Dinesh\\'s house is located at (%0.1f,%0.1f)",x,y);
	return 0;
}

=======================================================================

Electric town
#include <stdio.h>
int main()
{
  int u;
  float c;
  scanf("%d",&u);
  if(u>0 && u<=200)
    c=0.5*u;
  else if(u>200 && u<=400)
    c=100 + (u-200)*0.65;
  else if(u>400 && u<=600)
    c=230 + (u-400)*0.8;
  printf("Rs=%0.2f",c);
	return 0;
}

==========================================================

RI - Rotract 3201
#include <stdio.h>
int main()
{
	int a,w;
 	scanf("%d%d",&a,&w);
    if(a>18 && w>40)
      printf("Eligible to donate");
  	else
      printf("Not Eligible to donate");
	return 0;
}

===============================================
 
IO 4
#include <stdio.h>
#include <math.h>
int main()
{
	float x1,x2,y1,y2,d;
  	scanf("%f %f %f %f",&x1,&y1,&x2,&y2);
    d=sqrt(pow((x2-x1),2)+pow((y2-y1),2));
  	printf("The distance between two points is=%0.2f units",d);
	return 0;
}

======================================================================

Y2K Problem Detector
#include <stdio.h>
int main()
{
	int a,b,c;
    scanf("%d %d", &b,&c);
    if(c<b)
    a=100+c-b;
  	else
    a=c-b;
    printf("Your age is %d",a);
	return 0;
}

===================================================

eLab Fuel Bank in India
#include <stdio.h>
int main()
{
	float lpk;
  int mpg;
  	scanf("%d",&mpg);
    lpk=282.48/mpg;
  	printf("%0.2f",lpk);
     return 0;
}

==============================================================================================================
//End of SESSION 1

==============================================================================================================
//End of SESSION 1

==============================================================================================================
//End of SESSION 1

==============================================================================================================
//End of SESSION 1

SESSION 2

=========

Check the Scientist
#include <stdio.h>
#include <math.h>
int main()
{
  int r,q,qq,qqq=0;
  scanf("%d",&q);
  qq=q;
  while(q!=0)
  {
    r=q%10;
    q=q/10;
    qqq=qqq+(pow(r,3));
  }
  if (qq==qqq)
    printf("Give to Scientist Bogar");
  else
    printf("Dont Give to Scientist Bogar");
    

	return 0;
}

============================================================

Mirror Image
#include <stdio.h>
int main()
{
  int n,nn,r,nnn=0;
  scanf("%d",&n);
  nn=n;
  while(n!=0)
  {
    r=n%10;
    n=n/10;
    nnn=(nnn*10)+r;
  }
  if(nnn==nn)
    printf("Mirror Image");
  else 
    printf("Not a Mirror Image");
  
    

	return 0;
}

==================================================

Pool
#include <stdio.h>
int main()
{
  int q,qq,qqq,qqqq;
  scanf("%d",&q);
  scanf("%d",&qq);
  qqq=3.14*q*q;
  qqqq=qq*qq;
  if(qqq>qqqq)
    printf("I prefer centre 1");
  else
    printf("I prefer centre 2");

	return 0;
}

=================================================

Modulo of numbers(Integer data type)
#include <stdio.h>
int main()
{
  int q,qq,qqq;
  scanf("%d",&q);
  scanf("%d",&qq);
  qqq=q%qq;
  printf("The reminder of two number is:%d",qqq);
 
  

	return 0;
}

========================================================

Modulo of numbers(Integer data type)
#include <stdio.h>
int main()
{
  int q,qq,qqq;
  scanf("%d",&q);
  scanf("%d",&qq);
  qqq=q%qq;
  printf("The reminder of two number is:%d",qqq);
 
  

	return 0;
}

=====================================================

read data on a regular basis
#include <stdio.h>
int main()
{
  int t, n, i, flag;
    scanf("%d", &t);
 
    while(t--)
    {
        scanf("%d", &n);
        long a[n], time;
 
        for(i = 0; i < n; i++)
            scanf("%ld", &a[i]);
 
        time = 1;
        flag = 0;
 
        while(flag != 2)
        {
            flag = 0;
 
            for(i = 0; i < n; i++)
            {
                if(time % a[i] == 0)
                    flag++;
 
                if(flag == 2)
                    break;
 
            }
 
 
            if(flag != 2)
                time++;
 
        }
 
        printf("%ld\n", time);
    }

	return 0;
}

========================================================

color balls
#include <stdio.h>
int main()
{
  int n,i,j;
  scanf("%d",&n);
  for(i=1;i<=n;i++)
  {
    for(j=1;j<=i;j++)
    {
      printf("%d ",j);
    }
    printf("\n");
  }

	return 0;
}

========================================================

Moving Coins
#include <stdio.h>
int main()
{
  int q,qq,qqq;
  scanf("%d",&q);
  scanf("%d",&qq);
  scanf("%d",&qqq);
  if(q==qq && q==qqq && qq==qqq)
    printf("equilateral");
  else if(q!=qq && q!=qqq && qq!=qqq)
    printf("scalene");
  else
    printf("isosceles");
	return 0;
}

====================================================

Display your name
#include <stdio.h>
int main()
{
  char q[20];
  scanf("%[^\n]%*c",q);	
  printf("Your name is:%s",q);

  
  return 0;
}

============================================

India Vs England
#include <stdio.h>
int main()
{	
  	int x;
  scanf("%d",&x);
if(x!=-1)
{if(x%2==0)
{
  printf("ENGLAND");
  
}
  else
    printf("INDIA");
}
  else
    
  printf("Sorry");
  return 0;
}

===========================================

Print prime numbers

#include <stdio.h>

int checkPrimeNumber(int n);
int main()
{
    int n1=2, n2, i, flag;

    //printf("Enter two positive integers: ");
    scanf("%d", &n2);
    //printf("Prime numbers between %d and %d are: ", n1, n2);

    for(i=n1+1; i<n2; ++i)
    {
        // i is a prime number, flag will be equal to 1
        flag = checkPrimeNumber(i);

        if(flag == 1)
            printf("%d ",i);
    }
    return 0;
}

// user-defined function to check prime number
int checkPrimeNumber(int n)
{
    int j, flag = 1;

    for(j=2; j <= n/2; ++j)
    {
        if (n%j == 0)
        {
            flag =0;
            break;
        }
    }
    return flag;
}

===================================================================

Gross salary
#include <stdio.h>
int main()
{
	int i,n,sal,hra,da,gross;
   	scanf("%d",&n);
  	for(i=1;i<=n;i++)
    {
     	scanf("%d",&sal);
  		if(sal<1500)
    	{
      		hra=(10*sal)/100;
      		da=(90*sal)/100;
    	}
     	else
        {
          	hra=500;
          	da=(98*sal)/100;
        }
     	gross=sal+hra+da;
     	printf("%d\n",gross);
    }
      	
	return 0;
}

=====================================================================

Narcissistic raju
#include <stdio.h>
#include<math.h>
int main()
{
  	int n,n1,r,n2,s=0,n3=0;
  	scanf("%d",&n);
  	n2=n;
  	n1=n;
  	while(n!=0)
    {
      	s++;
      	n/=10;
    }
	while(n1!=0)
    {
      	r=n1%10;
      	n3+=pow(r,s);
    	n1/=10;
    }
  	if(n3==n2)
      	printf("Narcissistic Number");
  	else
      	printf("NOT Narcissistic Number");
  
	return 0;
}

=================================================================

Financial Crisis
#include<stdio.h>
#include<math.h>
int gcd(int a, int b)
{
    if (a == 0)
        return b;
    return gcd(b%a, a);
}
int main()
{
	
		int l, b;
		scanf("%d%d", &l, &b);
		int side = gcd(l, b);
		int count = (l*b)/(side*side);
		printf("%d\n", count);
	return 0;
} 

=====================================================================
 
Module of numbers
#include <stdio.h>
int main()
{
  int a,b,c;
  scanf("%d%d",&a,&b);
  c=a%b;
  printf("The modulo of two number is:%d",c);

	return 0;
}

========================================================

Print prime numbers
#include <stdio.h>
int prime(int n)
{
  	int i,f=0;
  	for(i=2;i<=(n/2);i++)
    {
      	if(n%i==0)
        {
          	f=1;
          	break;
        }
    }
  	return f;
}
int main()
{
  	int num,i;
  	scanf("%d",&num);
  	for(i=3;i<num;i++)
    {
      	if(prime(i)==0)
          	printf("%d ",i);
    }
      	

	return 0;
}

=========================================================

Number game
#include <stdio.h>
#include <stdlib.h>
int main()
{
	int i,j,flag;
	//int a[N];
	int t;
	int N[20];
	scanf("%d",&t);
	if(t>=20 && t<=1)
	exit(0);
	for(i=0;i<t;i++)
	{
	scanf("%d",&N[i]);
	if(N[i]>10000 && N[i]<1)
	exit(0);
	}
	for(j=0;j<t;j++)
	{flag=0;
	for(i=2; i<N[j]; ++i)
    {
        
        if(N[j]%i==0)
        {
            flag=1;
            break;
        }
    }
		if(flag==0)
		{
			printf("yes\n");
		}
		else
		{
			printf("no\n");
		}
	}
  return 0;
}

=====================================================================

Floyds Triangle

#include <stdio.h>
 
int main()
{
  int n, i,  c, a = 1;
 
  //printf("Enter the number of rows of Floyd's triangle to print\n");
  scanf("%d", &n);
 
  for (i = 1; i <= n; i++)
  {
    for (c = 1; c <= i; c++)
    {
      printf("%d ",a);
      a++;
    }
    printf("\n");
  }
 
  return 0;
}

=============================================================================

Newton Scientist

#include <stdio.h>
int main()
{
  int n,i,c=0;
  scanf("%d",&n);
  for (i=1;i<=n;i++)
  {
    if(n%i==0)
    c=c+1;
  }
  if (c==2)
  printf("Give to Scientist Newton");
  else
  printf("Dont Give to Scientist Newton");
  return 0;
}

===============================================================================

Prime Factors

#include <stdio.h>
int checkPrime(int n);
int main()
{
int n, i, flag = 0;

    
    scanf("%d", &n);

    for(i = 2; i <= n/2; ++i)
    {
        // condition for i to be a prime number
        if (checkPrime(i) == 1)
        {
            // condition for n-i to be a prime number
            if (checkPrime(n-i) == 1)
            {
                // n = primeNumber1 + primeNumber2
                printf("%d = %d + %d\n", n, i, n - i);
                flag = 1;
            }

        }
    }

    if (flag == 0)
        printf("NOT");

    return 0;
}

// Function to check prime number
int checkPrime(int n)
{
    int i, isPrime = 1;

    for(i = 2; i <= n/2; ++i)
    {
        if(n % i == 0)
        {
            isPrime = 0;
            break;
        }  
    }

    return isPrime;
	return 0;
}

========================================================================

Division of numbers(Integer data type)

#include <stdio.h>
int main()
{
  int n1,n2,n3;
  scanf("%d",&n1);
  scanf("%d",&n2);
  n3=n1/n2;
  printf("The division of two number is:%d",n3);
	return 0;
}

===============================================================
 Roman tour

 #include<stdio.h>
#include<string.h>
 
int digit(char);
 
int main(){
 
    char roman_Number[1000];
    int i=0;
    long int number =0;
 
    
    scanf("%s",roman_Number);
 
    while(roman_Number[i]){
 
         if(digit(roman_Number[i]) < 0){
             printf("Invalid roman digit : %c",roman_Number[i]);
             return 0;
         }
 
         if((strlen(roman_Number) -i) > 2){
             if(digit(roman_Number[i]) < digit(roman_Number[i+2])){
                 printf("Invalid roman number");
                 return 0;
             }
         }
 
         if(digit(roman_Number[i]) >= digit(roman_Number[i+1]))
             number = number + digit(roman_Number[i]);
         else{
             number = number + (digit(roman_Number[i+1]) - digit(roman_Number[i]));
             i++;
         }
         i++;
    }
 
    printf("%ld",number);
 
    return 0;
 
}
 
int digit(char c){
 
    int value=0;
 
    switch(c){
         case 'I': value = 1; break;
         case 'V': value = 5; break;
         case 'X': value = 10; break;
         case 'L': value = 50; break;
         case 'C': value = 100; break;
         case 'D': value = 500; break;
         case 'M': value = 1000; break;
         case '\0': value = 0; break;
         default: value = -1; 
    }
  return value;
}

=====================================================================

Module of numbers

#include <stdio.h>
int main()
{
  int n1,n2,nn;
  scanf("%d",&n1);
  scanf("%d",&n2);
  nn = n1%n2;
  printf("The modulo of two number is:%d",nn);
	return 0;
}

=========================================================================
 
read data on a regular basis

#include<stdio.h>
 
int main(void)
{
    int t, n, i, flag;
    scanf("%d", &t);
 
    while(t--)
    {
        scanf("%d", &n);
        long a[n], time;
 
        for(i = 0; i < n; i++)
            scanf("%ld", &a[i]);
 
        time = 1;
        flag = 0;
 
        while(flag != 2)
        {
            flag = 0;
 
            for(i = 0; i < n; i++)
            {
                if(time % a[i] == 0)
                    flag++;
 
                if(flag == 2)
                    break;
 
            }
 
 
            if(flag != 2)
                time++;
 
        }
 
        printf("%ld\n", time);
    }
 
    return 0;
}
==========================================================





Grading system

#include<stdio.h>
int main()
{
		int t;
		scanf("%d",&t);
		while(t--)
		{
			int h,ts;
			float c;
			scanf("%d %f %d",&h,&c,&ts);
		if(h>50 && c<0.7 && ts>5600)
		{
			printf("10\n");
		}
		else if(h>50 && c<0.7)
		{
			printf("9\n");
		}
		else if(c<0.7 && ts>5600)
		{
			printf("8\n");
		}
		else if(h>50 && ts>5600)
		{
			printf("7\n");
		}
		else if(h>50 || c<0.7 || ts>5600)
		{
			printf("6\n");
		}
		else {
			printf("5\n");
		}
		}
	return 0;
}

==============================================================

color balls

#include <stdio.h>

int main()
{
    int i,j,n;
  scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=i;j++)
     {
       printf("%d ",j);
     }
        printf("\n");
    }

    return (0);
}


===========================================================
 
DT-11:Celsius To Farenheit

#include<stdio.h>
 
int main() {
 float celsius, fahrenheit;

 scanf("%f", &celsius);
 
 fahrenheit = (1.8 * celsius) + 32;
 printf("%.2f Fahrenheit", fahrenheit);
 
 return (0);
}

================================================================

Check the Scientist

#include <stdio.h>
int main()
{
    int number, originalNumber, remainder, result = 0;

    scanf("%d", &number);

    originalNumber = number;

    while (originalNumber != 0)
    {
        remainder = originalNumber%10;
        result += remainder*remainder*remainder;
        originalNumber /= 10;
    }

    if(result == number)
        printf("Give to Scientist Bogar");
    else
        printf("Dont Give to Scientist Bogar");

    return 0;
}

=============================================================

Number game

#include <stdio.h>
int main()
{
    int n, i,g,l, flag = 0;
  scanf("%d",&g);
  for(l=1;l<=g;l++)
  {
    flag=0;

    scanf("%d",&n);

    for(i=2; i<=n/2; ++i)
    {
        if(n%i==0)
        {
            flag=1;
            break;
        }
    }

    if (flag==0)
        printf("\nyes");
    else
        printf("\nno");
  }
    
    return 0;
}

======================================================================

Modulo of numbers(Integer data type)

#include <stdio.h>
int main()
{
int a,b,c;
  scanf("%d%d",&a,&b);
  
  c=a%b;
  printf("The reminder of two number is:%d",c);
	return 0;
}

========================================================
 
Half pyramid

#include <stdio.h>
int main()
{
    int i, j;
    char input, alphabet = 'A';


    scanf("%c",&input);

    for(i=1; i <= (input-'A'+1); ++i)
    {
        for(j=1;j<=i;++j)
        {
            printf("%c", alphabet);
        }
        ++alphabet;

        printf("\n");
    }
    return 0;
}

================================================================

Module of numbers

#include <stdio.h>
int main()
{	int a,b;
 	scanf("%d %d",&a,&b);
 	printf("The modulo of two number is:%d",(a%b));

	return 0;
}

========================================================

Mirror Image

#include <stdio.h>
int main()
{
    int n, reversedInteger = 0, remainder, originalInteger;

   
    scanf("%d", &n);

    originalInteger = n;

    // reversed integer is stored in variable 
    while( n!=0 )
    {
        remainder = n%10;
        reversedInteger = reversedInteger*10 + remainder;
        n /= 10;
    }

    // palindrome if orignalInteger and reversedInteger are equal
    if (originalInteger == reversedInteger)
        printf("Mirror Image");
    else
        printf("Not a Mirror Image");
    
    return 0;
}

=====================================================================
 
Great Calculator

#include <stdio.h>
int main()
{
	int a,b;
 int x,fin;
  scanf("%d",&x);
  scanf("%d %d",&a,&b);

   switch(x)
   {
     case 1:
       {fin=a+b;
        
        
        printf("%d",fin);
       break;
       }
       case 2:
       {
         fin=a-b;
         
         printf("%d",fin);
       break;
       }
     case 3:
       {
         fin=a*b;
        
         printf("%d",fin);
        break; 
       }
     case 4:
       {
         fin = a/b;
      
printf("%d",fin);         
       break;    
       }
     default:
       {
         printf("Invalid Input");
       }
   }

  
	return 0;
}

============================================================

Earth Quake

#include <stdio.h>
int main()
{
	float x;
  scanf("%f",&x);
  if(x<2.0)
    printf("Micro");
  else if(x>2.0&&x<3.0)
    printf("Very minor");
  else if(x>3.0&&x<4.0)
  printf("Minor");
  else if(x>4.0&&x<5.0)
    printf("Light");
  else if(x>5.0&&x<6.0)
    printf("Moderate");
  else if(x>6.0&&x<7.0)
    printf("Strong");
  else if(x>7.0&&x<8.0)
    printf("Major");
  else if(x>8.0&&x<10.0)
    printf("Great");
  else if(x>10.0)
    printf("Meteoric");
	return 0;
}

=============================================================

Favorite Sequence

#include<stdio.h>
int main()
{
int t,n,m,i,j,k;
scanf("%d",&t);
while(t--)
{
scanf("%d",&n);
int a[n];
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
scanf("%d",&m);
int b[m];
for(j=0;j<m;j++)
{
scanf("%d",&b[j]);
}
int count=0;
k=0;
for(i=0;i<m;i++)
{
for(j=k;j<n;j++)
{
if(a[j]==b[i])
{
k=j+1;
count++;
break;
}
}
}
if(count==m)
{
printf("Yes\n");
}
else
printf("No\n");
}
return 0;
}
 

=========================================================

Prime Factors

#include <stdio.h>
int checkPrime(int n);
int main()
{
    int n, i, flag = 0;

   
    scanf("%d", &n);

    for(i = 2; i <= n/2; ++i)
    {
        // condition for i to be a prime number
        if (checkPrime(i) == 1)
        {
            // condition for n-i to be a prime number
            if (checkPrime(n-i) == 1)
            {
                // n = primeNumber1 + primeNumber2
                printf("%d = %d + %d\n", n, i, n - i);
                flag = 1;
            }

        }
    }

    if (flag == 0)
        printf("NOT");

    return 0;
}

// Function to check prime number
int checkPrime(int n)
{
    int i, isPrime = 1;

    for(i = 2; i <= n/2; ++i)
    {
        if(n % i == 0)
        {
            isPrime = 0;
            break;
        }  
    }

    return isPrime;
}

==================================================

Roman tour

#include<stdio.h>
#include<string.h>
 
int digit(char);
 
int main(){
 
    char roman_Number[1000];
    int i=0;
    long int number =0;
 
  
    scanf("%s",roman_Number);
 
    while(roman_Number[i]){
 
         if(digit(roman_Number[i]) < 0){
        
             return 0;
         }
 
         if((strlen(roman_Number) -i) > 2){
             if(digit(roman_Number[i]) < digit(roman_Number[i+2])){
        
                 return 0;
             }
         }
 
         if(digit(roman_Number[i]) >= digit(roman_Number[i+1]))
             number = number + digit(roman_Number[i]);
         else{
             number = number + (digit(roman_Number[i+1]) - digit(roman_Number[i]));
             i++;
         }
         i++;
    }
 
    printf("%ld",number);
 
    return 0;
 
}
 
int digit(char c){
 
    int value=0;
 
    switch(c){
         case 'I': value = 1; break;
         case 'V': value = 5; break;
         case 'X': value = 10; break;
         case 'L': value = 50; break;
         case 'C': value = 100; break;
         case 'D': value = 500; break;
         case 'M': value = 1000; break;
         case '\0': value = 0; break;
         default: value = -1; 
    }
 
    return value;
}

=============================================================

Gross salary

#include<stdio.h>
int main()
{
    int t,i;
    scanf("%d",&t);
    for(i=0;i<t;i++)
    {
        int salary,hra,da;
        int gs;
        scanf("%d",&salary);
        if(salary<1500)
        {
           gs=salary*2;
        }
        else if(salary>=1500)
        {
         gs=(salary+500+(0.98*salary));   
        }
        printf("%d\n",gs);
    }
return 0;
} 

==========================================================

Differenzia
#include <stdio.h>
int main()
{
	int a;
  scanf("%d",&a);
  if(((!(a>=60||a<=18))||a==18)||a==60)
  {	 printf("Eligible");
   
  }
  else
    printf("Not Eligible");
	return 0;
}
		
===============================================

Swap Numbers
#include <stdio.h>
int main()
{
  int x ,y;
    scanf("%d %d",&x,&y);

 
  x = x + y; 
  y = x - y;  
  x = x - y;  

  printf("Values after Swapping");

printf("\nvalue of a is:%d",x);

printf("\nvalue of b is:%d",y);

  return 0;
}

============================================
Seasoners
#include<string.h>
#include <stdio.h>
int main()
{
	char a[5];
  	int b;
 int i;
  //fgets(a,5,stdin);
  scanf("%s",&a[0]);
scanf("%d",&b);
  //printf("%s",a);
 // printf("%d",b);
 if(strcmp(a,"Mar")==0&&b==20)
 {	printf("Summer");
 }
  if(strcmp(a,"Sep")==0&&b==22)
 {	printf("Fall");
 }
 if(strcmp(a,"Jun")==0&&b==21)
 {	printf("Spring");
 }
  if(strcmp(a,"Dec")==0&&b==21)
 {	printf("Winter");
 }
  
	return 0;
}

========================================

DT12: Print date/month/Year
#include <stdio.h>
int main()
{
	char name[15],month[10];
  	int date,year,code,number;
  	scanf("%s %s %d %d %d %d",&name[0],&month[0],&date,&year,&code,&number);

  printf("Name:%s",name);
  printf("\nDOB:%s %d %d",month,date,year);
   printf("\nMobile:%d-%d",code,number);
  
		return 0;
}

=================================================================

Print prime numbers
#include <stdio.h>
int main()
{	
  int n,p,i,j,c;

scanf("%d",&n);

for (i=3; i<n; i++)
{
	c=0;
	for(j=1;j<n;j++)
	{
		if((i%j)==0)
		{
			c=c+1;
		}
	}
	if(c==2)
	{
		printf("%d ",i);
	}
}

	return 0;
}

=============================================
Find the Year
#include <stdio.h>

int main()
{
    int year;

  
    scanf("%d",&year);

    if(year%4 == 0)
    {
        if( year%100 == 0)
        {
            
            if ( year%400 == 0)
                printf("Yes");
            else
                printf("No");
        }
        else
            printf("Yes");
    }
    else
        printf("No");
    
    return 0;

}

==========================================

India Vs England
#include <stdio.h>
int main()
{
	int a;
  scanf("%d",&a);
  if(a>0)
  { if(a%2==0)
  {
    printf("ENGLAND");
  }
  else
    printf("INDIA");
  }
  else printf("Sorry");
	return 0;
}
=======================================

Grading system
#include <stdio.h>
 
int main(void) {
	int t,H,T;
	float C;
	scanf(" %d",&t);
	while(t--)
	{
	    scanf(" %d %f %d",&H,&C,&T);
	    if(H>50&&C<.7&&T>5600)          printf("%d\n",10);
	    else if(H>50&&C<.7)          printf("%d\n",9);
	    else if(C<.7&&T>5600)          printf("%d\n",8);
	    else if(H>50&&T>5600)          printf("%d\n",7);
	    else if(H>50||C<.7||T>5600)          printf("%d\n",6);
	    else                            printf("%d\n",5);
	}
	return 0;
}

================================================================

Addition of two numbers
#include <stdio.h>
int main()
{	int a,b;
  	float x,y;
	scanf("%d %d %f %f",&a,&b,&x,&y);
 
 	printf("The Addition of two number is=%d",(a+b));
   printf("\nThe Addition of two number is=%.2f",(x+y));
	return 0;
}

=================================================================
Addition of numbers(Integer data type)
#include <stdio.h>
int main()
{	
  int a,b,sum1;
  	
	scanf("%d %d",&a,&b);
 	sum1=a+b;
 	
 	printf("The addition of two number is:%d",sum1);
 	

	return 0;
}

==============================================================================================================
//End of SESSION 2

==============================================================================================================/
/End of SESSION 2

==============================================================================================================
//End of SESSION 2

==============================================================================================================
//End of SESSION 2

SESSION 3

=========

Find Remainder
#include <stdio.h>
int main()
{	
  	int x;
  scanf("%d",&x);
if(x!=-1)
{if(x%2==0)
{
  printf("ENGLAND");
  
}
  else
    printf("INDIA");
}
  else
    
  printf("Sorry");
  return 0;
}

=======================================================

Shape Up
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  switch(n)
  {
    case 7: printf("Heptagon");
      break;
    case 8: printf("Octagon");
      break;
    case 9: printf("Nanogon");
      break;
    case 10: printf("Decagon");
      break;
    default: printf("Input should be from 7 to 10");
  }

	return 0;
}

======================================================

Calculating Gain Percentage
#include <stdio.h>
int main()
{
  int q,qq,qqq;
  float p,pp;
  scanf("%d",&q);
  scanf("%d",&qq);
  scanf("%d",&qqq);
  p=qqq-q-qq;
  pp=(p/(q+qq))*100;
  printf("The gain percentage is=%0.2f",pp);
  
	return 0;
}

===================================================

Finding OR of two numbers
#include <stdio.h>
int main()
{
  int q,qq,qqq;
  scanf("%d",&q);
  scanf("%d",&qq);
  qqq=q|qq;
  printf("Bitwise OR of %d and %d is=%d",q,qq,qqq);

	return 0;
}

=============================================================

ASCII code
#include <stdio.h>
int main()
{
  char q;
  scanf("%c",&q);
  printf("%d",q);

	return 0;
}

===================================================

Plural
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  if(n==1 || n==0)
    printf("false");
  else
    printf("true");

	return 0;
}

=================================================

Bitwise operator
#include <stdio.h>
int main()
{
  int q,qq;
  scanf("%d",&q);
  qq=q*4;
  printf("%d*4=%d",q,qq);
  

	return 0;
}

============================================

Byte Value
#include <stdio.h>
int main()
{
  printf("4 8");

	return 0;
}

==========================================

Month Calculator
#include <stdio.h>
#include <string.h>
int main()
{
  int q;
  char m[3];
  scanf("%[^\n]%*c",m);
  q=strcmp(m,"Jan");
  if(q==0)
    printf("31");
  q=strcmp(m,"Feb");
  if(q==0)
    printf("28 or 29");
  q=strcmp(m,"Mar");
  if(q==0)
    printf("31");
  q=strcmp(m,"Apr");
  if(q==0)
    printf("30");
  q=strcmp(m,"May");
  if(q==0)
    printf("31");
  q=strcmp(m,"Jun");
  if(q==0)
    printf("30");
  q=strcmp(m,"Jul");
  if(q==0)
    printf("31");
  q=strcmp(m,"Aug");
  if(q==0)
    printf("31");
  q=strcmp(m,"Sep");
  if(q==0)
    printf("30");
  q=strcmp(m,"Oct");
  if(q==0)
    printf("31");
  q=strcmp(m,"Nov");
  if(q==0)
    printf("30");
  q=strcmp(m,"Dec");
  if(q==0)
    printf("31");
  

	return 0;
}

==================================================

Scanning Int and string by retailer

#include <stdio.h>
int main()
{
 char n[25];
 int  c;
 scanf("%s",n);
 scanf("%d",&c);
 printf("PRODUCT NAME:%s\n",n);
 printf("COST:%d",c);
 return 0;
}

==================================================================

Calculating SP
#include <stdio.h>
int main()
{
	float sp,cp,l;
  	scanf("%f %f",&cp,&l);
  	sp=cp-(l/100)*cp;
	printf("The selling price of the cycle is Rs=%0.2f",sp);
	return 0;
}

==================================================================

Find Mode
#include <stdio.h>
#define max(a,b)(((a)>=(b))?(a):(b))
int main()
{
	int t,n,no,i;
  	scanf("%d",&t);
  	while(t--&&scanf("%d",&n)){
      int h[1000001]={0},m1=1,m2=0;
      while(n--&&scanf("%d",&no))h[no]++,m1=max(m1,no);
      for(i=1;i<=m1;i++)
        m2=max(m2,h[i]);
      for(i=m1;i>=1;i--)
        if(h[i]==m2)
           printf("%d ",i);
    }
	return 0;
}

================================================================

Topper
#include <stdio.h>
int main()
{
	int a,b;
  	scanf("%d%d",&a,&b);
  if(b>a)
    printf("%d",b);
  else
    printf("%d",a);  
	return 0;
}

===========================================================

Swap Swap!!!
#include <stdio.h>
int main()
{
	int x,y;
  scanf("%d %d",&x,&y);
  printf("%d\n%d",y,x);
	return 0;
}

==================================================

PROFIT CALCULATOR
 #include<stdio.h>
int main(){
  int n,c,s,o=0;
  
  scanf("%d",&n);
  
  scanf("%d",&c);
  
  scanf("%d",&s);
  o=((n*c)-(n*s))-100;
  printf("profit=%d",o);
  
  
  return 0;
}

=================================================
Finding bitwise AND of two numbers
#include <stdio.h>
int main()
{
	int x;
  int y;
  scanf("%d %d",&x,&y);
  printf("Bitwise AND of %d and %d is:%d",x,y,(x&y));
	return 0;
}

=============================================

Remainder
#include <stdio.h> 
 
int main() {
	// Read the number of test cases.
	int T;
	scanf("%d", &T);
	while (T--) {
		// Read the input a, b
		int a, b;
		scanf("%d %d", &a, &b);
 
		// Compute the ans.
		// Complete this line.
		int ans = a%b;
		printf("%d\n", ans);
	}
 
	return 0;
} 

=====================================================================

SUM IT NOW

#include <stdio.h>
int main()
{
  int n,rem,sum=0;
  scanf("%d",&n);
  while(n>0)
  {
    rem=n%10;
    sum+=rem;
    n=n/10;
  }
  printf("%d",sum);
	return 0;
}

===========================================================
 
THREE IDIOTS

 #include<stdio.h>
int main(){
  char s='(';
  char ss=')';
  int x1,x2,y1,y2;
  float mid1,mid2;
  //printf("Enter x1\n");
  scanf("%d",&x1);
  //printf("Enter y1\n");
  scanf("%d",&y1);
  //printf("Enter x2\n");
  scanf("%d",&x2);
  //printf("Enter y2\n");
  scanf("%d",&y2);
  mid1=((x1+x2)/2.0);
  mid2=((y1+y2)/2.0);
  printf("Binoys house is located at%c%.1f,%.1f%c",s,mid1 ,mid2,ss);
  
  
  return 0;
}

==============================================================

Second largest

#include<stdio.h>
int main()
{
    int a,b,c;
    int seclar;
    scanf("%d %d %d",&a,&b,&c);
    if(a<b)
    {
      if(b<c)
        seclar=b;
      else
        seclar=(a<c?c:a);
    }
    else
    {
      if(a<c)
        seclar=a;
      else
        seclar=(b<c?c:b);
    }
  printf("%d",seclar);
  return 0;
}

===============================================================

Count Vowels

#include <stdio.h>

int main()
{
    char line[150];
    int i, vowels, consonants, digits, spaces;

    vowels =  consonants = digits = spaces = 0;

   
    scanf("%[^\n]", line);

    for(i=0; line[i]!='\0'; ++i)
    {
        if(line[i]=='a' || line[i]=='e' || line[i]=='i' ||
           line[i]=='o' || line[i]=='u' || line[i]=='A' ||
           line[i]=='E' || line[i]=='I' || line[i]=='O' ||
           line[i]=='U')
        {
            ++vowels;
        }
        else if((line[i]>='a'&& line[i]<='z') || (line[i]>='A'&& line[i]<='Z'))
        {
            ++consonants;
        }
        else if(line[i]>='0' && line[i]<='9')
        {
            ++digits;
        }
        else if (line[i]==' ')
        {
            ++spaces;
        }
    }
printf("Vowels:%d",vowels);
    printf("\nConsonants:%d",consonants);
    printf("\nDigits:%d",digits);
    printf("\nWhite spaces:%d", spaces);

    return 0;
}

==========================================================================

Calculating Gain Percentage

#include <stdio.h>
int main()
{
  int a,b,c;
  scanf("%d",&a);
  scanf("%d",&b);
  scanf("%d",&c);
  printf("The gain percentage is=%.2f",((c-a-b)*1.0/(a+b))*100);
	return 0;
}

=================================================================
 
Find Remainder

#include <stdio.h>
int main()
{
int i,a,b,t;
scanf("%d",&t);
for(i=0;i<t;i++)
{
    scanf("%d%d",&a,&b);
    printf("%d\n",(a%b));
  
}
 
	return 0;
}

=======================================================================

Leenas Classroom

#include<stdio.h>
int main()
{
int a,b,c,d,small;
scanf("%d %d %d %d",&a,&b,&c,&d);
small=(a<b)?(a<c)?(a<d)?a:d:(c<d)?c:d:(b<c)?(b<d)?b:d:(c<d)?c:d;
printf("%d",small);
return 0;
}

===============================================================

FENCING THE GROUND

#include <stdio.h>
int main()
{
int l,b,p,a;
  scanf("%d%d",&l,&b);
  p=2*(l+b);
  a=l*b;
  printf("Required length is %dm",p);
  printf("\nRequired quantity of carpet is %dsqm",a);
	return 0;
}

==============================================================


Multiplication for a child

#include <stdio.h>
int main()
{ int d,e;
 float f;
 scanf("%d%d",&d,&e);
 f=d*e;
 printf("multiplication of the two numbers is %0.2f",f);
 

	return 0;
}

=======================================================================

Second largest

#include <stdio.h>
int main()
{
  int a,b,c;
  scanf("%d",&a);
 scanf("%d",&b);
   scanf("%d",&c);
   if((a>b)||(a<c)||(a>c))
   {
     printf("%d",a);
   }
	return 0;
}

========================================================================

Topper

#include <stdio.h>
int main()
{
int a,b;
  scanf("%d",&a);
  scanf("\n%d",&b);
  if (a>b)
  {
    printf("%d",a);
  }
  else
  {
    printf("%d",b);
  }
	return 0;
}

==================================================================

Sum of palindromic numbers

#include <stdio.h>
int main()
{
  int t;
scanf("%d",&t);
  while(t--)
  {int a,b;
  scanf("%d%d",&a,&b);
 int i; 
 long int s=0;
 for (i=a;i<=b;i++)
 {
   int reverse=0,rem,temp=i;
   while(temp!=0)
   {
     rem=temp%10;
     reverse=reverse*10+rem;
     temp/=10;
   }
   if(reverse==i)s+=i;
 }
   printf("sum is %ld\n",s);
  }

	return 0;
}

=================================================================

Odd Triangle

#include <stdio.h>
int main()
{
  int a,b;
  scanf("%d",&a);
  b=a*a*a;
  printf("%d",b);
	return 0;
}

=================================================================

Radius of a Circle

#include <stdio.h>
#include<math.h>
int main()
{ int a,b,c;
  scanf("%d%d%d",&a,&b,&c);
 double radius;
 float s=((a+b+c)*1.0)/2.0;
 radius= sqrt ((s-a)*(s-b)*(s-c)/s);
 radius=radius;
 printf("Radius=%0.2f",radius);

	return 0;
}

=======================================================

Cyclic Number

#include<stdio.h>
void cyclicSwap(int *a,int *b,int *c);

int main()
{
    int a, b, c;

   
    scanf("%d %d %d",&a,&b,&c);

   
   

    cyclicSwap(&a, &b, &c);

   
    printf("%d\n%d\n%d",a, b, c);

    return 0;
}
void cyclicSwap(int *a,int *b,int *c)
{

    int temp;

   
    temp = *b;
    *b = *a;
    *a = *c;
    *c = temp;
}

======================================================

Finding OR of two numbers

#include <stdio.h>
int main()
{ int a,b;
 scanf("%d%d",&a,&b);
 printf("Bitwise OR of %d and %d is:%d",a,b,a|b);


	return 0;
}

========================================================

FOUR SEASONERS

#include <stdio.h>
int main()
{
  int X1,X2,X3,Y1,Y2,Y3;
 float a,b;
 scanf("%d",&X1);
 scanf("%d",&Y1);
 scanf("%d",&X2);
 scanf("%d",&Y2);
 scanf("%d",&X3);
 scanf("%d",&Y3);
 a=(float)(X1+X2+X3)/3;
 b=(float)(Y1+Y2+Y3)/3;
 printf("Dinesh house is located at (%.1f,%.1f)\n",a,b);

	return 0;
}

============================================================
 
Make an Order

#include <stdio.h>
int main()
{
        int i,num,arr[1000001]={0},n;
        scanf("%d",&num);
        for(i=0;i<num;i++)
        {
               scanf("%d",&n);
               arr[n]++;
        }
        for(i=0;i<1000001;i++)
               if(arr[i])
                       while(arr[i]--)
                               printf("%d\n",i);
  
  return 0;
}

=========================================================

Quotient Remainder

#include <stdio.h>
int main()
{
  int d,rem,di,q;
  scanf("%d%d",&d,&di);
  rem=d%di;
  q=d/di;
  printf("%d\n%d",q,rem);

	return 0;
}

=====================================================================

Finding bitwise EXOR of two numbers

#include <stdio.h>
int main()
{
	int a,b;
  scanf("%d %d",&a,&b);
  printf("Bitwise EX-OR of %d and %d is=%d",a,b,a^b);
	return 0;
}

================================================================

Bitwise operator

#include <stdio.h>
 
int main()
{
    long number, tempnum;
 
  
    scanf("%ld", &number);
    tempnum = number;
    /*  left shift by two bits */
    number = number << 2;
    printf("%ld*4=%ld\n", tempnum, number);
  return 0;
}

=============================================================

Scanning Int and string by retailer

#include <stdio.h>
int main()
{	char a[15];
 	int x;
 scanf("%s",&a[0]);
 scanf("%d",&x);
 printf("PRODUCT NAME:%s\nCOST:%d",a,x);

	return 0;
}

=============================================================

Pogo Stick Jump

#include <stdio.h>
#include<math.h>

int main()
{
float power,power1,power2,sqr;
  int x1=3,y1=4;
  int x2,y2;
  scanf("%d %d",&x2,&y2);
  power1=pow((x2-x1),2);
  power2=pow((y2-y1),2);
  power=power1+power2;
  sqr=sqrt(power);
  printf("Raju needs %.0f jumps",sqr);
	return 0;
}

================================================================

Counting and Summing

#include<stdio.h>
int main()
{int i;
  int x,a,b;
  scanf("%d",&x);
  int z[x];
  for(i=0;i<x;i++)
  {
    scanf("%d",&z[i]);
          if(z[i]>0)
          {
            a++;
          }
          else b+=z[i];
  }
          printf("Positive Count=%d\nNegative Sum=%d",a,b);
          return 0;
}

===========================================================
FENCING THE GROUND

  #include<stdio.h>
int main(){
  int l,w;

  scanf("%d",&l);

  scanf("%d",&w);
  printf("Required length is %dm",(2*l)+(2*w));
  printf("\nRequired quantity of carpet is %dsqm",l*w);
  return 0;
}

==========================================================

Finding Steel Grade


#include <stdio.h>
 
int main() {
	int t,H,T;
	float C;
	scanf(" %d",&t);
	while(t--)
	{
	    scanf(" %d %f %d",&H,&C,&T);
	    if(H>50&&C<.7&&T>5600)          printf("Grade 10\n");
	    else if(H>50&&C<.7)          printf("Grade 9\n");
	    else if(C<.7&&T>5600)          printf("Grade 8\n");
	    else if(H>50&&T>5600)          printf("Grade 7\n");
	    else if(H>50||C<.7||T>5600)          printf("Grade 6\n");
	    else                            printf("Grade 5\n");
	}
	return 0;
}
=======================================================
Multiplication for a child

#include <stdio.h>
int main()
{
  int a,b;
  float result;
  scanf("%d%d",&a,&b);
  result=a*b;
  printf("multiplication of the two numbers is %0.2f",result);
	return 0;
}
======================================================


Sum of Puppy
#include<stdio.h>
int main()
{
    int a,b,c;
    scanf("%d",&a);
    while(a--)
    {
        scanf("%d %d",&b,&c);
        while(b--)
        {
            c=(c*(c+1))/2;
        }
        printf("%d\n",c);
    }
    return 0;
}

=======================================

Multiplication for a child
#include <stdio.h>
int main()
{
	int a;
  int b;
  scanf("%d %d",&a,&b);
  float ans;
  ans=a*b;
  printf("multiplication of the two numbers is %.2f",ans);
	return 0;
}

==========================================================
 
Number Generation
#include <stdio.h>
int main()
{
	int a;
  	int b;
  	scanf("%d %d",&a,&b);
  	while(a<b)
    {	if(a%2==0)
    {	if(!(a%3==0))
      if(!(a%5==0))
    {	printf("%d\n",a);
    }
    }
     a++;
    }
	return 0;
}

===============================================

 Calculating SP
#include <stdio.h>
int main()
{
  int a;
  int b;
  float sp;
  int x;
  scanf("%d %d",&a,&b);
  x=(100-b);
  sp=(x*a)/100;
  printf("The selling price of the cycle is Rs=%.2f",sp);
	return 0;
}
======================================================

DISPLAY SIZE
#include<stdio.h>
#include<math.h>
int main()
{int n;
 scanf("%d",&n);
 
 int a = sqrt(n); 
	while(a > 0)
    {if((n%a) == 0)
			break;
		a--;
    }
	printf("%d %d",a, n/a);
          
          return 0;
      }

===================================================

ASCII code
#include <stdio.h>
 
int main()
{
  char ch;
  scanf("%c",&ch);
  
  
  printf("%d",ch);
  return 0;
}

=============================================

Calculating Percentage
#include <stdio.h>
int main()
{
	int a,b,c;
  scanf("%d %d %d",&a,&b,&c);
  printf("The gain percentage is=%.2f",((c-a-b)*1.0/(a+b))*100);
  
	return 0;
}

==============================================

Computing X
#include <stdio.h>
int main()
{
	float n,p,x;
  	scanf("%f %f",&n,&p);
  	x=(100*n)/(100+p);
  printf("%.2f",x);
	return 0;
}

=============================================

Quotient Remainder
#include <stdio.h>

int main()
{
	int dividend, divisor;
	int quotient, remainder;
	
	
	scanf("%d",&dividend);
	
	scanf("%d",&divisor);
	
	quotient= dividend/divisor;
	remainder= dividend%divisor;
	
	printf("%d\n%d",quotient,remainder);
	
	return 0;
}

=====================================================

Black Jack
#include<stdio.h>
#include<string.h>
#include<math.h>


int main()
{
	int n;
	scanf("%d",&n);
	n=n-10;
	if(n>11)
	{
		printf("Invalid Input\n");
	}
	else if(n==11)
	{
		printf("4\n");
	}
	else if(n==10)
	{
		printf("15\n");
	}
	else if(n<10&&n>=1)
	{
		printf("4\n");
	}
	else if(n<=0)
	{
		printf("Invalid Input\n");
	}

	return 0;
}
============================================================

Finding OR of two numbers
#include <stdio.h>
int main()
{
	int a,b;
  scanf("%d %d",&a,&b);
  printf("Bitwise OR of %d and %d is:%d",a,b,a|b);
	return 0;
}
==============================================================================================================//End of SESSION 3
==============================================================================================================//End of SESSION 3
==============================================================================================================//End of SESSION 3
==============================================================================================================


//End of SESSION 3

SESSION 4



=========

COUNTING BITS
# include <stdio.h>
int binary(int n)
{
	int r=0;;
	while(n)
	{
		r=r+n%2;
		n=n/2;
	}
	return r;
}
int main()
{
	int t,n,c,i;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		c=0;
		for(i=1;i<=n;i++)
		{
			c=c+binary(i);
		}
		printf("%d\n",c);
	}
	return 0;
} 

=======================================================

In/out
#include <stdio.h>
int main()
{
  int q,qq,qqq;
  scanf("%d",&q);
  scanf("%d",&qq);
  qqq=q/2;
  if(qq>=qqq)
    printf("IN");
  else
    printf("OUT");
  

	return 0;
}

======================================================

PRINT SERIES
#include <stdio.h>
int main()
{
  int n,i,j,s;
  scanf("%d",&n);
  for(i=1;i<=n;i++)
  {
    s=0;
    for(j=1;j<=i;j++)
    {
      s=s+j;
    }
    printf("%d ",s);
  }
  

	return 0;
}

===================================================

PERFECT OR NOT
#include <stdio.h>
int main()
{
  int q,s=0,i;
  scanf("%d",&q);
  for(i=1;i<q;i++)
  {
    if(q%i==0)
      s=s+i;
  }
  if(s==q)
    printf("%d is a perfect number",q);
  else
    printf("%d is not a perfect number",q);

	return 0;
}

=========================================================

Sum of Digits
#include <stdio.h>
int main()
{
  int q,s,i,qq,r;
  scanf("%d",&q);
  for(i=1;i<=q;i++)
  {
    scanf("%d",&qq);
    s=0;
    while(qq!=0)
    {
      r=qq%10;
      qq=qq/10;
      s=s+r;
    }
    printf("%d\n",s);
  }
      

	return 0;
}

======================================================

Reverse a number
#include <stdio.h>
int main()
{
  int q,r,qq=0;
  scanf("%d",&q);
  while(q!=0)
  {
    r=q%10;
    q=q/10;
    qq=qq*10+r;
  }
  printf("%d",qq);
    

	return 0;
}

==============================================

Sum of the first and last digit
#include <stdio.h>
int main()
{
  int n,i,a;
  scanf("%d",&n);
  int f,l,s;
  for(i=1;i<=n;i++)
  {
    scanf("%d",&a);
    f=a%10;
    while(a!=0)
    {
      if(a/10==0)
        l=a;
      a=a/10;
    }
    s=f+l;
    printf("%d\n",s);
  }
	return 0;
}

=======================================================

A Task	

#include<stdio.h>
int main()
{
  int time,t[3];
  
  scanf("%d",&time);
  
  scanf("%d",&t[0]);
  
  scanf("%d",&t[1]);
  
  scanf("%d",&t[2]);
 
    if((t[0]<t[1])&&(t[0]<t[2]))
    {
      if(t[0]<time)
        printf("First person wins!!");
      else
        printf("No person wins!!");
    }
    else if((t[1]<t[0]))
    {
      if (t[1]<time)
      printf("Second person wins!!");
      else
        printf("No person wins!!");
    }
    else 
      if(t[2]<time)
      {
      printf("Third person wins!!");
      }
  else
    printf("No person wins!!");
  return 0;
}

==========================================================

Good number
#include<stdio.h>
#include<math.h>
int main()
{
    int t,i,l,r,sum,j,k,s,a,d,e;
    scanf("%d",&t);
    for(i=1;i<=t;i++)
    {
        sum=0;
        scanf("%d %d",&l,&r);
        for(j=l;j<=r;j++)
        {
            X:
            if(j>r)
            {
                break;
            }
            for(k=2;k<=sqrt(j);k++)
            {
                if(j%(k*k)==0)
                {
                    j++;
                    goto X;
                }
            }
            s=1;
            a=j;
            k=2;
            while(a!=1)
            {
                d=0;
                e=0;
                while(a%k==0)
                {
                    a=a/k;
                    d=1;
                    e++;
                }
                if(d==1)
                {
                    s=s*((pow(k,(e+1))-1)/(k-1));
                }
                k++;
            }
            if((s%6==0||s%6==2)&&(j!=7)&&j!=21)
            {
                sum=sum+s;
            }
        }
        printf("%d\n",sum);
    }
    return 0;
}

=================================================================

Take a count
#include <stdio.h>
int main()
{
  int q,qq;
  scanf("%d",&q);
  while(q!=0)
  {
    q=q/10;
    qq++;
  }
  printf("%d",qq);

	return 0;
}

===================================================

Biased Chandan

#include <stdio.h>
 
int main()
{
    int N;
    scanf("%d",&N);   // no. of person
    int Temp,sum =0,Array[N],i=1;
    while(N--){
    	scanf("%d",&Temp);
    	Array[i] = Temp;
    	if(i == 1 && Temp == 0){
    		continue;
    	}
    	else if(i > 1 && Temp == 0){
    		i = i - 1;
    		sum = sum - Array[i];
    		continue;
    	}
    	else{
    		i = i + 1;
    		sum = sum + Temp;
    	}
    }
    printf("%d",sum);
    return 0;
}

=================================================================
Canteen Bill by offer
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
 
int main (void)
{
  long long result[24], min;
  long long a, b, c, d, e;
  int i;
  
  scanf("%lld %lld %lld %lld %lld", &a, &b, &c, &d, &e);
  
  result[0 ] = a + b - c * d / e;
  result[1 ] = a + b - c / d * e;
  result[2 ] = a + b * c / d - e;
  result[3 ] = a + b * c - d / e;
  result[4 ] = a + b / c * d - e;
  result[5 ] = a + b / c - d * e;
  
  result[6 ] = a - b + c * d / e;
  result[7 ] = a - b + c / d * e;
  result[8 ] = a - b * c + d / e;
  result[9 ] = a - b * c / d + e;
  result[10] = a - b / c + d * e;
  result[11] = a - b / c * d + e;
  
  result[12] = a * b - c + d / e;
  result[13] = a * b - c / d + e;
  result[14] = a * b + c - d / e;
  result[15] = a * b + c / d - e;
  result[16] = a * b / c + d - e;
  result[17] = a * b / c - d + e;
  
  result[18] = a / b - c * d + e;
  result[19] = a / b - c + d * e;
  result[20] = a / b * c - d + e;
  result[21] = a / b * c + d - e;
  result[22] = a / b + c * d - e;
  result[23] = a / b + c - d * e;
  
  min = 9223372036854775807;
  
  for(i = 0; i < 24; i++){
    if(result[i] > 0 && result[i] < min)
	  min = result[i];
  }
  printf("%lld", min);
  return 0;
}

============================================================

Binary sum
#include <stdio.h>
 
int main()
{
 
    long binary1, binary2;
    int i = 0, remainder = 0, sum[20];
 

    scanf("%ld", &binary1);

    scanf("%ld", &binary2);
    while (binary1 != 0 || binary2 != 0)
    {
        sum[i++] =(binary1 % 10 + binary2 % 10 + remainder) % 2;
        remainder =(binary1 % 10 + binary2 % 10 + remainder) / 2;
        binary1 = binary1 / 10;
        binary2 = binary2 / 10;
    }
    if (remainder != 0)
        sum[i++] = remainder;
    --i;
    while (i >= 0)
        printf("%d", sum[i--]);
    return 0;
}

==========================================================
Biased Chandan
#include <stdio.h>
 
int main()
{
    int N;
    scanf("%d",&N);   // no. of person
    int Temp,sum =0,Array[N],i=1;
    while(N--){
    	scanf("%d",&Temp);
    	Array[i] = Temp;
    	if(i == 1 && Temp == 0){
    		continue;
    	}
    	else if(i > 1 && Temp == 0){
    		i = i - 1;
    		sum = sum - Array[i];
    		continue;
    	}
    	else{
    		i = i + 1;
    		sum = sum + Temp;
    	}
    }
    printf("%d",sum);
    return 0;
}

==================================================

Blood Bank
 #include<stdio.h>
int main(){
  int age,w;
 
  scanf("%d",&age);
 
  scanf("%d",&w);
  if((age>18)&&(w>40))
    printf("Eligible to donate");
  else
    printf("Not Eligible to donate");
  return 0;
}
  
=====================================================

Sum of Digits
#include <stdio.h>
 
int main()
{int x;
 scanf("%d",&x);
 while(x--)
 {
  
   int n, t, sum = 0, remainder;
 
 
   scanf("%d", &n);
 
   t = n;
 
   while (t != 0)
   {
      remainder = t % 10;
      sum       = sum + remainder;
      t         = t / 10;
   }
 
   printf("%d\n", sum);
 }
   return 0;
}

==========================================================

VALID PERFECT SQUARE

#include <stdio.h>

int main()
{
    int a, n;
    
    scanf("%d", &n);
    for(a = 0; a <= n; a++)
    {
        if (n == a * a)
        {
            printf("TRUE");
            return 0;
        }
    }
    printf("FALSE");
    return 0;
}

=============================================================

Print 5 Sum of Positive Numbers 
 #include<stdio.h>
int main(){
  int n,sum=0,count=0,i=1,b;

  scanf("%d",&n);
  while(i<=n)
  {

    scanf("%d",&b);
    i++;
    if(b>=0)
    {
      count++;
      sum=sum+b;
    }
  }
  printf("Positive Numbers=%d\nSum=%d",count,sum);
  return 0;
}

==============================================================

Little Elephant and Movies
#include<stdio.h>
 
int compare(const void *a, const void *b)
{
 
	return(*(int *)b - *(int *)a);
 
}
 
int main()
{
 
	int t,n,k,i,j,l;
	int A[205];
	long long int mod = 1000000007;
	scanf("%d",&t);
	
	while(t--)
	{
		int num[205]= {0};
		scanf("%d %d",&n,&k);
		for(i=0;i<n;i++)
			scanf("%d",&A[i]);
			
		qsort(A,n,sizeof(int),compare);
		
		
		int m=0;
		long long int temp=1;
		//num[0] =1;
		
		for(i=0;i<n &&A[i]==A[0];i++);
		
			temp = 1;
			for(j=1;j<=i;j++)
				temp = (temp * j)% mod;
			
			num[1] = temp;
			m += i;
		
		//printf("num1 = %d\n",num[1]);
		for(;i<n;i=j)
		{
		
			for(j=i+1;j<n&&A[j]==A[i];j++);
			int n1 = j-i;
			
			temp =1;
			for(l=m+1;l<m+n1;l++)
				temp = (temp * l)%mod;
			int r;	
			for(r=k;r>=1;r--)
			{
			
				num[r+1] = (num[r+1] + (num[r] * ((temp * n1)%mod))%mod)%mod;
				num[r] = (num[r] * ((temp *m)%mod))%mod;
			}
			
			//for(l=1;l<=k;l++)
			//	printf("%d  ",num[l]);
				
			//printf("\n");
			m +=n1;
			
		
		}
		
		long long int ans=0;
		
		for(i=1;i<=k;i++)
			ans = (ans+num[i])%mod;
			
		printf("%lld\n",ans);
	
	}
 
	return(0);
}

=====================================================================

PRIME NUMBER
#include <stdio.h>
int main()
{
    int n, i, flag = 0;


    scanf("%d",&n);

    for(i=2; i<=n/2; ++i)
    {
        // condition for nonprime number
        if(n%i==0)
        {
            flag=1;
            break;
        }
    }

    if (flag==0)
        printf("%d is a prime number",n);
    else
        printf("%d is not a prime number",n);
    
    return 0;
}

==================================================================

Approximate Value

#include <stdio.h>
int main()
{
  float a,s,d;
  scanf("%f",&a);
  scanf("%f",&s);
  d=s-a;
  if(d<=0.5)
    printf("Approximate number");
  else
    printf("Not an Approximate number");

	return 0;
}

==========================================================

PRINT 4 - Sum

#include<stdio.h>
int main()
{
    int a,b;
    scanf("%d %d",&a,&b);
    a=a-1;
    if(a>b)
    {
      while(a>b)
      {
        printf("%d ",a);
        a--;
      }
    }
  else
    printf("No Number");    
  return 0;
}

=======================================================

Dog and Cat

#include <stdio.h>
int main()
{
long long int cats,dogs,legs,t;
scanf("%lld",&t);
while(t>0)
{
scanf("%lld",&cats);
scanf("%lld",&dogs);
scanf("%lld",&legs);
if(cats<=2*dogs)
{
if((legs<=4*(cats+dogs))&&(legs>=4*dogs)&&((legs%4)==0))
printf("yes\n");
else
printf("no\n");
}
if(cats>2*dogs)
{
if((legs<=4*(cats+dogs))&&(legs>=4*(dogs+(cats-2*dogs)))&&((legs%4)==0))
printf("yes\n");
else
printf("no\n");
}
t=t-1;
}
return 0;
}
 
==================================================================================

TRACK THE NUMBER

#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int a[n],i,s;
  for(i=0;i<n;i++)
  {
    scanf("%d",&a[i]);
  }
  scanf("%d",&s);
  for(i=0;i<n;i++)
  {
    if(a[i]==s)
    {
      printf("%d",i);
      break;
    }
  }
    
  

	return 0;
}

=================================================================

Increment and output

#include <stdio.h>
int main()
{
  int n,i;
  scanf("%d",&n);
  for(i=1;i<=n;i++)
  {
    printf("%d ",i);
  }
  for(i=n-1;i>=1;i--)
  {
    printf("%d ",i);
  }

	return 0;
}

=====================================================

PRIME

#include<stdio.h>
int main()
{
	int n,i,j;
	long long int sum=0;
	scanf("%d",&n);
	printf("\n");
	int prime[n+1];
	prime[0]=0;
	prime[1]=0;
	for(i=2;i<=n;i++)
	prime[i]=1;
	for(i=2;i*i<=n;i++)
	{
		if(prime[i]==1)
		{
			for(j=2;i*j<=n;j++)
		    {
			    prime[i*j]=0;
		    }
	    }
	}
	for(i=0;i<=n;i++)
	{
		if(prime[i]==1)
	      sum+=i;
    }
    printf("%lld\n",sum);
    return 0;
}
 
========================================================

Pattern 2

#include <stdio.h>
int main()
{int i,c,rows;
 //printf ("rows");
 scanf("%d",&rows);
 for(i=rows;i>=1;i--)
 {
   for(c=1;c<=i;c++)
     printf("#");
   printf("\n");
 }
	return 0;
}

=========================================================
 
REVERSE

#include <stdio.h>
 
int main(){
	
	int t;
	scanf("%d",&t);
	while(t--){
		char name[10];
		scanf("%s",name);
		
		((name[0]-'0')%2==1)? printf("ODD\n") : printf("EVEN\n");
	}
	
	return 0;
}
 
============================================================================

Sum of Digits

#include<stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  while(n--)
  {
      long num, digit, sum = 0;
 
   
    scanf("%ld", &num);
 
    while (num > 0)
    {
        digit = num % 10;
        sum  = sum + digit;
        num /= 10;
    }
    
    printf("%ld", sum);
    
  }
  return 0;
}

======================================================================

Sum of Digits

#include<stdio.h>
int main(){
	int t,n,sum;
	scanf("%d",&t);
	while(t--){
		scanf("%d",&n);
		
		sum = 0;
		while(n!=0){
			sum += n%10;
			n /= 10;
		}
		
		printf("%d\n",sum);
	}
	return 0;
} 

===================================================================
 
Sum of the first and last digit

#include<stdio.h>
int main()
{
	int N,T,rem,rev,tem,con;
	scanf("%d", &T);
	while (T--)
	{
		scanf("%d", &N);
		con = N % 10;
		while (N != 0)
		{
			rev = 0;
			rem = N % 10;
			rev = rev * 10 + rem;
			N = N / 10;
		}
		tem = rev % 10;
		printf("%d\n", con + tem);
 
	}
return 0;
}

=================================================================
 
PRINT 4 - Sum

 #include<stdio.h>
int main(){
    int a,b;
  
    scanf("%d",&a);
  
    scanf("%d",&b);
  if(a!=b)
  {
    while(b<a)
    {
      
        if((a-1)==b)
          break;
      printf("%d ",a-1);
      a--;
    }
  }
  else
    printf("No Number");
    return 0;
  }
   
 
===================================================================


SWAP FIRST AND LAST DIGIT

#include <stdio.h>
#include <math.h>

int main()
{
    int num, swappedNum;
    int firstDigit, lastDigit, digits;

    /* Input number from user */
    
    scanf("%d", &num);

    /* Find last digit */
    lastDigit  = num % 10;

    /* Find total number of digit - 1 */
    digits     = (int)log10(num); 

    /* Find first digit */
    firstDigit = (int)(num / pow(10, digits)); 

    swappedNum  = lastDigit;
    swappedNum *= (int) pow(10, digits);
    swappedNum += num % ((int) pow(10, digits));
    swappedNum -= lastDigit;
    swappedNum += firstDigit;

  
    printf("%d", swappedNum);

    return 0;
}

===============================================================

Canteen Bill by offer

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
 
int main (void)
{
  long long result[24], min;
  long long a, b, c, d, e;
  int i;
  
  scanf("%lld %lld %lld %lld %lld", &a, &b, &c, &d, &e);
  
  result[0 ] = a + b - c * d / e;
  result[1 ] = a + b - c / d * e;
  result[2 ] = a + b * c / d - e;
  result[3 ] = a + b * c - d / e;
  result[4 ] = a + b / c * d - e;
  result[5 ] = a + b / c - d * e;
  
  result[6 ] = a - b + c * d / e;
  result[7 ] = a - b + c / d * e;
  result[8 ] = a - b * c + d / e;
  result[9 ] = a - b * c / d + e;
  result[10] = a - b / c + d * e;
  result[11] = a - b / c * d + e;
  
  result[12] = a * b - c + d / e;
  result[13] = a * b - c / d + e;
  result[14] = a * b + c - d / e;
  result[15] = a * b + c / d - e;
  result[16] = a * b / c + d - e;
  result[17] = a * b / c - d + e;
  
  result[18] = a / b - c * d + e;
  result[19] = a / b - c + d * e;
  result[20] = a / b * c - d + e;
  result[21] = a / b * c + d - e;
  result[22] = a / b + c * d - e;
  result[23] = a / b + c - d * e;
  
  min = 9223372036854775807;
  
  for(i = 0; i < 24; i++){
    if(result[i] > 0 && result[i] < min)
	  min = result[i];
  }
  printf("%lld", min);
  return 0;
}
 

=================================================================

Pattern 4

#include <stdio.h>
int main()
{
    int i, j, rows;

    
    scanf("%d",&rows);

    for(i=1; i<=rows; ++i)
    {
        for(j=1; j<=i; ++j)
        {
            printf("#");
        }
        printf("\n");
    }
    return 0;
}

=======================================================================

Grading system

#include <stdio.h>
 
int main(void) {
	int t,H,T;
	float C;
	scanf(" %d",&t);
	while(t--)
	{
	    scanf(" %d %f %d",&H,&C,&T);
	    if(H>50&&C<.7&&T>5600)          printf("%d\n",10);
	    else if(H>50&&C<.7)          printf("%d\n",9);
	    else if(C<.7&&T>5600)          printf("%d\n",8);
	    else if(H>50&&T>5600)          printf("%d\n",7);
	    else if(H>50||C<.7||T>5600)          printf("%d\n",6);
	    else                            printf("%d\n",5);
	}
	return 0;
}

==================================================================

Mickey Mouse

#include<stdio.h>
int main(){
  int n;
  
  scanf("%d",&n);
  if((n%3==0)&&(n%7==0))
    printf("This balloon can fly to miney");
  else
    printf("This balloon cannot fly to miney");
  return 0;
}
   
   
================================================================

TRIANGULAR NUMBERS

#include<stdio.h>
int main()
{
    int num,n;
  scanf("%d",&num);
  int x=0;
  if (num < 0)
  {   x=0;goto xyz;}
    int sum = 0;
    for (n=1; sum<=num; n++)
    {
        sum = sum + n;
        if (sum==num)
        {   x=1;goto xyz;}
    }
   xyz:
if (x==1)
 printf("YES");
    else
        printf("NO");

    return 0;
}

=================================================================

Pattern 3

#include<stdio.h>

int main()
{
 int num,c;
 
 scanf("%d",&num);
 for(; num>=1; num--)
 {
  for(c=1; c<=num; c++)
     printf("@");
  printf("\n");
 }

 return 0;
}
 
==============================================================

Dog and Cat

#include <stdio.h>
int main()
{
long long int cats,dogs,legs,t;
scanf("%lld",&t);
while(t>0)
{
scanf("%lld",&cats);
scanf("%lld",&dogs);
scanf("%lld",&legs);
if(cats<=2*dogs)
{
if((legs<=4*(cats+dogs))&&(legs>=4*dogs)&&((legs%4)==0))
printf("yes\n");
else
printf("no\n");
}
if(cats>2*dogs)
{
if((legs<=4*(cats+dogs))&&(legs>=4*(dogs+(cats-2*dogs)))&&((legs%4)==0))
printf("yes\n");
else
printf("no\n");
}
t=t-1;
}
return 0;
}

==================================================================

Chef and Balls

#include<stdio.h>
 
int main()
{
	int x;
	printf("1\n");
	fflush(stdout);
	printf("3 1 2 2\n");
	fflush(stdout);
	printf("3 3 4 4\n");
	fflush(stdout);
	scanf("%d",&x);
	printf("2\n");
	fflush(stdout);
	if(x==0)
	{
		printf("5");
		fflush(stdout);
	}
	else if(x==1)
	{
		printf("1");
		fflush(stdout);
	}
	else if(x==2)
	{
		printf("2");
		fflush(stdout);
	}
	else if(x==-1)
	{
		printf("3");
		fflush(stdout);
	}
	else if(x==-2)
	{
		printf("4");
		fflush(stdout);
	}
	return 0;
}

==============================================================
 
Duplicate Detection
#include <stdio.h>
int main()
{	int size,i,j,temp;
 	scanf("%d",&size);
 	int a[size];
	for(i=0;i<size;i++)
    {
      scanf("%d",&a[i]);
    }
     for (i = 0; i < size; i++)
    {
        for (j = 0; j < (size - i - 1); j++)
        {
            if (a[j] > a[j + 1])
            {
                temp = a[j];
                a[j] = a[j + 1];
                a[j + 1] = temp;
            }
        }
     }
for(i=0 ; i < size; i++)
	{for(j = i+1; j < size; j++)
		{     if(a[i] == a[j])
        		printf("%d ", a[i]);
		}

} 

	return 0;
}

=====================================================

Continuous Sum
#include <stdio.h>
int main()
{	
  		int a;
 scanf("%d",&a);
 int n=1;
  int x=0;
 int tempsum=0;

  while(++n<=a)
  {n=1;
   						
  while(a>=n)
    {		
    
    tempsum+=n;
    n++;
    x+=tempsum;
    }
    tempsum=0;
 
    
 }
    printf("Sum of series=%d",x); 
	return 0;

}

=====================================================

Good number

#include<stdio.h>
#include<math.h>
int main()
{
    int t,i,l,r,sum,j,k,s,b,a,c,d,e;
    scanf("%d",&t);
    for(i=1;i<=t;i++)
    {
        sum=0;
        scanf("%d %d",&l,&r);
        for(j=l;j<=r;j++)
        {
            X:
            if(j>r)
            {
                break;
            }
            for(k=2;k<=sqrt(j);k++)
            {
                if(j%(k*k)==0)
                {
                    j++;
                    goto X;
                }
            }
            s=1;
            a=j;
            k=2;
            while(a!=1)
            {
                d=0;
                e=0;
                while(a%k==0)
                {
                    a=a/k;
                    d=1;
                    e++;
                }
                if(d==1)
                {
                    s=s*((pow(k,(e+1))-1)/(k-1));
                }
                k++;
            }
            if((s%6==0||s%6==2)&&(j!=7)&&j!=21)
            {
                sum=sum+s;
            }
        }
        printf("%d\n",sum);
    }
    return 0;
}

========================================================

 PRINT 2
#include <stdio.h>
int main()
{	int a,b;
 	scanf("%d %d",&a,&b);
 	while(a>=b)
    {	printf("%d\n",a);
     a--;
    }

	return 0;
}

==================================================

Increment and output
#include <stdio.h>
int main()
{	int a;
 	scanf("%d",&a);
 	int x=1;
 while(x<=a)
 {printf("%d ",x);
   x++;
 }
 a--;
while(a>0)
{	printf("%d ",a);
 a--;
}
	return 0;
}

=================================================

Holiday Of Equality
#include <stdio.h>
int main()
{	
  	int maxn = 10;
int a[maxn], n,i;
	 scanf("%d", &n);
    for( i = 0; i < n; ++i)
    {
        scanf("%d", a + i);
    }
    int sum = 0, maxa = 0;
    for( i = 0; i < n; ++i)
    {
      if(maxa<a[i])
	{
		maxa=a[i];
	}
	 
      
    }
    for(i = 0; i < n; ++i)
    {
        sum += (maxa - a[i]);
    }
    printf("%d",sum);
    
	return 0;
}

========================================

Star formation

#include <stdio.h>
int main()
{
    int i, j, rows;

   
    scanf("%d",&rows);

    for(i=1; i<=rows; ++i)
    {
        for(j=1; j<=i; ++j)
        {
            printf("*");
        }
        printf("\n");
    }
    return 0;
}


=======================================

A Task
#include <stdio.h>
int main()
{
  
 int a;
  scanf("%d",&a);
   int x,y,z;	
  scanf("%d %d %d", &x, &y, &z);
  if((x<y)&&(x<z)&&(x<a))  
    printf("First person wins!!");
  else if((y<z)&&(y<a))
      printf("Second person wins!!");
      else if(z<a)
        printf("Third person wins!!");
  else
    printf("No person wins!!");
return 0;

}

=======================================

Better or Not
  #include<stdio.h>
int main(){
  int s1,s2;

  scanf("%d",&s1);

  scanf("%d",&s2);
  if(s1<s2)
    printf("College 2 is better");
  else
    printf("College 1 is better");
  return 0;
}

======================================

 Print 6- Count of positive and negative
 #include<stdio.h>
int main(){
  int n,i=1,b,count=0,count1=0;
  
  scanf("%d",&n);
  while(i<=n)
  {
   
    scanf("%d",&b);
    if(b>=0)
      count++;
    else
      count1++;
    i++;
  }
  printf("positive numbers count=%d",count);
  printf("\nnegative number count=%d",count1);
  return 0;
}

==============================================================================================================
//End of SESSION 4

==============================================================================================================
//End of SESSION 4

==============================================================================================================
//End of SESSION 4

==============================================================================================================
//End of SESSION 4

SESSION 5

=========

Array Processing
#include <stdio.h>
int main()
{
  int a,q,i,p=0,n=0;
  scanf("%d",&a);
  for(i=1;i<=a;i++)
  {
    scanf("%d",&q);
    if(q>=0)
      p++;
    else
      n=n+q;
  }
  printf("Count of positive numbers=%d\n",p);
  printf("Sum of negative numbers=%d",n);
	
  
  
  return 0;
}

============================================================

Coin Flip
#include<stdio.h>
int main()
{
	unsigned long int n=0;
	unsigned int q=0,i=0,t=0,gd=0,pos=0;
	unsigned int out[200000];
	scanf("%d",&t);
	if(t>=1 && t<=10)
	{
		while(t>0)
		{
			scanf("%d",&gd);
			if(gd>=1 && gd<=20000)
			{
				while(gd>0)
				{
					scanf("%d %ld %d",&i,&n,&q);
					if((i>=1 && i<=2) && (n>=1 && n<=1000000000) && (q>=1 && q<=2))
					{
						if(n%2)
							(i==q)?(out[pos++]=n>>1):(out[pos++]=(n>>1)+1);
						else
							out[pos++]=n>>1;
					}
					gd--;
				}
			}
			t--;
		}
		for(t=0;t<pos;t++)
		printf("%d\n",out[t]);
	}
	return 0;
}

=============================================================================================================

Duplicate Removal
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int a[n],i,j;
  for(i=0;i<n;i++)
  {
    scanf("%d",&a[i]);
  }
  int x=0,m;
  for(i=0;i<n-1-x;i++)
  {
    for(j=i+1;j<n-x;j++)
    {
      if(a[i]==a[j])
      {
        for(m=j;m<n-1-x;m++)
        {
          a[j]=a[j+1];
        }
        x++;
      }
    }
  }
  for(i=0;i<n-x;i++)
  {
    printf(" %d",a[i]);
  }
  
    
   return 0;
}

===========================================================================

Alternate
#include <stdio.h>
int main()
{
  int q,i;
  scanf("%d",&q);
  int qq[q];
  for(i=0;i<q;i++)
  {
    scanf("%d",&qq[i]);
  }
  for(i=0;i<q;i=i+2)
  {
    printf("%d ",qq[i]);
  }
  

	return 0;
}

=======================================================

DIAGONAL MATRIX
#include <stdio.h>
int main()
{
 int q,w,qq,n=0;
  scanf("%d",&qq);
  int qqq[qq][qq];
  for(q=1;q<=qq;q++)
  {
    for(w=1;w<=qq;w++)
    {
      scanf("%d",&qqq[q][w]);
    }
  }
  for(q=1;q<=qq;q++)
  {
    for(w=1;w<=qq;w++)
    {
      if(q!=w)
        if(qqq[q][w]!=0)
        {
          n++;
        }
    }
  }
  if(n==0)
    printf("yes");
  else
    printf("no");

	return 0;
}

=========================================================

Fibonacci numbers
#include <stdio.h>
#define MOD 1000000007
#define lli long long int
 
lli expo(lli x, lli y) {
  lli z = 1;
  while (y > 0) {
    if (y & 1) z = (z*x)%MOD;
    y = y>>1;
    x = (x*x)%MOD;
  }
  return z;
}
 
void mul1(lli F[2][2], lli M[2][2]) {
  lli x = (((F[0][0]*M[0][0])%MOD)+((F[0][1]*M[1][0])%MOD))%MOD;
  lli y = (((F[0][0]*M[0][1])%MOD)+((F[0][1]*M[1][1])%MOD))%MOD;
  lli z = (((F[1][0]*M[0][0])%MOD)+((F[1][1]*M[1][0])%MOD))%MOD;
  lli w = (((F[1][0]*M[0][1])%MOD)+((F[1][1]*M[1][1])%MOD))%MOD;
  F[0][0] = x;
  F[0][1] = y;
  F[1][0] = z;
  F[1][1] = w;
}
 
void pow1(lli F[2][2], lli n) {
  if(n==0 || n==1) return;
  pow1(F, n/2);
  mul1(F, F);
  if (n%2!=0) {
    lli M[2][2] = {{2,4},{1,0}};
    mul1(F, M);
  }
}
 
void fib1(lli ff[2], int n) {
  if (n == 0) {
    ff[0] = 1;
    ff[1] = 1;
    return;
  }
  if (n == 1) {
    ff[0] = 2;
    ff[1] = 1;
    return;
  }
  lli F[2][2] = {{2,4},{1,0}};
  pow1(F, n);
  //printf("|%lld %lld|\n|%lld %lld|\n", F[0][0], F[0][1], F[1][0], F[1][1]);
  ff[0] = F[0][0];
  ff[1] = F[1][0];
  return;
}
 
int main(void) {
  int n, m, i, l, r;
  lli arr[100001], xps[100001], xpd[100002], ff[2];
  lli ch1[100001], ch2[100001], cm1[100002], cm2[100002];
  lli  x, y, num1, num2, den1, den2, sum;
  char c[9];
 
  scanf("%d %d", &n, &m);//n=m=100000;
  for (i=0; i<n; i++) {
    scanf("%lld", &arr[i]);
    //arr[i] = 1000000000;
  }
 
  // ch1[0] = 1; ch1[1] = 6; ch1[2] = 16; ch1[3] = 56; ch1[4] = 176;
  // ch2[0] = 1; ch2[1] = 2; ch2[2] = 8; ch2[3] = 24; ch2[4] = 80;
  for (i=0; i<n; i++) {
    fib1(ff, arr[i]);
    xps[i] = expo(2, arr[i]);
    ch1[i] = ((((ff[0]+MOD)-ff[1])%MOD)+xps[i])%MOD;
    ch2[i] = ff[1];
    //printf("[%lld %lld]\n", ch1[i], ch2[i]);
  }
  cm1[0] = 1;
  cm2[0] = 0;
  xpd[0] = 1;
  for (i=1; i<=n; i++) {
    x = ( ((cm1[i-1]*ch1[i-1])%MOD) + (( ((cm2[i-1]*ch2[i-1])%MOD) *5)%MOD) )%MOD;
    y = ( ((cm1[i-1]*ch2[i-1])%MOD) + ((ch1[i-1]*cm2[i-1])%MOD) )%MOD;
    cm1[i] = x;
    cm2[i] = y;
    xpd[i] = (xpd[i-1]*xps[i-1])%MOD;
  }
  // for (i=0; i<=n; i++) {
  //   printf("%lld ", xpd[i]);
  // } printf("\n");
  // for (i=0; i<=n; i++) {
  //   printf("%lld %lld\n", cm1[i], cm2[i]);
  // } printf("\n");
 
  while (m--) {
    scanf("%s %d %d", c, &l, &r);//c[0]='Q';l=1;r=n;
    if (c[0]=='C') {
      l--;
      arr[l] = r;
      fib1(ff, r);
      xps[l] = expo(2, r);
      ch1[l] = ((((ff[0]+MOD)-ff[1])%MOD)+xps[l])%MOD;
      ch2[l] = ff[1];
      for (i=1; i<=n; i++) {
        x = ( ((cm1[i-1]*ch1[i-1])%MOD) + (( ((cm2[i-1]*ch2[i-1])%MOD) *5)%MOD) )%MOD;
        y = ( ((cm1[i-1]*ch2[i-1])%MOD) + ((ch1[i-1]*cm2[i-1])%MOD) )%MOD;
        cm1[i] = x;
        cm2[i] = y;
        xpd[i] = (xpd[i-1]*xps[i-1])%MOD;
      }
    } else {
      l--;
      r--;
      /*num1 = ch1[l];
      num2 = ch2[l];
      //printf("[%lld %lld]", num1, num2);
      for (i=l+1; i<=r; i++) {
        x = ( ((num1*ch1[i])%MOD) + (( ((num2*ch2[i])%MOD) *5)%MOD) )%MOD;
        y = ( ((num1*ch2[i])%MOD) + ((ch1[i]*num2)%MOD) )%MOD;
        num1 = x;
        num2 = y;
        //printf("[%lld %lld]", num1, num2);
      }*/
      num1 = (((cm2[r+1]*cm1[l])%MOD)*2)%MOD;
      num2 = ((num1+MOD) - ((((cm1[r+1]*cm2[l])%MOD)*2)%MOD) )%MOD;
      den1 = ((((cm1[l]*cm1[l])%MOD)+MOD) - (((cm2[l]*cm2[l])%MOD)*5)%MOD)%MOD;
      den2 = (((xpd[r+1]*expo(xpd[l],MOD-2))%MOD)*den1)%MOD;
      //num2 = (num2*2)%MOD;
      sum = (num2*expo(den2,MOD-2))%MOD;
      //printf("(%lld %lld %lld)", num2, den, sum);
      printf("%lld\n", sum);
    }
  }
  
  return 0;
} 

==========================================================================================
Class Homework
#include <stdio.h>
 #include<string.h>
#define max(a,b) (a)>(b)?(a):(b)
long long int dp[5][21];
char s[21];
long long extract(char *s,int i,int l)
{
    long long int  num=0;
    for(;i<=l;i++){
        num=num*10+s[i]-'0';
    }
    //printf("num=%lld\n",num);
    return num;
}
long long int fun(int n,int m)
{
    int i=0;
    long long num=0;
    long long temp;
    //printf("n=%dm=%d\n",n,m);
    if(n==0&&m==-1){
        //printf("return 0\n");
        return 0;
    }
    
    if(n<=0||m<0)
        return -1000000000000000LL;
    
    if(dp[n][m]!=-1000000000000000LL){
        return dp[n][m];
    }
    
    
    //printf("in here\n");
    for(i=m;i>=0;i--)
    {
         
        //printf("i=%d,s=%d\n",i,s[i]);
        if(m-i>0&&s[i]=='0'){
            //printf("in continue\n");
            continue;
        }
        else
            num=extract(s,i,m);
            if(num>1000000000000ll)break;
        temp=fun(n-1,i-1);
        //printf("n=%d,m=%d,temp=%lld,num=%lld\n",n,m,temp,num);
        dp[n][m]=max(dp[n][m],num+temp);
        //printf("in-->n=%d,m=%d,dp=%d\n",n,m,dp[n][m]);
    }
    //printf("n=%d,m=%d,dp=%lld\n",n,m,dp[n][m]);
    return dp[n][m];
}
 
int main()
{
    int t,i,j;
    long long int res;
    scanf("%d",&t);
    while(t--){
        scanf("%s",s);
        for(i=0;i<5;i++)
            for(j=0;j<21;j++)
                dp[i][j]=-1000000000000000LL;
        res=fun(4,strlen(s)-1);
        if(res<0)
            printf("The output is:unlucky\n");
        else
            printf("The output is:%lld\n",res);
 
    }
    
    return 0;
}

 
============================================================================

Lapindrome
#include<stdio.h>
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		char s[1000];
		scanf("%s",s);
		int i,len;
		for(len=0;s[len]!='\0';len++);
		if(len==2){	
			if(s[0]==s[1])
				printf("YES\n");
			else
				printf("NO\n");
			continue;
		}
		int a[26],b[26];
		for(i=0;i<26;i++){
			a[i]=0;
			b[i]=0;
		}
		for(i=0;i<len/2;i++)
			a[s[i]-'a']++;
		int flag=1;
		for(i=len-1;i>(len-1)/2;i--)
			b[s[i]-'a']++;
		for(i=0;i<26;i++)
			if(a[i]!=b[i]) flag=0;
		if(flag==0)
			printf("NO\n");
		else
			printf("YES\n");
	}
	return 0;
} 

=================================================================

Evenodd
#include <stdio.h>
int main()
{
  int q,qq,e=0,o=0;
  scanf("%d",&q);
  int n[q];
  for(qq=0;qq<q;qq++)
  {
    scanf("%d",&n[qq]);
  }
  for(qq=0;qq<q;qq++)
  {
    if(n[qq]%2==0)
      e++;
    else
      o++;
  }
  printf("%d\n%d",e,o);
  
  

	return 0;
}

==========================================================

game

#include<stdio.h>
int N;
long long M,K;
long long A[100000];
int main()
{
    int i;
    long long sum=0;
    long long max=0;
    scanf("%d %lld %lld",&N,&M,&K);
    for(i=0;i<N;i++)
    {
    scanf("%lld",&A[i]);
    A[i]=(M-A[i])/K+1;
    
    if(max<A[i])
    max=A[i];
    
    sum+=A[i];
    }
    long long min=0;
    
    if((sum-max)%2==0)
    min=(sum-max)/2;
    else
    min=(sum-max)/2+1;
    
    long long ans=sum/2-min+1;
    ans=ans%(1000000007);
    printf("%lld\n",ans);
    
    return 0;
}

===============================================================

Day by Date
#include<stdio.h>
int main()
{
	int r,month[]={31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},i,d,m,y;
	char* day[]= {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
	
            scanf("%d %d %d", &d, &m, &y);
	    if (y % 4 == 0 && (y % 100 != 0 || y % 400 == 0))
		    month[1] = 29;
	     
	    if (y < 1900 || m < 1 || m > 12 || d < 1 || d > month[m - 1]) {
		    // printf("This is an invalid date.\n");
		    return 1;
	    }
	     
	    for (i = 1900; i < y; i++)
		    if (i % 4 == 0 && (i % 100 != 0 || i % 400 == 0))
			    d += 366;
		    else
			    d += 365;
	     
	    for (i = 0; i < m - 1; i++)
		    d += month[i];
	     
	    printf("%s\n", day[d % 7]);
	    return 0;
}


============================================================================

Sum of positive Numbers
  #include<stdio.h>
int main(){
  int n,a[20],i,sum=0;
  scanf("%d",&n);
  for(i=0;i<n;i++){
    scanf("%d",&a[i]);
    if(a[i]>0)
      sum=sum+a[i];
  }
  printf("sum=%d",sum);
  return 0;
}
  

==============================================================

Alternate
 #include <stdio.h>
    int main()
    {
 
       int x;
      scanf("%d",&x);
        int i;
       int array[x];
        for (i = 0; i < x; i++)
            scanf("%d", &array[i]);
 
       
        for (i = 0; i < x; i += 2)
            printf( "%d ", array[i]) ;
    return 0;
    }

====================================================

Bubbly Bubbly
#include<stdio.h>
int main()
{
 int a;
  scanf("%d",&a);
  int i,x[a];
  for(i=0;i<a;i++)
  {
    scanf("%d",&x[i]);
    
  }
  int j,temp;
     for (i = 0; i < a; i++)
    {
        for (j = 0; j < (a - i - 1); j++)
        {
            if (x[j] > x[j + 1])
            {
                temp = x[j];
                x[j] = x[j + 1];
                x[j + 1] = temp;
            }
        }
    }
    
    for (i = 0; i < a; i++)
    {
        printf("%d ", x[i]);
    }
  
  
  return 0;
}

===================================================

Mirror
#include <stdio.h>
int main()
{
int x;
  scanf("%d",&x);
  int a[x];
  int i;
  for(i=0;i<x;i++)
  {	scanf("%d",&a[i]);
    printf("%d ",a[i]);
    
  }
	return 0;
}

=================================================

Relational Operator
#include <stdio.h>
int main()
{
    int m, n;
 
    
    scanf("%d %d", &m, &n);
    if (m == n)
        printf("equal");
    else
        printf("not equal");
return 0;
}

===============================================

Searching something
#include <stdio.h>
int main()
{
int x,flag=1;
  scanf("%d",&x);
  int a[x];
  int i;
  for(i=0;i<x;i++)
    scanf("%d",&a[i]);
  int o;
  scanf("%d",&o);
  for(i=0;i<x;i++)
  {if(a[i]==o)
  { flag=1;
  break;
  }
   else
   {flag=0;
   
   }
    
  }
  if(flag==1)
  { printf("The number is found");
     
  }
  
  else
    printf("The number is not in the list");
	return 0;
}

================================================

Colored Array
#include<stdio.h>
#include<stdlib.h>
inline int read()
{
	int result=0;
	char c=getchar_unlocked();
	while(!(c>='0' && c<='9'))
		c=getchar_unlocked();
	while(c>='0' && c<='9')
	{
		result = result*10 + c-'0';
		c=getchar_unlocked();
	}
	return result;
}
typedef struct node
{
	int pos, val;
}node;
int cmp (const void * a, const void * b)
{
	const node *f = a, *s = b;
	return ( s->val - f->val );
}
int main()
{
	int t,n,m,k,a[1010],b[1010][1010],temp,i,j,max,maxcolor,total,l;
	node list[1010];
	t=read();
	while(t--)
	{
		n=read();
		m=read();
		k=read();
		for(i=0;i<n;i++)
		{
			a[i]=read();
			a[i]--;
		}
		for(i=0;i<n;i++)
			for(j=0;j<m;j++)
				b[i][j]=read();
		total=l=0;
		for(i=0;i<n;i++)
		{
			max=b[i][a[i]];
			maxcolor=a[i];
			for(j=0;j<m;j++)
			{
				temp=read();
				b[i][j]-=temp;
				if( b[i][j] > max )
				{
					maxcolor=j;
					max=b[i][j];
				}
			}
			if(a[i]==maxcolor)
			{
				//We dont need to change the color
				a[i]=-1;
				total+=max;
			}
			else
			{
				//change is stored in a list
				list[l].pos=i;
				list[l].val = max - b[i][a[i]];
				l++;
			}
		}
		qsort(list,l,sizeof(node),cmp);
		for(i=0;i<l && i<k;i++)
		{
			total += (list[i].val + b[list[i].pos][a[list[i].pos]]);
			a[list[i].pos]=-1;
		}
		for(i=0;i<n;i++)
		{
			if(a[i]!=-1)
				total+=b[i][a[i]];
		}
		printf("%d\n",total);
	}
	return 0;
} 

=========================================================

Minimum and Maximum
#include<stdio.h>
int main(){
	int t,i,n,a[50000],min;
	scanf("%d", &t);
	while(t--){
		scanf("%d", &n);
		for(i=0; i<n; i++){
			scanf("%d", &a[i]);
			if(i==0)
				min=a[0];
			if(a[i]<min)
				min=a[i];
		}
		printf("%d\n", (n-1)*min);
	}
	return 0;
} 

==============================================================

 Giant Element!

#include <stdio.h>
int main()
{	int x;
 scanf("%d",&x);
 int a[x],i;
 for(i=0;i<x;i++)
 {
   scanf("%d",&a[i]);
     
 }
int max;
 max=a[0];
 for(i=0;i<x;i++)
 {
 if(a[i]>max)
 max=a[i];
    }
 printf("%d",max);
	return 0;
}

===============================================================

 Bico Gaming

#include<stdio.h>
long long int a[101][51];
int main()
{
	int i,j;
	long long int b[60];
	a[0][0] = 1;
	for(i=1;i<=100;i++)
	for(j=0;j<=i;j++)
	{
		if(j==0)
		a[i][j] = a[i-1][j];
		else if(j==i)
		a[i][j] = a[i-1][j-1];
		else
		a[i][j] = a[i-1][j] + a[i-1][j-1];
	}
	
	int t,r,c,m=0;
	long long int g;
	scanf("%d",&t);
	while(t--)
	{
		m=0;
		scanf("%d %d %lld",&r,&c,&g);
		while(g>0)
		{
			i=c;
			while((a[i][c]<=g)&&(i<=99))
			i++;
			i--;
			b[++m] = a[i][c];
			g-=a[i][c];
			c--;	
		}
		printf("%d\n",m);
		for(i=1;i<=m;i++)
		printf("%lld ",b[i]);
		printf("\n");
	}
	return 0;
}
 
=============================================================================

Class Homework

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
 
#define MIN(a,b) (((a)<(b))?(a):(b))
#define MAX(a,b) (((a)>(b))?(a):(b))
 
#define MA 1000000000000000000 // 1e18
#define M  1000000007
#define MM 2000000000
#define N  21
#define K  100001
 
typedef long long ll;
typedef long double ld;
 
ll n,m;
char a[N];
ll s[N][5];
 
ll num(ll i, ll j) {
  ll r=0, k, p;
 
  if (i>j) return -1;
  if (i!=j && a[i]=='0')
    return -1;
 
  for(k=i;k<=j;k++) {
    p = a[k] - '0';
    r=r*10 + p;
  }
 
  if (r > 1000000000000) return -1;
  return r;
}
ll find(ll j, ll k) {
  ll i,r, q;
  if (k==1) {
    //if (j==0) return 0;
 
    q = num(0, j);
 
    return q;
  }
 
  if (s[j][k]!=-1) return s[j][k];
 
  s[j][k]=-1;
  for(i=0;i<j;i++) {
    r=find(i, k-1);
    if (r==-1) continue;
    q=num(i+1, j);
    if (q==-1) continue;
    s[j][k]=MAX(s[j][k], r + q);
  }
 
  //printf("%lld:%lld:%lld ", j, k, s[j][k]);
  return s[j][k];
}
 
int main() {
  ll t;
 ll r;
 
  t=1;
  scanf("%lld ", &t);
 
  while(t--) {
    scanf("%s", a);
    n=strlen(a);
 
    memset(s, -1, sizeof(s));
    r = find(n-1, 4);
    if (r==-1)
      puts("The output is:unlucky");
    else
      printf("The output is:%lld\n", r);
  
  }
  return 0;
}

===============================================================

Array Processing

#include<stdio.h>
int main()
{
  
  int a;
  scanf("%d",&a);
  int x[a];
  int i,cp,ns;
  for(i=0;i<a;i++)
  {
    scanf("%d",&x[i]);
    if(x[i]>=0)
      cp++;
    else
      ns+=x[i];
  }
  printf("Count of positive numbers=%d\nSum of negative numbers=%d",cp,ns);
  return 0;
}
==============================================================================
 
Array Deletion Element

#include <stdio.h>
int main()
{
  	int x,a;
  scanf("%d",&a);
  int b[a];
 int i;
 for( i=0; i<a; i++)
    {
        scanf("%d", &b[i]);
 }
  int temp;
 int z;
  scanf("%d",&z);
	if(!(z>=a))
    {
    temp=b[z];
    while(a>=x)
  {
    	if(b[x]==b[z])
        {		
          b[z]=0;
        }
      
 	   	x++;
  }
  printf("%d",temp);
    }
  else
    printf("Invalid Input");
	return 0;
}

========================================================================

DIAGONAL MATRIX

#include<stdio.h>
int main()
{
  int flag=1;
  int x,i,j;
  scanf("%d",&x);
  int a[x][x];
  for(i=0;i<x;i++)
    for(j=0;j<x;j++)
    {
      scanf("%d",&a[i][j]);
    }
   for(i=0;i<x;i++)
    for(j=0;j<x;j++)
    {
      if(a[i][i]==0)
      {flag=0;
       break;}
      else if(i!=j)
      {
        if(a[i][j]!=0)
        {
          flag=0;
          break;
        }
      }
    }
      if(flag==1)
      {
        printf("yes");
        
      }
        else
          printf("no");
      return 0;
}

=============================================================================

Array Deletion

#include <stdio.h>
int main()
{
  	int x,a;
  scanf("%d",&a);
  int b[a];
 int i;
 for( i=0; i<a; i++)
    {
        scanf("%d", &b[i]);
 }
  int temp;
 int z;
  scanf("%d",&z);
	if(!(z>=a))
    {
    temp=b[z];
    while(a>=x)
  {
    	if(b[x]==b[z])
        {		
          b[z]=0;
        }
      
 	   	x++;
  }
      printf("Array after deletion is\n");
for( i=0; i<a; i++)
    {	if(b[i]==temp)
      		continue;
        printf("%d ", b[i]);
}
         }
  else
    printf("Invalid Input");
	return 0;
}

=============================================================================

uncle jony

#include<stdio.h>
#define MAXSIZE 100
 
 
int main()
{
    int T;
    int n,k,i,j;
    int arr[MAXSIZE+1];
 
    scanf("%d",&T);
    for(i=1;i<=T;i++)
    {
        scanf("%d",&n);
        for(j=1; j<=n; j++) scanf("%d",&arr[j]);
        scanf("%d",&k);
 
        int kval = arr[k];
        int newpos=1;
        for(j=1; j<=n; j++)
            if(arr[j]<kval)newpos++;
        printf("%d\n", newpos);
    }
    return 0;
}
 

========================================================================
Evenodd

#include <stdio.h>
int main()
{	int s,a[30],x=0,y=0,i;
 	scanf("%d",&s);
 	for(i=0;i<s;i++)
    {scanf("%d",&a[i]);
    if(a[i]%2==0)
      x++;
     else
       y++;
    }
 printf("%d\n%d",x,y);
 

	return 0;
}

=======================================================================

Arrsumavg

#include  <stdio.h>
#define MAXSIZE 10
 
int main()
{
 
        int array[MAXSIZE];
	int i, num, negative_sum = 0, positive_sum = 0;
	float total = 0.0, average;
 
   
	scanf("%d", &num);
 
   
 
        for (i = 0; i < num; i++) 
        {
		scanf("%d", &array[i]);
	}
 
   
 
     
        /*  Summation starts */
 
        for (i = 0; i < num; i++) 
        {
 
		if (array[i] < 0) 
                {
			negative_sum = negative_sum + array[i];
		}
		else if (array[i] > 0)
                {
			positive_sum = positive_sum + array[i];
		}
		else if (array[i] == 0) 
                {
			;
		}
		total = total + array[i] ;
 
        }
 
        average = total / num;
 
        printf("Sum=%d\n", negative_sum);
 
        printf("Sum=%d\n", positive_sum);
 
        printf("Average=%.2f", average);
 return 0;
}

==========================================================

Making of a cake

#include<stdio.h>
#include<string.h>
int main(){
	int test;scanf("%d",&test);char a[100001],b[100001];
	while(test--){
		int n,k,i,j,ref=0;scanf("%d%d",&n,&k);scanf("%s%s",a,b);
		for(i=0;i<n;i++){
			for(j=i%k;j<n;j+=k)
			if(a[i]==b[j]) break;
			if(a[i]==b[j]) b[j]='0';
			else{ref=-1;break;}
		}
		if(ref==-1) printf("No\n");
		else printf("Yes\n");
	}
}
  
=======================================================

Lapindrome

#include<stdio.h>
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		char s[1000];
		scanf("%s",s);
		int i,j,len;
		for(len=0;s[len]!='\0';len++);
		if(len==2){	
			if(s[0]==s[1])
				printf("YES\n");
			else
				printf("NO\n");
			continue;
		}
		int a[26],b[26];
		for(i=0;i<26;i++){
			a[i]=0;
			b[i]=0;
		}
		for(i=0;i<len/2;i++)
			a[s[i]-'a']++;
		int flag=1;
		for(i=len-1;i>(len-1)/2;i--)
			b[s[i]-'a']++;
		for(i=0;i<26;i++)
			if(a[i]!=b[i]) flag=0;
		if(flag==0)
			printf("NO\n");
		else
			printf("YES\n");
	}
	return 0;
} 

================================================================

Stable marriage problem

#include <stdio.h>
#include <stdlib.h>
/*Men and women matrices are arrays where each
cell points to a linked list containing the order 
of preferences of each person.The starting cell of
each person has -1 to indicate he/she is not engaged.*/
struct node {
	int pref;
	struct node *next;
};
struct start {
	int selected;
	struct node *next;
};
struct gender {
	struct start* array;
};
 
struct node* addNodes(int size) {
	int index3, order;
	struct node *temp2, *head = NULL;
	for (index3 = 0; index3 < size; index3++) {
			scanf("%d", &order);
			if (!head) {
				head = (struct node *)calloc(1, sizeof(struct node));
				temp2 = head;
			} else {
				temp2->next = (struct node *)calloc(1, sizeof(struct node));
				temp2 = temp2->next;
			}
			order = order-1;
			temp2->pref = order;
			temp2->next = NULL;
		}
	return head;
}
//initialize the men and women matrices
void init(struct gender *arr, int size) {
	int index, order;
	
	arr->array = (struct start *)calloc(size, sizeof(struct start));
	for (index = 0; index < size; index++) {
			scanf("%d", &order);
			//men and women numbers start from 1 and indexes are form 0. So decrement.
			order -= 1;
			arr->array[order].selected = -1;
			arr->array[order].next = NULL;
			arr->array[order].next = addNodes(size);
		}
}
//Check if all the persons of the group are engaged.
int allEngaged(struct gender *arr, int n) {
	int index;
	for (index = 0; index < n ; index++) {
		//if any person has pref as -1, then he/she is not engaged. Hence return.
		if (arr->array[index].selected == -1) {
			return 1;
		}
	}
	return 0;
}
//check if the person at an index is free or not by checking his/her first cell. if -1 then free.
int checkFree(struct gender *arr, int num) {
	return arr->array[num].selected == -1 ? 1 : 0;
}
//engage men and women. assign the men and women numbers to persons of opposite gender.
void engage(struct gender **arr, struct gender **arr2, int num, int assign) {
	(*arr)->array[num].selected = assign;
	(*arr2)->array[assign].selected = num;
}
//check if the person assigned to a group has higher/lower preference then the new one.
int prefSatisfied(struct gender **arr, int num, int newAssign) {
	int assign = (*arr)->array[num].selected;
	struct node *temp = (*arr)->array[num].next;
	while(temp) {
		//the existing person has higher preference.
		if (temp->pref == assign) {
			return 0;
		} //new person has higher preference than old. 
		else if(temp->pref == newAssign) {
			return 1;
		}
		temp=temp->next;
	}
	return 0;
}
 
int main() {
	struct gender *women, *men;
	struct start head;
	struct node *temp;
	int cases, n, index, order;
	scanf("%d", &cases);
	while(cases--) {
		scanf("%d", &n);
		women = (struct gender *)calloc(1, sizeof(struct gender));
		men = (struct gender *)calloc(1, sizeof(struct gender));
		init(women, n);
		init(men, n);
		//check if all men are engaged. if yes terminate else run.
		while(allEngaged(men, n)) {
			for (index = 0; index < n; index++) {
				head = men->array[index];
				//check if men has not been assigned any woman.
				if (head.selected == -1) {
					temp = head.next;
					while(temp) {
						//if woman is free then assign that man to woman.
						if (checkFree(women, temp->pref)) {
							engage(&women, &men, temp->pref, index);
							break;
						} //check if preference condition is satisfied.
						else if (prefSatisfied(&women, temp->pref, index)) {
							/*if new man has higher prefrence than assigned man, 
							then assign new man to woman and set -1 the past man 
							to indicate not engaged.*/
							order = women->array[temp->pref].selected;
							engage(&women, &men, temp->pref, index);
							men->array[order].selected = -1;
							break;
						}
						/*if the man cannot be engaged to that woman then remove 
						  that woman fron the man's preference list.*/
						men->array[index].next = temp->next;
						temp = men->array[index].next;
					}
				}
			}	
		}
		//print men and women pairs.
		for (index = 0; index < n ; index++) {
			printf("%d %d\n", index+1, (men->array[index].selected)+1);
		}
		free(men);
		free(women);
	}
  return 0;
}
 
===================================================================================

Choose the second small

#include <stdio.h>
int main()
{
    int smallest, second;
    int  size, i;
        scanf("%d", &size);
    int array[size];
    for (i = 0 ; i < size; i++)
    {scanf("%d",&array[i]);}
       
        smallest = array[0];
        second= array[1];
   
   
    for (i = 0; i < size; i++) 
    {
        if (array[i] < smallest)
        {
        	second=smallest;
        	smallest = array[i];
        }
        else if (array[i] < second) 
        {
            second = array[i];
        }
    }
    printf("%d", second);
  return 0;
}

=============================================================


Sum of even and odd numbers
#include <stdio.h>
 
int main()
{
    int array[10], i, num;
  int sum1 =0;
  int sum=0;
 
   
    scanf("%d", &num);
   
    for (i = 0; i < num; i++)
    {
        scanf("%d", &array[i]);
    }
 
    for (i = 0; i < num; i++)
    {
        if (array[i] % 2 == 0)
        {
             sum+=array[i];
        }
    }
 
    for (i = 0; i < num; i++)
    {
        if ((array[i] % 2) != 0)
        {
 			sum1+=array[i];
        }
    }
  printf("even=%d",sum);
  printf("\nodd=%d",sum1);
  return 0;
}

===============================================


Array Deletion Element
#include <stdio.h>
int main()
{
  	int x,a;
  scanf("%d",&a);
  int b[a];
 int i;
 for( i=0; i<a; i++)
    {
        scanf("%d", &b[i]);
 }
  int temp;
 int z;
  scanf("%d",&z);
	if(!(z>=a))
    {
    temp=b[z];
    while(a>=x)
  {
    	if(b[x]==b[z])
        {		
          b[z]=0;
        }
      
 	   	x++;
  }
  printf("%d",temp);
    }
  else
    printf("Invalid Input");
	return 0;
}

==============================================

I am the Winner
#include<stdio.h>
#include<string.h>
int main()
{int n,i;
scanf("%d",&n);
int x[n];
 char s[n][20];
  int z=n;
   for(i=0;i<z;i++)
    {
       scanf(" %[^ ]",s[i]);
     	scanf("%d",&x[i]);
    }
   int  largest = x[0];
    for (i = 1; i < z; i++)
    {
        if (largest < x[i])
            largest = x[i];
    }
 int v;
    for (i = 0; i < z; i++)
    {
        if (x[i]==largest)
       v=i;     
    }
     int j;   
        for (j = 0; s[v][j]!='\0'; j++)
        {
            printf("%c", s[v][j]);
        }
        
 
 
 
    return 0;
}

================================================

Maximum Element
#include<stdio.h>
int main()
{
    int array[10], size, i, largest;
    
    scanf("%d", &size);
    
    for (i = 0; i < size; i++)
        scanf("%d", &array[i]);
    largest = array[0];
    for (i = 1; i < size; i++)
    {
        if (largest < array[i])
            largest = array[i];
    }
    printf("%d", largest);
    return 0;
}
===========================================

Colored Array
#include<stdio.h>
#include<stdlib.h>
inline int read()
{
	int result=0;
	char c=getchar_unlocked();
	while(!(c>='0' && c<='9'))
		c=getchar_unlocked();
	while(c>='0' && c<='9')
	{
		result = result*10 + c-'0';
		c=getchar_unlocked();
	}
	return result;
}
typedef struct node
{
	int pos, val;
}node;
int cmp (const void * a, const void * b)
{
	const node *f = a, *s = b;
	return ( s->val - f->val );
}
int main()
{
	int t,n,m,k,a[1010],b[1010][1010],temp,i,j,max,maxcolor,total,l;
	node list[1010];
	t=read();
	while(t--)
	{
		n=read();
		m=read();
		k=read();
		for(i=0;i<n;i++)
		{
			a[i]=read();
			a[i]--;
		}
		for(i=0;i<n;i++)
			for(j=0;j<m;j++)
				b[i][j]=read();
		total=l=0;
		for(i=0;i<n;i++)
		{
			max=b[i][a[i]];
			maxcolor=a[i];
			for(j=0;j<m;j++)
			{
				temp=read();
				b[i][j]-=temp;
				if( b[i][j] > max )
				{
					maxcolor=j;
					max=b[i][j];
				}
			}
			if(a[i]==maxcolor)
			{
				//We dont need to change the color
				a[i]=-1;
				total+=max;
			}
			else
			{
				//change is stored in a list
				list[l].pos=i;
				list[l].val = max - b[i][a[i]];
				l++;
			}
		}
		qsort(list,l,sizeof(node),cmp);
		for(i=0;i<l && i<k;i++)
		{
			total += (list[i].val + b[list[i].pos][a[list[i].pos]]);
			a[list[i].pos]=-1;
		}
		for(i=0;i<n;i++)
		{
			if(a[i]!=-1)
				total+=b[i][a[i]];
		}
		printf("%d\n",total);
	}
	return 0;
} 

==================================================================================

Compare 2 arrays
#include <stdio.h>
#include<string.h>
int main()
{
  	int array[15], size, i; 
    int b[15];
    scanf("%d", &size);
    int flag=0;
    for (i = 0; i < size; i++)
        scanf("%d", &array[i]);
  for (i = 0; i < size; i++)
        scanf("%d", &b[i]);
  

  for (i = 0; i < size; i++)
  {
    	if(array[i]==b[i])
        {	
          	flag=1;
        }
    else flag=0;
  }
if(flag==1)
{	
  	printf("yes");
}
  else if(flag==0)
    printf("no");
	return 0;
}

======================================================

Arrsumavg
#include <stdio.h>
int main()
{
	
   int array[10];
    int i, num, negative_sum = 0, positive_sum = 0;
    float total = 0.0, average;
 
    
    scanf("%d", &num);
    
    for (i = 0; i < num; i++)
    {
        scanf("%d", &array[i]);
    }
    
 
    
    for (i = 0; i < num; i++)
    {
        if (array[i] < 0)
        {
            negative_sum = negative_sum + array[i];
        }
        else if (array[i] > 0)
        {
            positive_sum = positive_sum + array[i];
        }
        else if (array[i] == 0)
        {
            ;
        }
        total = total + array[i] ;
    }
    average = total / num;
    printf("Sum=%d", negative_sum);
    printf("\nSum=%d", positive_sum);
    printf("\nAverage=%.2f", average);

	return 0;
}

================================================================
Increment
#include <stdio.h>
int main()
{	int size,i;
 scanf("%d",&size);
 int a[size];
 for(i=0;i<size;i++)
 {
   scanf("%d",&a[i]);
 }
 for(i=0;i<size;i++)
 {
   	a[i]+=1;
   printf("%d ",a[i]);
 }
	return 0;
}

=============================================

Choose the second small
#include <stdio.h>
int main()
{
    int smallest, second;
    int  size, i;
        scanf("%d", &size);
    int array[size];
    for (i = 0 ; i < size; i++)
    {scanf("%d",&array[i]);}
       
        smallest = array[0];
        second= array[1];
   
   
    for (i = 0; i < size; i++) 
    {
        if (array[i] < smallest)
        {
        	second=smallest;
        	smallest = array[i];
        }
        else if (array[i] < second) 
        {
            second = array[i];
        }
    }
    printf("%d", second);
  return 0;
}

=======================================

Magic Square
#include <stdio.h>
int main()
{
	 int arr[100][100];
 	 int n=3,i,j,sum=0,sum1=0,sum2=0,sum3=0,flag=1;
	 
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&arr[i][j]);
            if(i==j)
            {sum+=arr[i][j];
            }
    	}
    }
            
    for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {	sum1+=arr[i][j];
     	sum2+=arr[j][i];
     	if(i+j+1==n)
        	{
          		sum3+=arr[i][j];
        	}
    }
    if(sum!=sum1 || sum2!=sum)
    	{
      		flag=0;
    		break;
      
    	}
            
  		sum1=0;
    	sum2=0;
  }
  if(flag==1 && sum==sum3){
            printf("Yes");}
   else{
            printf("No");
      }      
	return 0;
}

==========================================================

Digital Clock

#include<stdio.h>
  int main()
 {    int t;
    scanf("%d",&t);
    while(t--)
     {     int x,y,ct,i,hour,min;
           scanf("%d%d",&hour,&min);
           ct=1;
           for(i=1;i<=9;i++)
              {     x=i;
                    y=i;
                    while(x<hour){
                       while(y<min){
                         ct++;
                         y=y*10+i;
                            }
                       y=i;
                       x=x*10+i;
                     }
               }
          printf("%d\n",ct);
      }
      return 0;
 }  
           
 
=========================================================

Choose the second small

#include <stdio.h>
int main()
{
    int smallest, second;
    int  size, i;
        scanf("%d", &size);
    int array[size];
    for (i = 0 ; i < size; i++)
    {scanf("%d",&array[i]);}
       
        smallest = array[0];
        second= array[1];
   
   
    for (i = 0; i < size; i++) 
    {
        if (array[i] < smallest)
        {
        	second=smallest;
        	smallest = array[i];
        }
        else if (array[i] < second) 
        {
            second = array[i];
        }
    }
    printf("%d", second);
  return 0;
}

=====================================================

Evenodd

#include <stdio.h>

#define MAX_SIZE 100 //Maximum size of the array

int main()
{
    int arr[MAX_SIZE];
    int i, size, even, odd;

    /* Input size of the array */

    scanf("%d", &size);

    /* Input array elements */

    for(i=0; i<size; i++)
    {
        scanf("%d", &arr[i]);
    }

    /* Assuming that there are 0 even and odd elements */
    even = 0;
    odd  = 0;

    for(i=0; i<size; i++)
    {
        /* If the current element of array is even then increment even count */
        if(arr[i]%2 == 0)
        {
            even++;
        }
        else
        {
            odd++;
        }
    }

    printf("%d\n", even);
    printf("%d", odd);

    return 0;
}

======================================================================================================

Compare 2 arrays

  #include<stdio.h>
int main(){
  int n,a[20],b[20],i,flag=0;
  scanf("%d",&n);
  for(i=0;i<n;i++)
    scanf("%d",&a[i]);
  for(i=0;i<n;i++){
    scanf("%d",&b[i]);
    if(a[i]<b[i])
      flag=1;
  }
  if(flag)
    printf("no");
  else
    printf("yes");
  
  
  return 0;
}

====================================================

Taller Corn

#include<stdio.h>
 
int main()
{
    int a[50],i,n,large,small;
    
    scanf("%d",&n);
    
 
    for(i=0;i<n;++i)
        scanf("%d",&a[i]);
    
    large=small=a[0];
    for(i=1;i<n;++i)
    {
        if(a[i]>large)
            large=a[i];
        if(a[i]<small)
            small=a[i];
    }
    
    printf("%d\n",large);
    printf("%d",small);
 
    return 0;
}

==============================================================

Mixtures

#include <stdio.h>
 
int main()
{
	int n;
	while(scanf("%d", &n) != EOF)
	{
		int i,j,k,min,color[100],mixture[100][100],smoke[100][100];
		for(i = 0; i < n; i++)
		{
			scanf("%d", &color[i]);
			mixture[i][i] = color[i];
		}
 
		for(i = 0; i < n; i++)
		{
			smoke[i][i] = 0;
			for(j = i+1; j < n; j++)
			{
				mixture[i][j] = (mixture[i][j-1] + color[j])%100;
				smoke[i][j] = 0;
			}
		}
 
		for(i = 1; i < n; i++)
		{
			for(j = 0;i+j < n; j++)
			{
				min = 999999999;
				for(k = j; k < j+i; k++)
				{
					if(min > mixture[j][k]*mixture[k+1][i+j] + smoke[j][k] + smoke[k+1][i+j])
						min = mixture[j][k]*mixture[k+1][i+j] + smoke[j][k] + smoke[k+1][i+j];
					//printf("%d %d" ,mixture[i][i], mixture[k+1][j]);
				}
				smoke[j][i+j] = min;
				//printf("%d ",smoke[j][i+j]);
 
			}
			//printf("\n");
		}
		printf("%d\n", smoke[0][n-1]);
	}
  return 0;
} 

==============================================================================================================================

Selection Sorting

#include <stdio.h>
int main()
{
int i,j,min,pos,arr[200],size;


scanf("%d",&size);

for(i=0;i<=size;i++)
scanf("%d",&arr[i]);
for(i=0;i<size;i++)
{
min=arr[i];
pos=i;
for(j=i;j<size;j++)
{
if(arr[j]<min)
{
min=arr[j];
pos=j;
}
}
arr[pos]=arr[i];
arr[i]=min;
}
for(i=0;i<=size-1;i++)
printf("%d ",arr[i]);
return 0;
}

==============================================================================================================
//End of SESSION 5

==============================================================================================================
//End of SESSION 5

==============================================================================================================
//End of SESSION 5

==============================================================================================================
//End of SESSION 5


SESSION 6

=========

COUTNTALPHA
#include <stdio.h>
int main()
{
  char ch;
  int n;
  scanf("%c",&ch);
  n=ch;
  if((n>=65&&n<=90) || (n>=97&&n<=122))
    printf("an alphabet");
  else
    printf("Not an alphabet");

	return 0;
}

======================================================================
=

LAPINDROME
#include<stdio.h>
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		char s[1000];
		scanf("%s",s);
		int i,len;
		for(len=0;s[len]!='\0';len++);
		if(len==2){	
			if(s[0]==s[1])
				printf("YES\n");
			else
				printf("NO\n");
			continue;
		}
		int a[26],b[26];
		for(i=0;i<26;i++){
			a[i]=0;
			b[i]=0;
		}
		for(i=0;i<len/2;i++)
			a[s[i]-'a']++;
		int flag=1;
		for(i=len-1;i>(len-1)/2;i--)
			b[s[i]-'a']++;
		for(i=0;i<26;i++)
			if(a[i]!=b[i]) flag=0;
		if(flag==0)
			printf("NO\n");
		else
			printf("YES\n");
	}
	return 0;
} 

=============================================================================================
Deleting Vowels
#include <stdio.h>
#include <string.h>
int main()
{
  char ch[10];
  int n,i;
  scanf("%[^\n]%*c",ch);
  n=strlen(ch);
  for(i=0;i<n;i++)
  {
    int c=ch[i];
    if(c==97||c==101||c==105||c==111||c==117)
      ch[i]='\0';
  }
  for(i=0;i<n;i++)
  {
    printf("%c",ch[i]);
  };

  
	return 0;
}
=====================================================================

Generating string
#include <stdio.h>
#include <string.h>
int main()
{
  char n[10];
  int l,i;
  scanf("%[^\n]%*c",n);
  l=strlen(n);
  /*
  for(i=0;i<l;i++)
  {
    printf("%c",n[i]);
  }
  */
  printf("%s",n);
  if(l<10)
  {
    for(i=l;i<10;i++)
    {
      printf("*");
    }
  }
  

	return 0;
}

=====================================================================

Subanagrams
#include <stdio.h>
#include <string.h>
 
int main(void) {
	int n,ch,index=0;
	scanf("%d",&n);
	char string[n][100];
	char ans[100];
	int i,j,k,l[n],c;
	for(i=0;i<n;i++)
	{
	    scanf("%s",string[i]);
	    l[i] = strlen(string[i]);
	}
	for(i=0;i<l[0];i++)
	{
	    c=1;
	    for(j=1;j<n;j++)
	    {ch=0;
	    for(k=0;k<l[j];k++)
	    {
	        if(string[0][i]==string[j][k])
	        {
	            string[j][k]='*';
	            ch++;
	            break;
	        }
	    }
	    if(ch)
	    {
	        c++;
	    }
	    else
	    {
	        c=0;
	        break;
	    }
	    }
	    if(c)
	    {
	        ans[index]=string[0][i];
	        ans[index+1]='\0';	
	        index++;
	    }
	}
	if(index==0)
	{
	    printf("no such string");
	    return 0;
	}
	char temp;
	
	for(i=0;i<strlen(ans);i++)
	{
	    for(j=i+1;j<strlen(ans);j++)
	    {
	        if(ans[i]>ans[j])
	        {
	         temp = ans[i];
	         ans[i] = ans[j];
	         ans[j] = temp;
	        }
	    }
	}
	printf("%s",ans);
return 0;
} 

=====================================================

Maximum Frequency
#include <stdio.h>
#include <string.h>
int main()
{
  char s[10];
  scanf("%[^\n]%*c",s);
  int i,l,j,q;
  l=strlen(s);
  for(i=0;i<26;i++)
  {
    int count=0;
    for(j=0;j<l;j++)
    {
      q=s[j];
      if(q==i+97)
        count++;
    }
    char z=i+97;
    if(count!=0)
      printf("%c=%d\n",z,count);
  }
      
	return 0;
}

=====================================================

Akhil And Colored Balls
#include<stdio.h>
int main()
{
    int t,i;
    char a[1003],b[1004];
    scanf("%d",&t);
    while(t --)
    {
        scanf("%s",a);
        scanf("%s",b);
        i = 0;
        while(a[i] != '\0')
        {
            if(a[i] == 'W' && b[i] == 'W')
                printf("B");
            else if(a[i] == 'B' && b[i] == 'B')
                printf("W");
            else
                printf("B");
            i++;
        }
        printf("\n");
    }
    return 0;
}

===================================================

Valid IdentifierChecker
#include <stdio.h>
#include <string.h>
int main()
{
  char name[10];
  scanf("%[^\n]%*c",name);
  int a;
  a= name[0];
  if ((a>=97 && a<=122)||(a>=65 && a<=90))
      printf("valid identifier");
  else
      printf("not a valid identifier");
	return 0;
}

=================================================

Array Mode
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int num[n];
  int i,j,max=0,maxn=0,x;
  for(i=0;i<n;i++)
  {
    scanf("%d",&num[i]);
  }
  for(i=0;i<n;i++)
  {
    x=0;
    for(j=0;j<n;j++)
    {
      if(num[i]==num[j])
        x++;
    }
    if(x>=max)
    {
      maxn=num[i];
      max=x;
    }
  }
  if(max>1)
    printf("Mode=%d",maxn);
  else
    printf("none");
    

	return 0;
}

==================================================

Valid IdentifierChecker
#include <stdio.h>
#include <string.h>
int main()
{
  char name[10];
  scanf("%[^\n]%*c",name);
  int a;
  a= name[0];
  if ((a>=97 && a<=122)||(a>=65 && a<=90))
      printf("valid identifier");
  else
      printf("not a valid identifier");
	return 0;
}

=================================================

 
Generating string

#include <stdio.h>
#include<string.h>

int main()
{	char x[100];
 	scanf("%s",&x[0]);
	int s=strlen(x);
int i=0;	
 if(s==10)
    {
      printf("%s",x);
    }
 else
 {for(i=s;i<10;i++)
   {
     x[i]='*';
   }
   
  for(i=0;i<10;i++)
   {
     printf("%c",x[i]);
   }
   
 }
	return 0;
}

============================================================

Counting Vowels
#include <stdio.h>

int main()
{
    char line[150];
    int i, vowels, consonants, digits, spaces;

    vowels =  consonants = digits = spaces = 0;

   
    scanf("%[^\n]", line);

    for(i=0; line[i]!='\0'; ++i)
    {
        if(line[i]=='a' || line[i]=='e' || line[i]=='i' ||
           line[i]=='o' || line[i]=='u' || line[i]=='A' ||
           line[i]=='E' || line[i]=='I' || line[i]=='O' ||
           line[i]=='U')
        {
            ++vowels;
        }
        else if((line[i]>='a'&& line[i]<='z') || (line[i]>='A'&& line[i]<='Z'))
        {
            ++consonants;
        }
        else if(line[i]>='0' && line[i]<='9')
        {
            ++digits;
        }
        else if (line[i]==' ')
        {
            ++spaces;
        }
    }

    printf("%d",vowels);
   

    return 0;
}

=======================================================================

Count Upper and Lower Case
#include<stdio.h>
 
int main() {
   int upper = 0, lower = 0;
   char ch[80];
   int i;
 

scanf("%s",&ch[0]);
 
   i = 0;
   while (ch[i] != '\0') {
      if (ch[i] >= 'A' && ch[i] <= 'Z')
         upper++;
      if (ch[i] >= 'a' && ch[i] <= 'z')
         lower++;
      i++;
   }
 
   printf("Uppercase Letters:%d", upper);
   printf("\nLowercase Letters:%d", lower);
 
   return (0);
}

==============================================================

Word Index 4
#include <stdio.h>
#include <string.h>
#define MAX_SIZE 100 // Maximum string size

/* Function declaration */
int countOccurrences(char * str, char * toSearch);


int main()
{
    char str[MAX_SIZE];
    char toSearch[MAX_SIZE];
    int count;

    /* Input string and word from user */
  
    fgets(str,100,stdin);
  
    scanf("%s",toSearch);

    count = countOccurrences(str, toSearch);

    printf("%s=%d", toSearch, count);

    return 0;
}


/**
 * Get, total number of occurrences of a word in a string
 */
int countOccurrences(char * str, char * toSearch)
{
    int i, j, found, count;
    int stringLen, searchLen;

    stringLen = strlen(str);      // length of string
    searchLen = strlen(toSearch); // length of word to be searched

    count = 0;

    for(i=0; i <= stringLen-searchLen; i++)
    {
        /* Match word with string */
        found = 1;
        for(j=0; j<searchLen; j++)
        {
            if(str[i + j] != toSearch[j])
            {
                found = 0;
                break;
            }
        }

        if(found == 1)
        {
            count++;
        }
    }

    return count;
}

=============================================================

Birds
#include <stdio.h>
int main()
{
 	char A[10];
  	int i;
  	scanf("%s", A);
  	for(i=0;A[i]!='\0';i++)
    {
      	if((A[i]=='a') ||(A[i]=='e') || (A[i]=='i') || (A[i]=='o') || (A[i]=='u'))
           continue;
           else printf("%c",A[i]);
           }
           
    
    

	return 0;
}

================================================================

Print Index
#include <stdio.h>
int main()
{
	char str[100];
    char toSearch;
    int i;
    toSearch = getchar();
scanf("%s",&str[0]);
    
    i=0;
    while(str[i]!='\0')
    {
        
        if(str[i] == toSearch)
        {
            printf("%c is found at index %d\n", toSearch, i);
        }

        i++;
    }
  
  
	return 0;
}

===========================================================

Remove Index String 2
#include <stdio.h>
#include <string.h>
 
void main()
{
    int i, j = 0, k = 0, count = 0;
    char str[100], key[20];
    char str1[10][20];
 
  
    scanf("%[^\n]s",str);
 
/* Converts the string into 2D array */    
    for (i = 0; str[i]!= '\0'; i++)
    {
        if (str[i]==' ')
        {
            str1[k][j] = '\0';
            k++;
            j = 0;
        }
        else
        {
            str1[k][j] = str[i];
            j++;
        }
    }
    str1[k][j] = '\0';
   
    scanf("%s", key);
 
/* Compares the string with given word */    
    for (i = 0;i < k + 1; i++)
    {
        if (strcmp(str1[i], key) == 0)
        {
            for (j = i; j < k + 1; j++)
            strcpy(str1[j], str1[j + 1]);
            k--;
        }
 
    }
    for (i = 0;i < k + 1; i++)
    {
        printf("%s ", str1[i]);
    }
}
==========================================================

Sorting of strings
 #include <stdio.h>
    #include <string.h>
    void main()
    {
 
        char name[10][8], tname[10][8], temp[8];
        int i, j, n;
 
  
        scanf("%d", &n);
  
        for (i = 0; i < n; i++) 
        {
            scanf("%s", name[i]);
            strcpy(tname[i], name[i]);
        }
 
        for (i = 0; i < n - 1 ; i++)
        {
            for (j = i + 1; j < n; j++)
            {
                if (strcmp(name[i], name[j]) > 0) 
                {
                    strcpy(temp, name[i]);
                    strcpy(name[i], name[j]);
                    strcpy(name[j], temp);
                }
            }
        }
 
 
        for (i = 0; i < n; i++) 
        {
            printf("%s\n", name[i]);
        }
 
 
    }

==========================================================

Symbols Filter
#include<stdio.h>

int main()
{
    char line[150];
    int i, j;
    
    fgets(line,30,stdin);

    for(i = 0; line[i] != '\0'; ++i)
    {
        while (!( (line[i] >= 'a' && line[i] <= 'z') || (line[i] >= 'A' && line[i] <= 'Z') || line[i] == '\0') )
        {
            for(j = i; line[j] != '\0'; ++j)
            {
                line[j] = line[j+1];
            }
            line[j] = '\0';
        }
    }
 
    printf("%s",line);
    return 0;
}

==========================================================

W string
#include<stdio.h>
#include<string.h>
int main()
{
    int store,flag,t,tot[30],max=0,i,j,k,curr[30],occur[15],start[15],end[15],mid[15];
    char s[10005];
    scanf("%d",&t);
    while(t--)
    {
        max=0;
        scanf("%s",s);
   
        j=0,flag=0;
        for(i=0;i<28;i++)
        {
            curr[i]=0;
            tot[i]=0;
        }
        for(i=0;i<strlen(s);i++)
        {
            if((s[i]=='#' && flag==0))
            {
                max=0;
      
                for(k=0;k<28;k++)
                if(curr[k]>max)
                max=curr[k];
                mid[j]=max;
                max=0;
                for(k=0;k<28;k++)
                {
                    tot[k]+=curr[k];
                    curr[k]=0;
                    if(tot[k]>max)
                    max=tot[k];
                }
                start[j]=max;
      
                j++;
                flag=1;
                occur[j-1]=1;
                continue;
            }
            else if(s[i]=='#')
            {
                occur[j-1]++;
            continue;
            }
            curr[s[i]-97]++;
            flag=0;
        }
        store=j;

        for(i=0;i<28;i++)
        {
            curr[i]=0;
            tot[i]=0;
        }
        flag=0;
        for(i=strlen(s)-1;i>=0;i--)
        {
            if((s[i]=='#' && flag==0))
            {
                max=0;
                
                for(k=0;k<28;k++)
                if(curr[k]>max)
                max=curr[k];
                mid[j]=max;
                max=0;
                for(k=0;k<28;k++)
                {
                    tot[k]+=curr[k];
                    curr[k]=0;
                    if(tot[k]>max)
                    max=tot[k];
                }
                end[j]=max;
      
                j--;
                flag=1;

                continue;
            }
            else if(s[i]=='#')
            {

            continue;
            }
            curr[s[i]-97]++;
            flag=0;
        }
        
        max=0;
 
       max=0;
       int x;
       j=store;
       for(i=0;i<=j-3;i++)
       {
           x=0;
           if(start[i]==0)
           continue;
           x+=start[i];
           if(mid[i+1]==0)
           continue;
           if(occur[i+1]==1)
           x+=mid[i+1];
           else
           continue;
           if(mid[i+2]==0)
           continue;

           x+=mid[i+2];

 
           x+=end[i+3];
           if(end[i+3]==0)
           continue;
           if(x>max)
           max=x;
       }
       if(max>0)
        printf("%d\n",max+3);
    else
        printf("%d\n",max);
    }
    return 0;
}

=============================================================

Copy Count

#include <stdio.h>
#include<string.h>
int main()
{
	char x[100];
  	scanf("%s",&x[0]);
  printf("%s",x); printf("\n%s",x);
 int s=strlen(x);
  printf("\n%d",s);
	return 0;
}

========================================================

Subanagrams

#include <stdio.h>
#include <string.h>
 
int main(void) {
	int n,ch,index=0;
	scanf("%d",&n);
	char string[n][100];
	char ans[100];
	int i,j,k,l[n],c;
	for(i=0;i<n;i++)
	{
	    scanf("%s",string[i]);
	    l[i] = strlen(string[i]);
	}
	for(i=0;i<l[0];i++)
	{
	    c=1;
	    for(j=1;j<n;j++)
	    {ch=0;
	    for(k=0;k<l[j];k++)
	    {
	        if(string[0][i]==string[j][k])
	        {
	            string[j][k]='*';
	            ch++;
	            break;
	        }
	    }
	    if(ch)
	    {
	        c++;
	    }
	    else
	    {
	        c=0;
	        break;
	    }
	    }
	    if(c)
	    {
	        ans[index]=string[0][i];
	        ans[index+1]='\0';	
	        index++;
	    }
	}
	if(index==0)
	{
	    printf("no such string");
	    return 0;
	}
	char temp;
	
	for(i=0;i<strlen(ans);i++)
	{
	    for(j=i+1;j<strlen(ans);j++)
	    {
	        if(ans[i]>ans[j])
	        {
	         temp = ans[i];
	         ans[i] = ans[j];
	         ans[j] = temp;
	        }
	    }
	}
	printf("%s",ans);
return 0;
} 

====================================================================

Printing previous

#include<stdio.h>
#include<string.h>
int main()
{
  int x,i;
  char a[100];
  scanf("%s",&a[0]);
  x=strlen(a);
  int q;
  for(i=0;i<x;i++)
  {
    q=a[i];
    printf("%c",q-1);
  }
  return 0;
}

==========================================================
 
Substrings Palindromic

#include <stdio.h>
#include <string.h>
int main()
{
  char ar[1001],ar2[1001];
  int t,i,j,k,l;
  scanf("%d",&t);
  while(t--)
  { k=0;l=0;
   scanf("%s",ar);
   scanf("%s",ar2);
   for(i=0;i<strlen(ar);i++)
    {
      for(j=0;j<strlen(ar2);j++)
       {
          if(ar[i]==ar2[j])
          {  k=1;
            printf("Yes\n");
      l=1;
            break;
          }
       }
    if(l==1)
   {break;}
    }
   
   if(k==0)
   {printf("No\n");}
  }
 return 0;
}

============================================================

Counting Character

#include <stdio.h>
#include<string.h>
int main()
{
	int x=0;
  	char s[100];
  scanf("%s",&s[0]);
x=strlen(s);
  printf("%d",x);
  return 0;
  
}

===================================================
 
Count a String

#include <stdio.h>
#define MAX_SIZE 100 // Maximum string size


int main()
{
    char str[MAX_SIZE];
    int alphabets, digits, others, i;

    alphabets = digits = others = i = 0;

	scanf("%s",&str[0]);

    /*
     * Check each character of string for alphabet, digit or special character
     */
    while(str[i]!='\0')
    {
        if((str[i]>='a' && str[i]<='z') || (str[i]>='A' && str[i]<='Z'))
        {
            alphabets++;
        }
        else if(str[i]>='0' && str[i]<='9')
        {
            digits++;
        }
        else
        {
            others++;
        }

        i++;
    }

    printf("Alphabets=%d\n", alphabets);
    printf("Digits=%d\n", digits);
    printf("Special characters=%d", others);

    return 0;
}

===================================================================

Reverse String- Without Library

#include<stdio.h>
#include<string.h>
 
int main() {
   char str[100], temp;
   int i, j = 0;
 
scanf("%s",&str[0]); 
 printf("%s",str); 
  i = 0;
   j = strlen(str) - 1;
 
   while (i < j) {
      temp = str[i];
      str[i] = str[j];
      str[j] = temp;
      i++;
      j--;
   }
 
   printf("\n%s", str);
   return (0);
}

==============================================================


Counting Vowels

#include <stdio.h>

int main()
{
    char line[150];
    int i, vowels, consonants, digits, spaces;

    vowels =  consonants = digits = spaces = 0;

   
    scanf("%[^\n]", line);

    for(i=0; line[i]!='\0'; ++i)
    {
        if(line[i]=='a' || line[i]=='e' || line[i]=='i' ||
           line[i]=='o' || line[i]=='u' || line[i]=='A' ||
           line[i]=='E' || line[i]=='I' || line[i]=='O' ||
           line[i]=='U')
        {
            ++vowels;
        }
        else if((line[i]>='a'&& line[i]<='z') || (line[i]>='A'&& line[i]<='Z'))
        {
            ++consonants;
        }
        else if(line[i]>='0' && line[i]<='9')
        {
            ++digits;
        }
        else if (line[i]==' ')
        {
            ++spaces;
        }
    }

    printf("%d",vowels);
   

    return 0;
}

===========================================================

Akhil And Colored Balls

#include<stdio.h>
#include<string.h>
int main()
{
    int t, N, j;
    char x[100000];
    scanf("%d",&t);
    while(t--)
    {
        scanf("%s",x);
        N=strlen(x);
        char y[N];
        scanf("%s",y);
        j=0;
        while(x[j]!='\0')
        {
            if(x[j]=='W'&&y[j]=='W')
                printf("B");
            else if(x[j]=='B'&&y[j]=='B')
                printf("W");
            else
                printf("B");
            j++;
        }
        printf("\n");
    }
    return 0;
}
 
==============================================================

Conversion Code -01

#include <stdio.h>
#define MAX_SIZE 100 // Maximum string size


int main()
{
    char str[MAX_SIZE];
    int i;

    /* Input string from user */

  
    scanf("%s",&str[0]);

    for(i=0; str[i]!='\0'; i++)
    {
        /*
         * If current character is lowercase alphabet then
         * convert it to uppercase.
         */
        if(str[i]>='a' && str[i]<='z')
        {
            str[i] = str[i] - 32;
        }
    }

    printf("%s",str);
    return 0;
}

======================================================================

Reverse the string

    #include<stdio.h>
#include<string.h>
    int main()
    {
    char array[5000]={0};
    register int i=0,j,len,pos;
    fread(array,1,5000,stdin);
    len=strlen(array);
    while(i<len)
    {
    pos=i;
    while(((array[i]>=48 && array[i]<=57) || (array[i]>=65 && array[i]<=90) || (array[i]>=97 && array[i]<=122)) && i<len)
    i++;
    j=i-1;
    while(j>=pos)
    printf("%c",array[j--]);
    while(!((array[i]>=48 && array[i]<=57) || (array[i]>=65 && array[i]<=90) || (array[i]>=97 && array[i]<=122)) && i<len)
    printf("%c",array[i++]);
    }
    return 0;
    }
  
===============================================================================================================================

Asccending String

#include <stdio.h>
#include <string.h>
int main()
{
  char str[100],ch;
  int i,j,l;
  
       
       
       
       fgets(str, sizeof str, stdin);
  l=strlen(str);
  /* sorting process */
  for(i=1;i<l;i++)
    for(j=0;j<l-i;j++)
	if(str[j]>str[j+1])
	{
	  ch=str[j];
	  str[j] = str[j+1];
	  str[j+1]=ch;
	}
  
   printf("%s",str);
return 0;  
}

  ===================================================================
 
Printing previous

#include <stdio.h>
#include<string.h>
int main()
{	char x[20];
 	int i,s;
 	scanf("%s",&x[0]);
      s=strlen(x);
 for(i=0;i<s;i++)
 {
   printf("%c",(x[i]-1));
   
 }
 

	return 0;
}

====================================================================

Character Extract

#include<stdio.h>
    int main()
    {
        int o,n,i;
        char s[100];
      scanf("%s",&s[0]);
        scanf("%d",&o);
      	scanf("%d",&n);
      for(i=n-1;i<(o+n-1);i++)
      {
        printf("%c",s[i]);
      }
 
    return 0;
     
    } 

=============================================================

Word index 1

#include<stdio.h>
#include<stdio.h>
#include<string.h>
int main()
{
  int MAX_SIZE=100;
    char str[MAX_SIZE];
    char word[MAX_SIZE];
    int i, j, found;
    int strLe, wordLe;


    fgets(str,MAX_SIZE,stdin);

   scanf("%s",&word[0]);

    strLe  = strlen(str); 
    wordLe = strlen(word); 

   
    for(i=0; i<strLe - wordLe; i++)
    {
   
        found = 1;
        for(j=0; j<wordLe; j++)
        {
   
            if(str[i + j] != word[j])
            {
                found = 0;
                break;
            }
        }

       
        if(found == 1)
        {
            printf("%s is found at %d\n",word,i);
        }
    }

    return 0;
}

=======================================================================


Deleting Vowels

#include <string.h>
#include <stdio.h>
int main()
{
  char a[100];
  int len,i;
  scanf("%s",a);
  len=strlen(a);
  for (i=0;i<len;i++)
  {
    if(a[i]!='a' && a[i]!='e'&& a[i]!='i'&& a[i]!='o'&& a[i]!='u')
      printf("%c",a[i]);
  }

	return 0;
}

==============================================================

Counting Vowels

#include <stdio.h>
int main()
{
  char a[100];
  int i,vow=0;
  scanf("%[^\n]",a);
  for(i=0;a[i]!='\0';++i)
    if(a[i]=='a'|| a[i]=='e'|| a[i]=='i'|| a[i]=='o'|| a[i]=='u'|| a[i]=='A'||a[i]=='E'||a[i]=='I'||a[i]=='O'||a[i]=='U')
    {
      ++vow;
    }
  printf("%d",vow);
 return 0;
}

=============================================================

Replace Last Occurrence
#include <stdio.h>
int main()
{	int i=0,lastindex=-1;
	char a[15];
  scanf("%s",&a[0]);
 char z,x;
 scanf("%s %s",&z,&x);
 while(a[i] != '\0')
    {
     
        if(a[i] == z)
        {
            lastindex = i;
        }

        i++;
    }

    if(lastindex != -1)
    {
        a[lastindex]=x;
    }
 printf("%s",a);
	return 0;
}

==============================================

Word Index 3
#include <stdio.h>
#include <string.h>


int main()
{
  int MAX_SIZE=100;
    char str[MAX_SIZE];
    char word[MAX_SIZE];
    int i, j, found;
    int strLen, wordLen;


    fgets(str,MAX_SIZE,stdin);

   scanf("%s",&word[0]);

    strLen  = strlen(str); 
    wordLen = strlen(word); 

   
    for(i=0; i<strLen - wordLen; i++)
    {
   
        found = 1;
        for(j=0; j<wordLen; j++)
        {
   
            if(str[i + j] != word[j])
            {
                found = 0;
                break;
            }
        }

       
        if(found == 1)
        {
            printf("%d\n",i);
        }
    }

    return 0;
}

============================================
 
W string
#include<stdio.h>
#include<string.h>
int main()
{
    int store,flag,t,tot[30],max=0,i,j,k,curr[30],occur[15],start[15],end[15],mid[15];
    char s[10005];
    scanf("%d",&t);
    while(t--)
    {
        max=0;
        scanf("%s",s);
   
        j=0,flag=0;
        for(i=0;i<28;i++)
        {
            curr[i]=0;
            tot[i]=0;
        }
        for(i=0;i<strlen(s);i++)
        {
            if((s[i]=='#' && flag==0))
            {
                max=0;
      
                for(k=0;k<28;k++)
                if(curr[k]>max)
                max=curr[k];
                mid[j]=max;
                max=0;
                for(k=0;k<28;k++)
                {
                    tot[k]+=curr[k];
                    curr[k]=0;
                    if(tot[k]>max)
                    max=tot[k];
                }
                start[j]=max;
      
                j++;
                flag=1;
                occur[j-1]=1;
                continue;
            }
            else if(s[i]=='#')
            {
                occur[j-1]++;
            continue;
            }
            curr[s[i]-97]++;
            flag=0;
        }
        store=j;

        for(i=0;i<28;i++)
        {
            curr[i]=0;
            tot[i]=0;
        }
        flag=0;
        for(i=strlen(s)-1;i>=0;i--)
        {
            if((s[i]=='#' && flag==0))
            {
                max=0;
                
                for(k=0;k<28;k++)
                if(curr[k]>max)
                max=curr[k];
                mid[j]=max;
                max=0;
                for(k=0;k<28;k++)
                {
                    tot[k]+=curr[k];
                    curr[k]=0;
                    if(tot[k]>max)
                    max=tot[k];
                }
                end[j]=max;
      
                j--;
                flag=1;

                continue;
            }
            else if(s[i]=='#')
            {

            continue;
            }
            curr[s[i]-97]++;
            flag=0;
        }
        
        max=0;
 
       max=0;
       int x;
       j=store;
       for(i=0;i<=j-3;i++)
       {
           x=0;
           if(start[i]==0)
           continue;
           x+=start[i];
           if(mid[i+1]==0)
           continue;
           if(occur[i+1]==1)
           x+=mid[i+1];
           else
           continue;
           if(mid[i+2]==0)
           continue;

           x+=mid[i+2];

 
           x+=end[i+3];
           if(end[i+3]==0)
           continue;
           if(x>max)
           max=x;
       }
       if(max>0)
        printf("%d\n",max+3);
    else
        printf("%d\n",max);
    }
    return 0;
} 

=====================================================

s-palindrome
#include <stdio.h>
#include<string.h>

int main()
{
	int len,i,flag;
  char  pali[15],reverse_pali[15];
  scanf("%s",&pali[0]);
  len=strlen(pali);

  
   for (i = len - 1; i >= 0 ; i--)
    {
        reverse_pali[len - i - 1] = pali[i];
    }

 
    for (flag = 1, i = 0; i < len ; i++)
    {
        if (reverse_pali[i] != pali[i])
            flag = 0;
    }
    if (flag == 1)
       printf ("TAK");
    else
       printf("NIE");

  
	return 0;
}

==================================================
 
Play With Strings
#include <stdio.h>
#include <string.h>
 
int main()
{
    int t,i,j,ans;
    char s1[100],s2[100];
    scanf("%d",&t);
    while(t--)
    {
        scanf("%s%s",s1,s2);
        for(j=-1,ans=i=0;s2[i];i++)
        {
            for(j++;s1[j];j++)
             if(s2[i]==s1[j])
 
               break;
 
            if(j>=strlen(s1))
               break;
        }
 
        if(i==strlen(s2))
          ans++;
        for(j=-1,i=strlen(s2)-1;i>=0;i--)
        {
            for(j++;s1[j];j++)
             if(s2[i]==s1[j])
               break;
            if(j>=strlen(s1))
               break;
        }
        if(i==-1)
        {
          if(ans)
            ans=3;
          else
            ans=2;
        }
        printf("%d\n",ans);
    }
    return 0;
}

=====================================================
 
String Length
#include <stdio.h>
int main()
{
char string[50];
    int i, length = 0;
 
   
   scanf("%s",&string[0]);
   
    for (i = 0; string[i] != '\0'; i++)
    {
        length++;
    }
  
  printf("%d",length);
	return 0;
}

================================================
 
Print Index
#include <stdio.h>
int main()
{
	char str[100];
    char toSearch;
    int i;
    toSearch = getchar();
scanf("%s",&str[0]);
    
    i=0;
    while(str[i]!='\0')
    {
        
        if(str[i] == toSearch)
        {
            printf("%c is found at index %d\n", toSearch, i);
        }

        i++;
    }
  
  
	return 0;
}

========================================================

Concatenate Code
#include <stdio.h>
int main()
{
    char s1[100], s2[100], i, j;

   
    scanf("%s", &s1[0]);


    scanf("%s", &s2[0]);
printf("%s",s1);
  printf("\n%s",s2);
   
    for(i = 0; s1[i] != '\0'; ++i);
  {
    for(j = 0; s2[j] != '\0'; ++j, ++i)
    {
        s1[i] = s2[j];
    }
  }
    s1[i] = '\0';
    printf("\n%s", s1);

    return 0;
}
===============================================

Simple Array
#include <stdio.h>
int main()
{
	int x;
  scanf("%d",&x);
  int a[x];
  int i;
int avg=0;
  for(i=0;i<x;i++)
  scanf("%d",&a[i]);
  for(i=0;i<x;i++)
    avg+=a[i];
  
  printf("%d",avg/x);
	return 0;
}

=================================================

ASCII Name
#include <stdio.h>
#include<string.h>
 
int main()
{
    int i,len;
    char string1[100];
 	
   
    scanf("%s", &string1[0]);
  len=strlen(string1);
        printf("The ASCII values of the string are:\n");
    for (i = 0; i < len; i++)
    {
        printf("%d ",string1[i]);
    }
    return 0;
}

==============================================================================================================
//End of SESSION 6

==============================================================================================================
//End of SESSION 6

==============================================================================================================
//End of SESSION 6

==============================================================================================================
//End of SESSION 6

SESSION 7

==========

Array Mode
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int num[n];
  int i,j,max=0,maxn=0,x;
  for(i=0;i<n;i++)
  {
    scanf("%d",&num[i]);
  }
  for(i=0;i<n;i++)
  {
    x=0;
    for(j=0;j<n;j++)
    {
      if(num[i]==num[j])
        x++;
    }
    if(x>=max)
    {
      maxn=num[i];
      max=x;
    }
  }
  if(max>1)
    printf("Mode=%d",maxn);
  else
    printf("none");
    

	return 0;
}
=======================================================

No. of Distinct Elements in an unsorted array
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int a[n],j,i;
  for(i=0;i<n;i++)
  {
    scanf("%d",&a[i]);
  }
  for(i=0;i<n-1;i++)
  {
    for(j=i+1;j<n;j++)
    {
      if(a[i]==a[j])
      {
        n--;
      }
    }
  }
    printf("%d",n);


	return 0;
}

=============================================================

UNIFORMITY MATRIX using Function
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int q[n][n];
  int i,j,e=0,o=0;
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&q[i][j]);
      if(q[i][j]%2==0)
        e++;
      else
        o++;
    }
  }
  if(e==0 ||o==0)
    printf("yes");
  else
    printf("no");

	return 0;
}

========================================================

Caravan
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int i,j,a,b;
  for(i=0;i<n;i++)
  {
    int c,t=1;
    scanf("%d",&c);
    int m[c];
    for(j=0;j<c;j++)
    {
      scanf("%d",&m[j]);
    }
    for(a=c-1;a>=0;a--)
    {
      int count=0;
      for(b=0;b<a;b++)
      {
        if(m[a]>m[b])
          count++;
      }
      if(count==0)
        t++;
    }
    printf("%d\n",t-1);
  }
    
    

	return 0;
}

=============================================================

Searching an Array using Functions
#include <stdio.h>
int main()
{
  int a,i;
  scanf("%d",&a);
  int q[a];
  for(i=0;i<a;i++)
  {
    scanf("%d",&q[i]);
  }
  int z,count=0;
  scanf("%d",&z);
  for(i=0;i<a;i++)
  {
    if(q[i]==z)
    {
      printf("%d is present in the array",z);
      count++;
    }
  }
  if(count==0)
    printf("%d is not present in the array",z);
  

	return 0;
}

=============================================================

Array Insertion using Function
#include <stdio.h>
int main()
{
  int a;
  scanf("%d",&a);
  int q[a],i,z,aa;
  for(i=0;i<a;i++)
  {
    scanf("%d",&q[i]);
  }
  scanf("%d",&aa);
  scanf("%d",&z);
  if(aa>a)
    printf("Sorry Invalid Location");
  else
  {
  for(i=1;i<=a;i++)
  {
    if(i==aa)
      printf("%d\n",z);
    printf("%d\n",q[i-1]);
  }
  }
  

	return 0;
}

=======================================================

Sum of even numbers using Functions
#include <stdio.h>
int sum(int a, int q[]);
int main()
{
  int a,i;
  scanf("%d",&a);
  int q[a];
  for(i=0;i<a;i++)
  {
    scanf("%d ",&q[i]);
  }
  int s;
  s= sum(a, q);
  printf("The sum of the even numbers in the array is %d",s);

	return 0;
}
int sum(int a, int q[])
{
  int i,s=0;
  for(i=0;i<a;i++)
  {
    if(q[i]%2==0)
      s=s+q[i];
  }
  return s;
}

=================================================================

Matrix Sum using Function
#include <stdio.h>
int main()
{
	int m,n,i,j,sum=0;
  scanf("%d %d",&m,&n);
  int x[m][n];
  for(i=0;i<m;i++)
    {
      for(j=0;j<n;j++)
      {
        scanf("%d ",&x[i][j]);
        sum+=x[i][j];
      }
    }
  printf("sum=%d",sum);
	return 0;
}

======================================================

SQUARE OF A NUMBER
#include <stdio.h>
int sqr( int a);
int main()
{
  int a;
  scanf("%d",&a);
  int q;
  q=sqr(a);
  printf("%d",q);

	return 0;
}
int sqr( int a)
{
  int q;
  q=a*a;
  return q;
}

====================================================

APPLE VENDOR
#include <stdio.h>
/*int main()
{
  int a,b;
  scanf("%d %d",&a,&b);
  int s=a+b;
  printf("%d",s);

	return 0;
}*/
int sum(int a, int b);
int main()
{
  int a,b;
  scanf("%d %d",&a,&b);
  int s;
  s=sum(a,b);
  printf("%d",s);
  return 0;
}
int sum(int a, int b)
{
  int s=a+b;
  return s;
}

=========================================================

Recursion 5 : Number of digits

#include <stdio.h>

int main()
{
    long long num;
    int count = 0;
int x;
    /* Input number from user */

    scanf("%lld", &num);
x=num;
    /* Run loop till num is greater than 0 */
    while(num != 0)
    {
        /* Increment digit count */
        count++;

        /* Remove last digit of 'num' */
        num /= 10;
    }

    printf("The number of digits in %d is %d",x, count);

    return 0;
}

=====================================================================

Swap 3 Numbers in Cyclic Order
#include <stdio.h>
void swap (int *a,int *b,int *c);
int main()
{	int a,b,c;
 	scanf("%d %d %d",&a,&b,&c);
 	swap(&a,&b,&c);
printf("%d\n%d\n%d",a,b,c);
	return 0;
}
void swap(int *a,int *b,int *c)
{
  	int temp;
  	temp=*b;
  	*b=*a;
  	*a=*c;
  	*c=temp;
}


===============================================================

Recursion 7 : Sum of elements in Array
#include <stdio.h>
int main()
{
int x;
  scanf("%d",&x);
  int s[x];
  int d=0;
  int i=0;
  for(i=0;i<x;i++)
  {
scanf("%d",&s[i]);
d+=s[i];
  }
  printf("%d",d);
  return 0;
}

============================================================

POWER OF 2
#include<stdio.h>
#include<stdbool.h>
#include<math.h>

/* Function to check if x is power of 2*/
bool isPowerOfTwo(int n)
{
   return (ceil(log2(n)) == floor(log2(n)));
}

// Driver program
int main()
{
  int x;
  scanf("%d",&x);
    isPowerOfTwo(x)? printf("YES"): printf("NO");
    
    return 0;
}

=========================================================

Maximum Element in an Array using Functions
#include<stdio.h>
int main()
{
    int array[10], size, i, largest;
    
    scanf("%d", &size);
    
    for (i = 0; i < size; i++)
        scanf("%d", &array[i]);
    largest = array[0];
    for (i = 1; i < size; i++)
    {
        if (largest < array[i])
            largest = array[i];
    }
    printf("%d is the maximum element in the array", largest);
    return 0;
}

========================================================

Sum of 2 arrays using Functions
#include<stdio.h>

int main()
{int x;
 scanf("%d",&x);
 int i,a[x],b[x],c[x];
 

 for (i=0;i<x;i++)
   {
 
   scanf("%d",&a[i]);
   }
 
 for (i=0;i<x;i++)
   {
   
   scanf("%d",&b[i]);
   }
   
   for(i=0;i<x;i++)
     {
     c[i]=a[i]+b[i];
     printf("%d ",c[i]);
     }
     return 0;
}


==========================================================

Array - Sum of Even Numbers
#include <stdio.h>
int main()
{
int x;
  scanf("%d",&x);
  int s[x];
  int i,sum=0;
  for(i=0;i<x;i++)
  {
  scanf("%d",&s[i]);
    if(s[i]%2==0)
    {
      sum+=s[i];
    }
        }
        printf("%d",sum);
        return 0;
}

======================================================

Cyclic Number
#include <stdio.h>
void swap (int *a,int *b,int *c);
int main()
{	int a,b,c;
 	scanf("%d %d %d",&a,&b,&c);
 	swap(&a,&b,&c);
printf("%d\n%d\n%d",a,b,c);
	return 0;
}
void swap(int *a,int *b,int *c)
{
  	int temp;
  	temp=*b;
  	*b=*a;
  	*a=*c;
  	*c=temp;
}

===================================================

LOWER TRIANGULAR MATRIX

#include <stdio.h>


int main()
{
  int MAX_ROWS,MAX_COLS;
  scanf("%d %d",&MAX_ROWS,&MAX_COLS);
    int array[MAX_ROWS][MAX_COLS];
    int row, col, isLower;

    /* Input elements in matrix from user */
   
    for(row=0; row<MAX_ROWS; row++)
    {
        for(col=0; col<MAX_COLS; col++)
        {
            scanf("%d", &array[row][col]);
        }
    }

    /* Check whether the matrix is lower triangular matrix */
    isLower = 1;
    for(row=0; row<MAX_ROWS; row++)
    {
        for(col=0; col<MAX_COLS; col++)
        {
            /*
             * If elements above main diagonal(col>row)
             * is not equal to zero(array[row][col]!=0)
             */
            if(col>row && array[row][col]!=0)
            {
                isLower = 0;
            }
        }
    }

    /*
     * If matrix is lower triangular matrix
     */
    if(isLower == 1)
    {
        printf("yes");

    }
    else
    {
        printf("no");
    }

    return 0;
}

=======================================================

One-dimensional Japanese Crossword
#include <stdio.h>
char s[140];
int main()
{
    int n,i;
    scanf("%d",&n);
    scanf("%s",&s[0]);
    int ans=0;
    int ge=0;
    int a[140]={0};
    for( i=0;i<n;i++)
    {
        if(s[i]=='B')
        {
            a[ge]++;
            if(s[i+1]!='B')
            {
                ans++;
                ge++;
            }
        }
    }
    printf("%d\n",ans);
    for(i=0;i<ge;i++)
    {
        if(i==0)
            printf("%d",a[i]);
        else
            printf(" %d",a[i]);
    }
   return 0;
}

=====================================================================

Find Bandwidth of Matrix

#include<stdio.h>
 
 
 
int main()
{
	int test,t,n,ones,i,j,total,ans;
	scanf("%d",&test);
	while(test--)
	{
		scanf("%d",&n);
		ones=0;
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				scanf("%d",&t);
				if(t==1)
					ones++;
			}
		}
		total=n*n;
		total=total-n;
		ones=ones-n;
		ans=0;
		while(ones>0)
		{
			n--;
			total=total-2*n;
			ones=ones-2*n;
			ans++;
		}
		printf("%d\n",ans);
		
	}
return 0;
} 

==============================================================

Random order

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
 
typedef long long ll;
 
int main()
{
	ll t,n;
	float ans,num,den;
	scanf("%lld",&t);
	while(t--)
    {
        scanf("%lld",&n);
        if(n==1)
        {
            printf("1.0\n");
        }
        else
        {
           num=n;
           den=n;
           ans=0;
           while(den>=1)
           {
               ans=ans+num/den;
               den--;
           }
           printf("%.1f\n",ans);
        }
    }
	return 0;
}

==========================================================

Field Trip

#include<stdio.h>
long double func(long double n,long double r)
{
     int i;
     long double res=1.00;
     for(i=1;i<=r;++i){
                       res=(res*(n-r+i))/i;
     }
     return res;
}
int main()
{
 float s, n, m, k;
    int t;
    int i;
    scanf("%d",&t);
    while(t--){
               scanf("%f %f %f %f",&s,&n,&m,&k);
               float res=0.00;
               i=k;
               while((i<=m-1)){
                               if((n-i-1)<=(s-m)&&(n-i-1)>=0){
                                    res=res+func(m-1,i)*func(s-m,n-i-1);
                               }
                               ++i;
               }
               res=res/func(s-1,n-1);
                printf("%.7f\n",res);
    }
    return 0;
}

==================================================================================

SYMMETRIC MATRIX using Functions

#include<stdio.h>
 
int main()
{
   int m, n, c, d, transpose[10][10];
 	
  
   scanf("%d%d",&m,&n);
  int matrix[m][n];
 
   for (  c = 0 ; c < m ; c++ )
      for ( d = 0 ; d < n ; d++ )
         scanf("%d",&matrix[c][d]);
 
   for( c = 0 ; c < m ; c++ )
   {
      for( d = 0 ; d < n ; d++ )
      {
         transpose[d][c] = matrix[c][d];
      }
   }
 
   if ( m == n ) /* check if order is same */
   {
       for ( c = 0 ; c < m ; c++ )
       {
           for ( d = 0 ; d < m ; d++ )
           {
               if ( matrix[c][d] != transpose[c][d] )
                  break;
           }
           if ( d != m )
              break;
       }
   
   }
    if ( c == m )
          printf("Symmetric");
   else
       printf("Not Symmetric");
 
   return 0;
}

=================================================================

Palindromes

#include <stdio.h>
    #include <string.h>
     
    int i, j, k, m, n, len, P[1001][1001], W[1001] ;
     
    char word[1001] ;
     
    int main(void)
    {
    scanf("%s", word) ;
    len = strlen(word) ;
    W[0] = 1 ;
    for (k = 1 ; k <= len ; k++)
    {
    for (i = 0 ; i < k ; i++)
    {
    if ((P[i][k - i] = (word[i] == word[k - 1] && (i + 2 >= k || P[i + 1][k - i - 2]))))
    {
    W[k] += W[i] ;
    W[k] %= 1000000007 ;
    }
    }
    }
     
    printf("%d\n", W[len]) ;
    return 0 ;
    } 

===================================================================

One-dimensional Japanese Crossword

#include <stdio.h>

char s[140];
int main()
{
    int n,i;
    scanf("%d",&n);
    scanf("%s",s);
    int ans=0;
    int ge=0;
    int a[140]={0};
    for( i=0;i<n;i++)
    {
        if(s[i]=='B')
        {
            a[ge]++;
            if(s[i+1]!='B')
            {
                ans++;
                ge++;
            }
        }
    }
    printf("%d\n",ans);
    for(i=0;i<ge;i++)
    {
        if(i==0)
            printf("%d",a[i]);
        else
            printf(" %d",a[i]);
    }
   return 0;
}

==============================================================

One-dimensional Japanese Crossword

#include <stdio.h>

char s[140];
int main()
{
    int n,i;
    scanf("%d",&n);
    scanf("%s",s);
    int ans=0;
    int ge=0;
    int a[140]={0};
    for( i=0;i<n;i++)
    {
        if(s[i]=='B')
        {
            a[ge]++;
            if(s[i+1]!='B')
            {
                ans++;
                ge++;
            }
        }
    }
    printf("%d\n",ans);
    for(i=0;i<ge;i++)
    {
        if(i==0)
            printf("%d",a[i]);
        else
            printf(" %d",a[i]);
    }
   return 0;
}

===========================================================
Compare 2 arrays using Function

#include <stdio.h>

#include <string.h>

int main()

{	int x;
 scanf("%d",&x);

     int arr1[x], arr2[x];

   int i,flag=1;
for( i=0;i<x;i++)
{
  scanf("%d",&arr1[i]);
  
}
for( i=0;i<x;i++)
{
  scanf("%d",&arr2[i]);
}
for( i=0;i<x;i++)
{
  if(arr1[i]!=arr2[i])
  { flag=0;
  break;}
}

if(flag==1)
          printf("yes");

     else

          printf("no");

     return 0;

}

=====================================================

Array Insertion using Function

#include <stdio.h>
 
int main()
{
   int array[100], position, c, n, value;
 
 
   scanf("%d", &n);
 
 
 
   for (c = 0; c < n; c++)
      scanf("%d", &array[c]);
 
 
   scanf("%d", &position);
if(position<n)
{
 
   scanf("%d", &value);
 
   for (c = n - 1; c >= position - 1; c--)
      array[c+1] = array[c];
 
   array[position-1] = value;
 
 
 
   for (c = 0; c <= n; c++)
      printf("%d\n", array[c]);
}
  else
    printf("Sorry Invalid Location");
   return 0;
}

=============================================================

Powers of a number

#include <stdio.h>
#include<math.h>
int main()
{
	int a,b;
  float c;
  scanf("%d %d",&a,&b);
  c=pow(a,b);
  printf("%0.2f",c);
  return 0;
}

=============================================================

No. of Distinct Elements in an unsorted array

#include <stdio.h>
int main()
{
	int n;
  scanf("%d",&n);
  int i=0;
  int arr[15];
  
  int num=0,j=0;
  for(i=0;i<n;i++)
  {
    scanf("%d",&arr[i]);
    
  }
  for(i=0;i<n;i++)
  { num=arr[i];
  if(num!=-999999999)
  {
    for(j=i+1;j<n-1;j++)
    {
      if(num==arr[j])
      {
        arr[j]=-999999999;
      }
    }
  }
  }
   j=0;
   for(i=0;i<n;i++)
   {
     if(arr[i]!=-999999999)
     {
       j++;
     }
   }
  printf("%d",j);
	return 0;
}

===========================================================


Swap 3 Numbers in Cyclic Order
#include <stdio.h>
void swap (int *a,int *b,int *c);
int main()
{	int a,b,c;
 	scanf("%d %d %d",&a,&b,&c);
 	swap(&a,&b,&c);
printf("%d\n%d\n%d",a,b,c);
	return 0;
}
void swap(int *a,int *b,int *c)
{
  	int temp;
  	temp=*b;
  	*b=*a;
  	*a=*c;
  	*c=temp;
}

==================================================

Functions-Lucky String
#include<stdio.h>
#include<string.h>
int checklucky(char *a);
int main()
{
    int c;
    char name[100];
    scanf("%s",name);

    c=checklucky(name);
    if(c==1)
        printf("%s is lucky",name);
    else
        printf("%s is not lucky",name);

    return 0;
}

int checklucky(char *a)
{	
  int sum=0,len,i;

    len=strlen(a);
   

    for(i=0;i<len;i++)
    {
        sum=sum+a[i];
    }

    if(sum%2==0)
        return (1);
    else
        return (0);
}

===============================================

Servers
#include <stdio.h>
 
int arr[20];
short dp[ 1<<20 ];
char dp2[ 1<<20 ];
int m, n;
 
int main() {
	
	int i, j, k, a, b;
	scanf("%d %d", &n, &m);
	
	for(i = 0; i < m ; i++)
	{
		scanf("%d %d", &a, &b);
		arr[a-1] |= (1 << (b-1));
		arr[b-1] |= (1 << (a-1));
	}
	
	dp[0] = 0;
	for(i = 1; i < (1<<n); i++)
		dp[i] = 1e4;
	
	for(i = 0; i < (1<<n); i++)
	{
		
		char cnt = 0;
		for(j = 0; j < n; j++)
		{
			if( (1<<j) & i )
			{
				int res = arr[j] & ~i;
				for(k = 0; k < n; k++)
					if( res & (1<<k) )
						cnt++;
			}
		}
		dp2[i] = cnt;
 
		for(j = 0; j < n; j++)
		{
			if( (1<<j) & i)
				continue;
			dp[ i|(1<<j)] = (dp[i|(1<<j)] <  (dp[i] + dp2[i])) ? dp[i|(1<<j)] : (dp[i] + dp2[i]);
 
		}
	}
	printf("%d\n", dp[ (1<<n)-1 ]);
	
	return 0;
}

================================================================================================

Cyclic Number
#include <stdio.h>
void swap (int *a,int *b,int *c);
int main()
{	int a,b,c;
 	scanf("%d %d %d",&a,&b,&c);
 	swap(&a,&b,&c);
printf("%d\n%d\n%d",a,b,c);
	return 0;
}
void swap(int *a,int *b,int *c)
{
  	int temp;
  	temp=*b;
  	*b=*a;
  	*a=*c;
  	*c=temp;
}

=========================================

Alphabet Game
# include <stdio.h>
# include <string.h>
int main()
{
int n,i,j,k;char s[10];char c1[10];int x,c;
scanf("%s",s);
int y=strlen(s);
scanf("%d",&n);
for(i=0;i<n;i++)
{
    c=0;
    scanf("%s",c1);
     x=strlen(c1);
     for(j=0;j<x;j++)
     {
         for(k=0;k<y;k++)
         {
           if(c1[j]==s[k])
                c++;
         }
     }
     if(c==x)
        printf("Yes\n");
     else
        printf("No\n");
}
 
    return 0;
}

  
============================================

Recursion 3 : Compute a^n
#include <stdio.h>
 
long power (int, int);
 
int main()
{
    int pow, num;
    int result;
 
 
    scanf("%d", &num);
 
    scanf("%d", &pow);
    result = power(num, pow);
    printf("The value of %d power %d is %d", num, pow, result);
    return 0;
}
 
long power (int num, int pow)
{
    if (pow)
    {
        return (num * power(num, pow - 1));
    }
    return 1;
}

===================================================

Getting Bits
#include<stdio.h>
int countBit(int);
int main()
{
	int num;
	
	scanf("%d",&num);

	printf("%d",countBit(num));
	return 0;
}

int countBit(int n)
{
	int count=0,i;
	if(n==0) return 0;
	for(i=0; i< 32; i++)
	{	
		if( (1 << i) & n)
			count=i;
	}
	return ++count;
}

=============================================
 
SYMMETRIC MATRIX using Functions
#include<stdio.h>
 
int main()
{
   int m, n, c, d, matrix[10][10];
 int flag=1;
 
   scanf("%d%d",&m,&n);
 
 if(m==n)
 {
   for (  c = 0 ; c < m ; c++ )
   {   for ( d = 0 ; d < n ; d++ )
         scanf("%d",&matrix[c][d]);
   }
 
  
  
       for ( c = 0 ; c < m ; c++ )
       {
           for ( d = 0 ; d < m ; d++ )
           {
               if ( matrix[c][d] != matrix[d][c] )
               { flag=0;
                 goto XYZ; 
               }
           }
         
       }
 }
  else
    flag=0;
  
  XYZ:
  if (flag==1)
          printf("Symmetric");
   
   else
       printf("Not Symmetric");
 
   return 0;
}

========================================================
 
Friends And Foes
#include<stdio.h>
int initialise(int p[],int r[],int n)
{
    int i;
    for(i=1;i<=n;i++)
    {
        p[i]=i;
        r[i]=1;
    }
  return 0;
}
 
int findRoot(int p[],int e)
{
    int root=e;
      while(root!=p[root])
      {
          root=p[root];
      }
      
      p[e]=root;
      
      return root;
}
 
void findUnion(int p[],int r[],int c1,int c2)
{
    int p1=findRoot(p,c1);
    int p2=findRoot(p,c2);
    
    if(p1==p2)
     return ;
     
     if(r[p1]>r[p2])
     {
         r[p2]+=r[p1];
         p[p1]=p2;
     }
     else
     {r[p1]+=r[p2];
         p[p2]=p1;
         
     }
}
int main()
{
    int n,f,e;
    scanf("%d%d",&n,&f);
    int p[n+1],r[n+1];
    initialise(p,r,n);
    int i;
    for(i=0;i<f;i++)
    {
       int f1,f2;
       scanf("%d%d",&f1,&f2);
       
       findUnion(p,r,f1,f2);
    }
    
    scanf("%d",&e);
    int max=0;
    int flag[n+1];
    for(i=1;i<=n;i++)flag[i]=1;
    
    for(i=0;i<e;i++)
    {
        int p1,p2;
        scanf("%d%d",&p1,&p2);
        
        int r1=findRoot(p,p1);
        int r2=findRoot(p,p2);
        
        if(r1==r2)
         flag[r1]=0;
    }
    
    for(i=1;i<=n;i++)
    {
        if(findRoot(p,i)==i&&flag[i]!=0&&r[i]>max)
        max=r[i];
        
    }
    
    printf("%d",max);
    
    
    return 0;
}

=======================================================

Maximum Element in an Array using Functions
#include <stdio.h>
 
int main()
{
    int array[50], size, i, largest;
   
    scanf("%d", &size);
   
    for (i = 0; i < size; i++)
        scanf("%d", &array[i]);
    largest = array[0];
    for (i = 1; i < size; i++)
    {
        if (largest < array[i])
            largest = array[i];
    }
    printf("%d is the maximum element in the array", largest);
    return 0;
}

==============================================================================================================
//End of SESSION 7

==============================================================================================================
//End of SESSION 7

==============================================================================================================
//End of SESSION 7

==============================================================================================================
//End of SESSION 7



SESSION 8

=========

Structure - 1 Students Details
#include <stdio.h>
#include <string.h>
struct Student
{
  	char name[30];
  	char department[20];
  	int yearOfStudy;
  	float cgpa;
};
int main()
{
	int MAX,i,j;
  	float t;
  	char temp1[25],temp2[25];
  	scanf("%d",&MAX);
  	struct Student S1[MAX];
  	for(i=0;i<MAX;i++)    
      	scanf("%s%s%d%f",S1[i].name,S1[i].department,&S1[i].yearOfStudy,&S1[i].cgpa);
  	for(i=0;i<MAX;i++)
    {
      	for(j=0;j<MAX-i-1;j++)
        {
          	if(strcmp(S1[j].name,S1[j+1].name)>0)
            {              	
              	strcpy(temp1,S1[j].name);
           		strcpy(S1[j].name,S1[j+1].name);
           		strcpy(S1[j+1].name,temp1);
              	strcpy(temp2,S1[j].department);
            	strcpy(S1[j].department,S1[j+1].department);
            	strcpy(S1[j+1].department,temp2);
              	S1[j].yearOfStudy=S1[j].yearOfStudy^S1[j+1].yearOfStudy;
              	S1[j+1].yearOfStudy=S1[j].yearOfStudy^S1[j+1].yearOfStudy;
              	S1[j].yearOfStudy=S1[j].yearOfStudy^S1[j+1].yearOfStudy;
              	t=S1[j].cgpa;	
              	S1[j].cgpa=S1[j+1].cgpa;
              	S1[j+1].cgpa=t;
            }
        }
    }
  	for(i=0;i<MAX;i++)    
      	printf("Name:%s\nDepartment:%s\nYear of study:%d\nCGPA:%.1f\n",S1[i].name,S1[i].department,S1[i].yearOfStudy,S1[i].cgpa);
  	//printf("%f",s[0].cgpa);
	return 0;
}

==============================================================================================================
Multiply by 5
#include <stdio.h>

struct 
{
  int n;
}ram;

int main()
{
  scanf("%d",&ram.n);
  int p=ram.n*5;
  printf("%d",p);
	return 0;
}

===================================================================

Find no of characters in name
#include <stdio.h>
#include <string.h>
struct
{
  char c[20];
}N;

int main()
{
  scanf("%[^\n]%*c",N.c);
  int l=strlen(N.c);
  printf("%d",l);

	return 0;
}

===========================================================

Sum of cube of Digits
#include <stdio.h>
struct
{
  int n;
}N;

int main()
{
  scanf("%d",&N.n);
  int r,sum=0;
  while(N.n>0)
  {
    r=N.n%10;
    sum=sum+r;
    N.n/=10;
  }
  int p=sum*sum*sum;
  printf("Sum=%d\n",sum);
  printf("Cube=%d",p);

	return 0;
}

==========================================================

printing names
#include <stdio.h>
struct
{
  char c[20];
}N;

int main()
{
  scanf("%[^\n]%*c",N.c);
  printf("Hi your name is %s",N.c);

	return 0;
}

=================================================
Passing structure by reference
#include <stdio.h>
struct
{
  int f;
  float i;
}M;

int main()
{
  int i,s1=0;
  float s2=0.0;
  for(i=0;i<2;i++)
  {
    scanf("%d",&M.f);
    scanf("%f",&M.i);
    s1+=M.f;
    s2+=M.i;
  }
  printf("%dfeet\n",s1);
  printf("%0.1finches",s2);

	return 0;
}

===================================================

Structure 40
#include <stdio.h>
struct
{
  int f[2];
  int i[2];
}M;

int main()
{
  int i,s1,s2,S1,S2;
  for(i=0;i<2;i++)
  {
    scanf("%d",&M.f[i]);
    scanf("%d",&M.i[i]);
  }
  s1=(M.f[0]+M.f[1]);
    s2=(M.i[0]+M.i[1]);
  if(M.f[0]>M.f[1])
  {
  S1=(M.f[0]-M.f[1]);
    S2=(M.i[0]-M.i[1]);
  }
  else
  {
  S1=(M.f[1]-M.f[0]);
    S2=(M.i[1]-M.i[0]);
  }
  
  printf("%d ft %d inch\n",s1,s2);
  printf("%d ft %d inch",S1,S2);
  return 0;
  
}
==================================================

Student Management Array of Structure
#include <stdio.h>
struct student
{
  int roll;
  char name[20];
  float marks;
}s[3];

int main()
{
  int i;
  for(i=0;i<3;i++)
  {
    s[i].roll=i+1;
    scanf("%s %f",s[i].name,&s[i].marks);
  }
  for(i=0;i<3;i++)
  {
    printf("Roll number=%d\n",s[i].roll);
    printf("Name=%s\n",s[i].name);
    printf("Marks=%0.2f\n",s[i].marks);
  }

	return 0;
}

=================================================================

Multiplication table
#include <stdio.h>
struct
{
  int n;
}a;

int main()
{
  int i;
  scanf("%d",&a.n);
  for(i=1;i<=5;i++)
  {
    printf("%d*%d=%d\n",i,a.n,a.n*i);
  }

	return 0;
}

=================================================================================			

Money with Arun


#include <stdio.h>
int main()
{
  struct money{
  int a,n,i;
  }m;
  scanf("%d %d",&m.a,&m.n);
  for(m.i=1;m.i<=m.n;m.i++)
  {
    m.a*=2;
  }
  printf("%d",m.a);

	return 0;
}

========================================================

Passing structure by reference
#include <stdio.h>
struct distance
{
    int feet;
    float inch;
};
void add(struct distance d1,struct distance d2, struct distance *d3); 

int main()
{
    struct distance dist1, dist2, dist3;

   
   
    scanf("%d", &dist1.feet);
   
    scanf("%f", &dist1.inch);

   
   
    scanf("%d", &dist2.feet);
   
    scanf("%f", &dist2.inch);

    add(dist1, dist2, &dist3); 

    
    printf("%dfeet\n%.1finches", dist3.feet, dist3.inch);

    return 0;
}
void add(struct distance d1,struct distance d2, struct distance *d3) 
{
     
     d3->feet = d1.feet + d2.feet; 
     d3->inch = d1.inch + d2.inch;

  
}

===============================================================

Simple Structure
#include <stdio.h>
struct student
{
    char name[50];
    int roll;
    float marks;
} s;

int main()
{
    int i;
      scanf("%s",&s.name[0]);

scanf("%d",&s.roll);
        scanf("%f",&s.marks);

    
        
        printf("Name=%s\n",s.name);
       printf("Roll number=%d\n",s.roll);
        printf("Marks=%.1f\n",s.marks);
  
    return 0;
}
================================================================

Structure 33
#include <stdio.h>
struct fractions
{
  	int neum;
  int denom;
  float res;
};

int main()
{
  	struct fractions a,b;
  scanf("%d %d",&a.neum,&a.denom);
  scanf("%d %d",&b.neum,&b.denom);
  a.res=a.neum/a.denom;
        b.res=b.neum/b.denom;
if(a.res>b.res)
{
  	printf("%d/%d is greater than %d/%d",a.neum,a.denom,b.neum,b.denom);
}
  else
    printf("%d/%d is smaller than %d/%d",a.neum,a.denom,b.neum,b.denom);
	return 0;
}

===========================================================================================

Structures - 2 College Details

#include <stdio.h>
#include <string.h>
struct College
{
  	char name[30];
  	char passPercentage[20];
  	int yearOfStudy;
  	float passPercentage;
};
int main()
{
	int MAX,i,j;
  	float t;
  	char temp1[25],temp2[25];
  	scanf("%d",&MAX);
  	struct Student S1[MAX];
  	for(i=0;i<MAX;i++)    
      	scanf("%s%s%d%f",S1[i].name,S1[i].city,&S1[i].establishmentYear,&s[i].passPercentage);
  	for(i=0;i<MAX;i++)
    {
      	for(j=0;j<MAX-i-1;j++)
        {
          	if(strcmp(S1[j].name,S1[j+1].name)>0)
            {              	
              	strcpy(temp1,s[j].name);
           		strcpy(s[j].name,s[j+1].name);
           		strcpy(s[j+1].name,temp1);
              	strcpy(temp2,s[j].city);
            	strcpy(s[j].city,s[j+1].city);
            	strcpy(s[j+1].city,temp2);
              	s[j].establishmentYear=s[j].establishmentYear^s[j+1].establishmentYear;
              	s[j+1].establishmentYear=s[j].establishmentYear^s[j+1].establishmentYear;
              	s[j].establishmentYear=s[j].establishmentYear^s[j+1].establishmentYear;
              	t=s[j].passPercentage;	
              	s[j].passPercentage=s[j+1].passPercentage;
              	s[j+1].passPercentage=t;
            }
        }
    }
  printf("Details of colleges\n");
  	for(i=0;i<MAX;i++)    
    {
      	printf("Name:%s\nCity:%s\nYear of establishmet:%d\nPass percentage:%.1f\n",s[i].name,s[i].city,s[i].establishmentYear,s[i].passPercentage);
    }
	return 0;
}

=======================================================================================

Passing structure by reference
#include <stdio.h>
struct distance
{
    int feet;
    float inch;
};
void add(struct distance d1,struct distance d2, struct distance *d3); 

int main()
{
    struct distance dist1, dist2, dist3;

   
   
    scanf("%d", &dist1.feet);
   
    scanf("%f", &dist1.inch);

   
   
    scanf("%d", &dist2.feet);
   
    scanf("%f", &dist2.inch);

    add(dist1, dist2, &dist3); 

    
    printf("%dfeet\n%.1finches", dist3.feet, dist3.inch);

    return 0;
}
void add(struct distance d1,struct distance d2, struct distance *d3) 
{
     
     d3->feet = d1.feet + d2.feet; 
     d3->inch = d1.inch + d2.inch;

  
}

======================================================================

Structure 41
#include<stdio.h>
typedef struct TIME
{
  int seconds;
  int minutes;
  int hours;
}Time;
void add(Time t1,Time t2,Time *t3);

int main()
{
    Time time1, time2,time3;
   scanf("%d %d %d", &time1.hours, &time1.minutes, &time1.seconds);
    scanf("%d %d %d", &time2.hours, &time2.minutes, &time2.seconds);

//    printf("%d %d %d", time1.hours, time1.minutes, time1.seconds);
  //  printf("%d %d %d", time2.hours, time2.minutes, time2.seconds);

  
  add(time1, time2,&time3);
  
  printf("%d hrs\n%d min\n%d sec",time3.hours,time3.minutes,time3.seconds);
  return 0;
}
void add(Time t1,Time t2,Time *t3)
{
  t3->hours=t1.hours+t2.hours;
  t3->minutes=t1.minutes+t2.minutes;
  t3->seconds=t1.seconds+t2.seconds;
}

============================================================================

Student Management Systems
#include <stdio.h>
struct student 
{
  	char name[15];
  	int roll;
  	float marks;
  
};


int main()
{
	struct student s;
scanf("%s %d %f",&s.name[0],&s.roll,&s.marks);
  printf("Name=%s\nRoll number=%d\nMarks=%.2f",s.name,s.roll,s.marks);
  
  
  return 0;
  
}

====================================================================

Structure 33
#include <stdio.h>
struct fractions
{
  	int neum;
  int denom;
  float res;
};

int main()
{
  	struct fractions a,b;
  scanf("%d %d",&a.neum,&a.denom);
  scanf("%d %d",&b.neum,&b.denom);
  a.res=a.neum/a.denom;
        b.res=b.neum/b.denom;
if(a.res>b.res)
{
  	printf("%d/%d is greater than %d/%d",a.neum,a.denom,b.neum,b.denom);
}
  else
    printf("%d/%d is smaller than %d/%d",a.neum,a.denom,b.neum,b.denom);
	return 0;
}

===========================================================================

printing names
#include <stdio.h>
struct Name
{
  char	name[150];
};
int main()
{	struct Name n;
 	scanf("%s",&n.name[0]);
      printf("Hi your name is %s",n.name);

	return 0;
}

===============================================

Student Management Array of Structure
#include <stdio.h>
struct student 
{
  	char name[15];
  	int roll;
  	float marks;
  
};


int main()
{
	struct student s[3];
int i;
  for(i=0;i<3;i++)
  {	s[i].roll=i+1;
    scanf("%s %f",&s[i].name[0],&s[i].marks);
  printf("Roll number=%d\nName=%s\nMarks=%.2f\n",s[i].roll,s[i].name,s[i].marks);
  }
  
  return 0;
  
}

==============================================================
 
Structure 40
#include <stdio.h>

typedef struct Distance
{
    int feet;
    int inch;
}Dist;
void sumx(Dist d1,Dist d2,Dist *sum);
void subst(Dist d1,Dist d2,Dist *sub);
int main()
{
    Dist d1,d2,sum,sub;
    scanf("%d", &d1.feet);    
    scanf("%d", &d1.inch);   
    scanf("%d", &d2.feet);
    scanf("%d", &d2.inch);
sumx(d1,d2,&sum);
subst(d1,d2,&sub);
  
  
  printf("%d ft %d inch\n",sum.feet, sum.inch);
  printf("%d ft %d inch",sub.feet, sub.inch);
  return 0;
}

void sumx(Dist d1,Dist d2,Dist *sum)
{
    sum->feet = d1.feet+d2.feet;
    sum->inch = d1.inch+d2.inch;
}
   void subst(Dist d1,Dist d2,Dist *sub)
   {
     if(d1.feet>d2.feet)
     {sub->feet = d1.feet-d2.feet;
    	sub->inch = d1.inch-d2.inch;
     }
     else{
       sub->feet = d2.feet-d1.feet;
    	sub->inch = d2.inch-d1.inch;
     }
   }

===================================================

Static Structure - Employee
#include <stdio.h>
struct employee
{
  	char name[20];
  	int empid;
  int salary;
};


int main()
{		struct employee emp;
 	scanf("%s %d %d",&emp.name[0],&emp.empid,&emp.salary);
 	printf("%s\n%d\n%d",emp.name,emp.empid,emp.salary);

	return 0;
}

==========================================================

Find no of characters in name
#include <stdio.h>
#include<string.h>
struct string
{
  	char name[15];
  	int len;
  
};

int main()
{	struct string s;
 	scanf("%s",&s.name[0]);
 	s.len=strlen(s.name);
 	printf("%d",s.len);

	return 0;
}

=========================================================

AVERAGES
#include <stdio.h>
struct marks
{
  	int mks;
};

int main()
{  int avg=0,i;
  struct marks m[3];
 for( i=0;i<3;i++)
 {scanf("%d",&m[i].mks);
 avg+=m[i].mks;
  printf("%d ",m[i].mks);
 }
 printf("%d",(avg/3));
	return 0;
}

==============================================================================================================
//End of SESSION 8

==============================================================================================================
//End of SESSION 8
================================================================================================
==============
//End of SESSION 8

==============================================================================================================
//End of SESSION 8

SESSION 9

=========

Find the length of the String using Pointers
#include <stdio.h>
#include <string.h>
int main()
{
  char a[20];
  scanf("%[^\n]%*c", a);
  int n=strlen(a);
  printf("%d",n);
  
  

	return 0;
}

===================================================

Numbering book pages
#include <stdio.h>
int main()
{
  int q,n;
  scanf("%d",&q);
  if(q<10)
    printf("%d",q);
  else
  {
    if((q-9)%2!=0)
      printf("Impossible");
  	else
    {
      n=9+((q-9)/2);
      printf("%d",n);
    }
  }
	return 0;
}

====================================================

Pointer - 2
#include <stdio.h>
#include <ctype.h>
int main()
{
  char a;
  scanf("%c",&a);
  printf("The ASCII value is:%d",a);
  a=toupper(a);
  printf("\nThe uppercase letter is:%c",a);

	return 0;
}

==================================================

SUM OF ARRAY
#include <stdio.h>
int main()
{
  int t,n,a,i,j;
  scanf("%d",&t);
  if(t>0 && t<=1000)
  {
  for(i=1;i<=t;i++)
  {
    scanf("%d",&n);
    int sum=0;
    for(j=0;j<n;j++)
    {
      scanf("%d",&a);
      sum=sum+a;
    }
    printf("%d\n",sum);
  }
  }
  else
    printf("INVALID INPUT");
    

	return 0;
}

===================================================

Pointers - 24
#include <stdio.h>
#include <string.h>
int main()
{
  char a[20],q;
  scanf("%[^\n]%*c",a);
  scanf("%c",&q);
  int i;
  for(i=0;i<strlen(a);i++)
  {
    if(a[i]!=q)
      printf("%c",a[i]);
  }
  

	return 0;
}

======================================================

FACTORIAL
#include <stdio.h>
int main()
{
  int prod=1,n,i;
  scanf("%d",&n);
  for(i=1;i<=n;i++)
  {
    prod=prod*i;
  }
  printf("%d",prod);

	return 0;
}

=======================================================

Pointers - 9
#include <stdio.h>
int main()
{
  int i,a,j,n;
  scanf("%d",&n);
  for(i=0;i<n;i++)
  {
    scanf("%d",&a);
    int count=0;
    for(j=2;j<a;j++)
    {
      if(a%j==0)
        count++;
    }
    if(count>0)
      printf("%d is a composite number\n",a);
    else
      printf("%d is a prime number\n",a);
  }
      

	return 0;
}
===========================================================

REVERSE STRING
#include <stdio.h>
#include <string.h> 
int main()
{
  int n,i;
  char a[20];
  scanf("%[^\n]%*c",a);
  n=strlen(a);
  for(i=n-1;i>=0;i--)
  {
    printf("%c",a[i]);
  }
  

	return 0;
}

====================================================

Print the given value using Pointers
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  printf("%d",n);

	return 0;
}

=====================================================

Pointers - 48

#include <stdio.h>
#include <string.h> 
int main()
{
  char c[20];
  scanf("%[^\n]%*c",c);
  int i,l=strlen(c);
  for(i=l-1;i>=0;i--)
  {
    printf("%c",c[i]);
  }

	return 0;
}

==========================================

Pointers - 9
#include <stdio.h>
int main()
{
int x;
  scanf("%d",&x);
  int y[x];
  int i;
  for(i=0;i<x;i++)
    scanf("%d",&y[i]);
  int counter=0;
  int j;
  
  for(i=0;i<x;i++)
  {
    counter=0;
  for(j=2;j<y[i];j++)
  {
    if(y[i]%j==0)
    {
      counter=1;
      break;
    }
  }
    if(counter==0)
      printf("%d is a prime number\n",y[i]);
      else if(counter==1)
        printf("%d is a composite number\n",y[i]);
             }
	return 0;
}

======================================================
 
REV ARRAY
#include <stdio.h>
int main()
{
  int x;
  scanf("%d",&x);
  int y[x],i;
  for(i=0;i<x;i++)
  {
    scanf("%d",&y[i]);
  }
  for(i=x-1;i>=0;i--)
    printf("%d ",y[i]);

	return 0;
}

=======================================================

Reverse array
#include <stdio.h>
int main()
{
	int x;
  scanf("%d",&x);
  int y[x];
  int i;
  for(i=0;i<x;i++)
  {
    scanf("%d",&y[i]);
    
  }
  for(i=x-1;i>=0;i--)
    printf("%d ",y[i]);
	return 0;
}

=======================================================

Pointers - 30
#include <stdio.h>
int main()
{
	char c;
  	scanf("%c",&c);
  	if(isupper(c)>0)
      	printf("Upper case character was entered\nLower case=%c",tolower(c));
  	else if(isupper(c)==0)
    	printf("Lower case character was entered\nUpper case=%c",toupper(c));
	return 0;
}

============================================================

Pointer 3
#include <stdio.h>
int main()
{
int x;
  scanf("%d",&x);
  int y;
  scanf("%d",&y);
  float z;
  z=x-y;
  printf("%.2f",z);
	return 0;
}

=============================================

Find the length of the String using Pointers

#include <stdio.h>
#include <string.h>
int main()
{
  char c[19];
  scanf("%[^\n]%*c",c);
  int l=strlen(c);
  printf("%d",l);

	return 0;
}
==========================================================

SUM OF 6 NUMBERS

#include <stdio.h>
int main()
{
  int sum=0,i,a[6];
  for(i=0;i<6;i++)
  {
    scanf("%d",&a[i]);
    sum+=a[i];
  }
  printf("%d",sum);

	return 0;
}

=========================================================

String Reverse

#include <stdio.h>
#include <string.h> 
int main()
{
  char c[20];
  scanf("%[^\n]%*c",c);
  int l=strlen(c),i;
  printf("Reverse of the string is:");
  for(i=l-1;i>=0;i--)
  {
    printf("%c",c[i]);
  }
	return 0;
}

==========================================================

REV ARRAY

#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int a[n],i;
  for(i=0;i<n;i++)
  {
    scanf("%d",&a[i]);
  }
  for(i=n-1;i>=0;i--)
  {
    printf("%d\n",a[i]);
  }

	return 0;
}

=============================================================

BIGGEST VALUE IN A GIVEN ARRAY

#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int a[n],i,max=0;
  for(i=0;i<n;i++)
  {
    scanf("%d",&a[i]);
    if(a[i]>max)
      max=a[i];
  }
  printf("%d",max);

	return 0;
}

========================================================

Pointer - 7

#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  int a[10],i;
  for(i=0;i<n;i++)
  {
    scanf("%d",&a[i]);
    if(a[i]>0)
      printf("%d=Positive\n",a[i]);
    else if(a[i]<0)
      printf("%d=Negative\n",a[i]);
    else
      printf("0=Zero\n");
  }
	return 0;
}

=================================================

Alphabets

#include <stdio.h>
#include <string.h> 
int main()
{
  char a,s;
  scanf("%c\n",&a);
  scanf("%c",&s);

  int q,w,i;
  q=a;
  w=s;
 for(i=q;i<=w;i++)
  {	
   printf("%c ",i);
  }
	return 0;
}

=====================================================

AMELIA DICE

#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  if(n>10000)
    printf("Invalid Input");
  else
  {
    int i,q;
    scanf("%d",&q);
    int a[q];
    for(i=0;i<q;i++)
    {
      scanf("%d",&a[i]);
      if(a[i]%3==0)
        printf("%d\n",a[i]);
    }
  }
    

	return 0;
}

==========================================================

Pointer Bombing


#include <stdio.h>
 
main()
{
int fall, n, r, i=1;
long double a, b[51], c[51];
for(c[1]=!(b[0]=b[1]=c[0]=1);++i<=50;b[i]=i*b[i-1],c[i]=(i-1)*(c[i-1]+c[i-2]));
for(scanf("%d",&fall);fall--;printf("%.5Lf\n",(a/c[n])*n)){
for(i=!(a=!scanf("%d %d",&n,&r));++i<=n;a+=(!(r%i))?b[n-1]/b[n-i]*c[n-i]:0);}
return 0;
}


===============================================================================

LARGEST OF 2 NUMBERS

#include <stdio.h>
int main()
{
  int a,b;
  scanf("%d %d",&a,&b);
  if(a>b)
    printf("%d",a);
  else
    printf("%d",b);

	return 0;
}

=====================================================================

Adding two numbers

#include <stdio.h>
int main()
{
  int first,second,*p,*q,sum;
  scanf("%d%d",&first,&second);
p=&first;
  q=&second;
  sum=*p + *q;
  printf("The sum of the entered numbers is=%d\n",sum);
	return 0;
}

=================================================================

Print the given value using Pointers

#include <stdio.h>
int main()
{
  int a;
  scanf("%d",&a);
  printf("%d",a);

	return 0;
}

==============================================================

SWAPPING
#include <stdio.h>
 
int main()
{
   int x, y, *a, *b, temp;
 
 
   scanf("%d%d", &x, &y);
 
   a = &x;
   b = &y;
 
   temp = *b;
   *b = *a;
   *a = temp;
 
   printf("%d %d", x, y);
 
   return 0;
}

=======================================
AMELIA DICE
#include <stdio.h>
int main()
{	int n;
 	scanf("%d",&n);
 	if(n>0&&n<=10000)
    {
      int c;
      scanf("%d",&c);
      int x[c];
      int i;
      for(i=0;i<c;i++)
      {
        scanf("%d",&x[i]);
        if(!(x[i]>0&&x[i]<=100))
        {goto XYZ;
        }
      }
      for(i=0;i<c;i++)
      {
        if(x[i]%3==0)
          printf("%d\n",x[i]);
      }
      
      
    }
 else
 {  XYZ:
	printf("Invalid Input");
 }

	return 0;
}

==========================================

BIGGEST OF THREE NUMBERS
#include<stdio.h>
int main()
{
	int a,b,c;
	int *p1,*p2,*p3;
	
	scanf("%d",&a);
	
	scanf("%d",&b);
	
	scanf("%d",&c);
	
	p1=&a;
	p2=&b;
	p3=&c;

	if((*p1>=*p2)&&(*p1>=*p3))
	printf("%d",*p1);
	else
	{
		if((*p2>=*p1)&&(*p2>=*p3))
		printf("%d",*p2);
		else
		printf("%d",*p3);
	}
	return 0;
	
}


=============================================

Find the length of the String using Pointers
#include<stdio.h>
int main() {
  char str[20], *pt;
  int i = 0;
  scanf("%s",&str[0]);
  pt = str;
  while (*pt != '\0') {
    i++;
    pt++;
  }
  printf("%d", i);

  return 0;
}

========================================

Pointers - 24
#include<stdio.h>

#include<string.h>
 
void del(char str[], char ch);
 
int main() {
   char str[20];
   char ch;
 
 
   fgets(str,20,stdin);
 
  
   scanf("%ch", &ch);
 
   del(str, ch);
  return 0;
}
 
void del(char str[], char ch) {
   int i, j = 0;
   int size;
   char ch1;
   char str1[10];
 
   size = strlen(str);
 
   for (i = 0; i < size; i++) {
      if (str[i] != ch) {
         ch1 = str[i];
         str1[j] = ch1;
         j++;
      }
   }
   str1[j] = '\0';
 
   printf("%s", str1);
}

==============================================

Function pointer
#include <stdio.h>
int greater(int *a,int *b);

int main()
{	
  	int a,b;
  scanf("%d %d",&a,&b);
  int x;
	x=greater(&a,&b);
	if(x==1)
      printf("The number %d is larger",a);
  else
    printf("The number %d is larger",b);
	return 0;
}
int greater(int *a,int *b)
{
  if(*a>*b)
    return 1;
  else 
    return 0;
}

=============================================

 Swap
#include <stdio.h>
 
int main()
{
   float x, y, *a, *b, temp;
 
 
   scanf("%f %f", &x, &y);
 
   a = &x;
   b = &y;
 
   temp = *b;
   *b = *a;
   *a = temp;
 
   printf("%.2f\n%.2f", x, y);
 
   return 0;
}

===========================================

Pointer - 2
#include <stdio.h>

int main()
{
    char c;
 
 
    scanf("%c", &c);  
    
    printf("The ASCII value is:%d", c);
  c=c-32;
  printf("\nThe uppercase letter is:%c",c);
    return 0;
}

============================================
 
Pointers 6
#include <stdio.h>
int main()
{
    char c;
    int isLowercaseVowel, isUppercaseVowel;

  
    scanf("%c",&c);

  
    isLowercaseVowel = (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u');

 
    isUppercaseVowel = (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U');

 
    if (isLowercaseVowel || isUppercaseVowel)
        printf("vowel");
    else
        printf("consonant");
    return 0;
}

=============================================================

SUM OF 6 NUMBERS
#include<stdio.h>

int main() {
   int numArray[6];
   int i, sum = 0;
   int *ptr;

   

   for (i = 0; i < 6; i++)
      scanf("%d", &numArray[i]);

   ptr = numArray; 

   for (i = 0; i < 6; i++) {
      sum = sum + *ptr;
      ptr++;
   }

   printf("%d", sum);
return 0;
}


==============================================================================================================
//End of SESSION 9
==============================================================================================================
//End of SESSION 9
==============================================================================================================
//End of SESSION 9
==============================================================================================================
//End of SESSION 9



SESSION 10

==========

Go to Rome
#include<stdio.h>
#include<string.h>
 
int digit(char);
 
int main(){
 
    char roman_Number[1000];
    int i=0;
    long int number =0;
 
   
    scanf("%s",roman_Number);
 
    while(roman_Number[i]){
 
         if(digit(roman_Number[i]) < 0){
             printf("Invalid roman digit : %c",roman_Number[i]);
             return 0;
         }
 
         if((strlen(roman_Number) -i) > 2){
             if(digit(roman_Number[i]) < digit(roman_Number[i+2])){
                 printf("Invalid roman number");
                 return 0;
             }
         }
 
         if(digit(roman_Number[i]) >= digit(roman_Number[i+1]))
             number = number + digit(roman_Number[i]);
         else{
             number = number + (digit(roman_Number[i+1]) - digit(roman_Number[i]));
             i++;
         }
         i++;
    }
 
    printf("%ld",number);
 
    return 0;
 
}
 
int digit(char c){
 
    int value=0;
 
    switch(c){
         case 'I': value = 1; break;
         case 'V': value = 5; break;
         case 'X': value = 10; break;
         case 'L': value = 50; break;
         case 'C': value = 100; break;
         case 'D': value = 500; break;
         case 'M': value = 1000; break;
         case '\0': value = 0; break;
         default: value = -1; 
    }
 
    return value;
}

=====================================================================

Adding two distances
#include <stdio.h>
struct Distance
{
  int feet;
  float inch;
}d1,d2,sumOfDistances;

int main()
{
  scanf("%d %f",&d1.feet,&d1.inch);
  scanf("%d %f",&d2.feet,&d2.inch);
  sumOfDistances.feet=d1.feet+d2.feet;
  sumOfDistances.inch=d1.inch+d2.inch;
  if(sumOfDistances.inch>12)
  {
    sumOfDistances.feet++;
    sumOfDistances.inch-=12;
  }
  printf("Sum of distances=%d feet and %0.2f inches",sumOfDistances.feet,sumOfDistances.inch);

	return 0;
}

==============================================================================================

Printing Next
#include <stdio.h>
#include <string.h>
int main()
{
  char q[10];
  scanf("%[^\n]%*c",q);
  int a,l=strlen(q),i;
  for(i=0;i<l;i++)
  {
    a=q[i];
    printf("%c",++a);
  }

	return 0;
}

===================================================================

IO 34
#include <stdio.h>
int main()
{
  int basic;
  float total,hra,da,bonus;
  scanf("%d",&basic);
  hra=0.8*basic;
  da=0.4*basic;
  bonus=0.25*hra;
  total=basic+hra+da+bonus;
  printf("Total Salary=%0.2f",total);

	return 0;
}

=====================================================================

Pointers - 34
#include <stdio.h>
#include <string.h> 
int main()
{
  char q[20],qq;
  scanf("%[^\n]%*c\n",q);
  scanf("%c",&qq);
  int l,a=qq,Q;
  if(a<97)
    Q=a+32;
  else
    Q=a-32;
  l=strlen(q);
  int i,x;
  for(i=0;i<l;i++)
  {
    x=q[i];
    if(x==a||x==Q)
      continue;
    else
      printf("%c",x);
  }
    
  

	return 0;
}

======================================================================

Structure - 1 Students Details
#include <stdio.h>
#include <string.h>
struct Student
{
  	char name[30];
  	char department[20];
  	int yearOfStudy;
  	float cgpa;
};
int main()
{
	int MAX,i,j;
  	float t;
  	char temp1[25],temp2[25];
  	scanf("%d",&MAX);
  	struct Student s[MAX];
  	for(i=0;i<MAX;i++)    
      	scanf("%s%s%d%f",s[i].name,s[i].department,&s[i].yearOfStudy,&s[i].cgpa);
  	for(i=0;i<MAX;i++)
    {
      	for(j=0;j<MAX-i-1;j++)
        {
          	if(strcmp(s[j].name,s[j+1].name)>0)
            {              	
              	strcpy(temp1,s[j].name);
           		strcpy(s[j].name,s[j+1].name);
           		strcpy(s[j+1].name,temp1);
              	strcpy(temp2,s[j].department);
            	strcpy(s[j].department,s[j+1].department);
            	strcpy(s[j+1].department,temp2);
              	s[j].yearOfStudy=s[j].yearOfStudy^s[j+1].yearOfStudy;
              	s[j+1].yearOfStudy=s[j].yearOfStudy^s[j+1].yearOfStudy;
              	s[j].yearOfStudy=s[j].yearOfStudy^s[j+1].yearOfStudy;
              	t=s[j].cgpa;	
              	s[j].cgpa=s[j+1].cgpa;
              	s[j+1].cgpa=t;
            }
        }
    }
  	for(i=0;i<MAX;i++)    
      	printf("Name:%s\nDepartment:%s\nYear of study:%d\nCGPA:%.1f\n",s[i].name,s[i].department,s[i].yearOfStudy,s[i].cgpa);
  	//printf("%f",s[0].cgpa);
	return 0;
}

=====================================================================================

LOWER TRIANGULAR MATRIX
#include <stdio.h>
int main()
{
  int n,nn,i,j,count=0;
  scanf("%d %d",&n,&nn);
  int m[n][nn];
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&m[i][j]);
    }
  }
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      if (j>i && m[i][j]!=0)
        count++;
    }
  }
  if(count>0)
    printf("no");
  else
    printf("yes");

	return 0;
}

==============================================================

Pointers - 48
#include <stdio.h>
#include <string.h>
int main()
{
  char ch[20];
  scanf("%[^\n]%*c",ch);
  int l=strlen(ch);
  int i;
  for(i=l-1;i>=0;i--)
  {
    printf("%c",ch[i]);
  }
	return 0;
}

=================================================

Semester Holidays
#include <stdio.h>
int main()
{
  int n;
  scanf("%d",&n);
  if(n%2==0)
    printf("Long Vacation");
  else
    printf("Short Vacation");

	return 0;
}

======================================================

How many bits?
#include <stdio.h>
#include <math.h>
int main()
{
  int q,qq;
  scanf("%d",&q);
  qq=log2(q)+1;
  printf("%d",qq);

	return 0;
}

==============================================================

IO 35

#include <stdio.h>
int main()
{char prod_name[10];
 int qty;
 float prod_price,tot_price;
 scanf("%s",prod_name);
 scanf("%f",&prod_price);
 scanf("%d",&qty);
 tot_price=qty*prod_price;
 printf("\nProduct Details");
 printf("\n%s",prod_name);
 printf("\n%0.2f",prod_price);
 printf("\n%d",qty);
 printf("\nBill:%0.2f",tot_price);
 

	return 0;
}

====================================================================

Printing Next
#include <stdio.h>
#include<string.h>
int main()
{
char a[100];
  scanf("%s",&a[0]);
  int x=strlen(a);
  int i;
  int u;
  for(i=0;i<x;i++)
  {
    u=a[i];
    printf("%c",u+1);
  }
  
  
	return 0;
}

===========================================================================

How many bits?
#include<stdio.h>
int countBit(int);
int main()
{
	int num;
	
	scanf("%d",&num);

	printf("%d",countBit(num));
	return 0;
}

int countBit(int n)
{
	int count=0,i;
	if(n==0) return 0;
	for(i=0; i< 32; i++)
	{	
		if( (1 << i) & n)
			count=i;
	}
	return ++count;
}

========================================================================

Sum of cube of Digits
#include<stdio.h>
int main()
{ 

   int a,cube,sum=0,rem;

 scanf("%d",&a);
   while(a>0)
     { rem=a%10;
       cube=rem*rem*rem;
     
       sum+= cube;
       a/=10;
     }
   printf("  %d",sum);
     return 0;
}


===============================================================

Magic Square
#include <stdio.h>
int main()
{
	 int arr[100][100];
 	 int n=3,i,j,sum=0,sum1=0,sum2=0,sum3=0,flag=1;
	 
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&arr[i][j]);
            if(i==j)
            {sum+=arr[i][j];
            }
    	}
    }
            
    for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {	sum1+=arr[i][j];
     	sum2+=arr[j][i];
     	if(i+j+1==n)
        	{
          		sum3+=arr[i][j];
        	}
    }
    if(sum!=sum1 || sum2!=sum)
    	{
      		flag=0;
    		break;
      
    	}
            
  		sum1=0;
    	sum2=0;
  }
  if(flag==1 && sum==sum3){
            printf("Magic Square");}
   else{
            printf("Not a Magic Square");
      }      
	return 0;
}

==============================================================

Sum of Negative Numbers
#include <stdio.h>
int main()
{
	int x;
  scanf("%d",&x) ;
  int y[x],i;
  int sum=0;
  for(i=0;i<x;i++)
  { scanf("%d",&y[i]);
	if(y[i]<0)
      sum+=y[i];
  }
  printf("sum=%d",sum);
   return 0;
}

==============================================================

 IO 34
#include <stdio.h>
int main()
{
	float bp,hra,da,bon;
  	scanf("%f",&bp);
  	hra=0.8*bp;
  	da=0.4*bp;
  	bon=0.25*hra;
  	printf("Total Salary=%.2f",bp+hra+da+bon);
	return 0;
}

====================================================================

IO 35
#include <stdio.h>
int main()
{char c[10];
 float price;
 int x;
  scanf("%s",c);
  scanf("%f",&price);
   scanf("%d",&x);
 printf("Product Details\n");
 printf("%s\n",c);
 printf("%0.2f\n",price);
 printf("%d\n",x);
printf("Bill:%.2f",price*x);
 
 return(0);
}

=============================================================================

Pointers - 10


#include <stdio.h>
int main()
{
int a,b;
  scanf("%d %d",&a,&b);
  printf("The sum of the numbers is %d\nAccessing a string using pointer\nHello",a+b);
	return 0;
}

==================================================================================

Multiply by 5
#include <stdio.h>
int main()
{	int n;
  	scanf("%d",&n);
 	printf("%d",(n*5));

	return 0;
}

=============================

Aloo Kachori
#include <stdio.h>
#include <stdlib.h>

 
int main()
{int i;	
  int mod=100000;
	int t;
	int p[10001];
	scanf("%d",&t);
	while(t--)
	{
		int noi;
		scanf("%d",&noi);
		int sum=0,ing[noi];
		for( i=0;i<noi;i++)
		{
			scanf("%d",&ing[i]);
			
			sum=sum+ing[i];
		}
		for( i=0;i<=sum;i++)
		{
			p[i]=0;
		}
		p[0]=1;
      int j;
		for( i=0;i<noi;i++)
		{
			for( j=sum;j>=0;j--)
			{
				if(p[j]>0)
				{
					if(j+ing[i]<=sum)
				    {
				    	p[j + ing[i]] = ((p[j+ing[i]]) + (p[j]))%mod;
					}
				    
				}
			}
		}
		long long fsum=0;
		for( i=0;i<=sum;i++)
		{
			long long tempsum = ((long long)((long long)abs(sum-2*i))*p[i])%mod;
			fsum=((long long)fsum+tempsum)%mod;
		
			
		}
	    
		printf("%lld\n",fsum);
	}
 return 0;
} 
 
===================================================================

Tick Tick Tick
  #include <stdio.h>
  int main() {
        int hour, minute, second, timeinsec;
    scanf("%d", &hour);
    scanf("%d", &minute);
        scanf("%d", &second);
        timeinsec = second + (minute * 60) + (hour * 60 * 60);
        printf("%d",timeinsec);
        return 0;
  }

================================================================

How many bits?
#include<stdio.h>
int countBit(int);
int main()
{
	int num;

	scanf("%d",&num);

	printf("%d",countBit(num));
	return 0;
}

int countBit(int n)
{
	int count=0,i;
	if(n==0) return 0;
	for(i=0; i< 32; i++)
	{	
		if( (1 << i) & n)
			count=i;
	}
	return ++count;
}

======================================================

Multiplication table
#include <stdio.h>
int main()
{
    int n, i;
 scanf("%d",&n);
if(n>1&&n<999)
{ for(i=1; i<=5; ++i)
       {
        printf("%d * %d = %d\n", i, n, n*i);
    }
}
 
    return 0;
}

===========================================

Pointers - 10
#include <stdio.h>
int add(int *n1, int *n2);

int main()
{
    int num1 , num2 ;
  scanf("%d %d",&num1,&num2);
    printf("The sum of the numbers is %d",add( &num1, &num2));
  printf("\nAccessing a string using pointer\nHello");
  return 0;
}

int add(int * n1, int * n2)
{
 	int z;
  	z=*n1+*n2;
  return z;
 
}

==========================================

Lucy
#include <stdio.h>
int main()
{	int leap;
  	scanf("%d",&leap);
	if(leap%4==0){
      if(leap%100==0){
        if(leap%400==0){
          printf("%d is a leap year",leap);}
        else
          printf("%d is not a leap year",leap);
      }
      else printf("%d is a leap year",leap);
    }
 else printf("%d is not a leap year",leap);
	return 0;
}

================================================

IO 15
#include <stdio.h>
int main()
{
      int firstNumber, secondNumber, temporaryVariable;

     
      scanf("%d", &firstNumber);
	scanf("%d",&secondNumber);
    printf("Before Swapping\nx=%d\ny=%d",firstNumber, secondNumber);
      temporaryVariable = firstNumber;
      firstNumber = secondNumber;
      secondNumber = temporaryVariable;

      printf("\nAfter Swapping\n%d\n%d", firstNumber,secondNumber);
      

      return 0;
}


================================================

Pointers - 48
#include <stdio.h>
#include<string.h>
int main()
{
	char s[50];
	int len,i;

	
fgets(s,20,stdin);
	len=strlen(s);
	
	for(i=len;i>=0;i--)
		printf("%c",s[i]);
  return 0;

}

=============================================

Who is big and who is Dwarf
#include <stdio.h>
 
int main()
{
    int array[50], size, i, largest,smallest;
    scanf("%d", &size);
    for (i = 0; i < size; i++)
        scanf("%d", &array[i]);
    largest = array[0];
    for (i = 1; i < size; i++)
    {
        if (largest < array[i])
            largest = array[i];
    }
  smallest=array[0];
      for (i = 1; i < size; i++)
    {
        if (smallest > array[i])
            smallest = array[i];
      }
  
    printf("%d\n%d", largest,smallest);
    return 0;
}

==============================================================================================================
//End of SESSION 10
==============================================================================================================
//End of SESSION 10
==============================================================================================================
//End of SESSION 10
==============================================================================================================
//End of SESSION 10






=========================================================================
//CREATED BY AGUSTIN PAUL VASANTH M.C.A
==================================================================================================================================================



=================================================================================================================================================

#Only_For_Ref						
//Created By AG

=================================================================================================================================================

SESSION 1:

Input & Output

Q1 - IO 18
#include <stdio.h>
int main()
{
	float f,c;
  	scanf("%f",&f);
  	//printf("%f",f);
  	c=(0.55555556)*(f-32);
  	printf("%.2fC",c);
	return 0;
}

-----------------------------------------------------------------------

Q2 - Square root
#include <stdio.h>
int main()
{
  	int n,i;
	scanf("%d",&n);
  	for(i=1;i<=n;i++)
    {
      	if(i*i==n)
        {	
          	printf("%d",i);
          	break;
        }
    }
	return 0;
}

-----------------------------------------------------------------------

Q3 -  Indian Government
#include <stdio.h>
int main()
{
	int age;
  	scanf("%d",&age);
  	if(age>=18&&age<=60)
      printf("Eligible");
  	else
      printf("Not Eligible");
	return 0;
}

-----------------------------------------------------------------------

Q4 - IO 11
#include <stdio.h>
int main()
{
	float r,area;
  	scanf("%f",&r);
  	area=3.14*r*r;
  	printf("Area of Circle=%f",area);
  	printf("\nArea of Circle=%.2f",area);
	return 0;
}

-----------------------------------------------------------------------
Q5 - IO 14
#include <stdio.h>
int main()
{
	int n;
  	scanf("%d",&n);
  	printf("The Digit at ones place of %d is=%d",n,(n%10));
	return 0;
}

-----------------------------------------------------------------------

Q6 - Circle
#include <stdio.h>
int main()
{
	float r;
  	scanf("%f",&r);
  	printf("Area of Circle=%.2f",(3.14*r*r));
	return 0;
}

-----------------------------------------------------------------------

Q7 - Change case
#include <stdio.h>
#include<ctype.h>
int main()
{
  	int i=0;
	char s[10];
  	scanf("%s",s);
  	while(s[i])
    {
      	if(islower(s[i]))
           putchar (toupper(s[i]));
        else
           putchar (tolower(s[i]));
    	i++;
    }      	
	return 0;
}

-----------------------------------------------------------------------

Q8 - Twos Mod
#include <stdio.h>
int main()
{
	int a,b;
  	scanf("%d%d",&a,&b);
  	printf("%d",a%b);
	return 0;
}

-----------------------------------------------------------------------

Q9 - Better or Not
#include <stdio.h>
int main()
{
	int c1,c2;
  	scanf("%d%d",&c1,&c2);
  	if(c1>c2)
    	printf("College 1 is better");
  	else
      printf("College 2 is better");
	return 0;
}

-----------------------------------------------------------------------

Q10 - Tennis Championship
#include<stdio.h>
int main()
{
    int m;
    scanf("%d",&m);
    int a = 1;
    int b = 2,c;
    int ans = 0;
    while(1){
        if(b>m) break;
        ans++;
        c = a + b;
        a = b;
        b = c;
    }
    printf("%d",ans);
  return 0;
}

---------------------------------------------------------------------------------
SESSION 2:

Data types

Q1 - Moving Coins
#include <stdio.h>
int main()
{
	int a,b,c;
  	scanf("%d%d%d",&a,&b,&c);
  	if(a==b&&b==c)
      printf("equilateral");
  	else if(a!=b&&a!=c&&b!=c)
      printf("scalene");
  	else
      printf("isosceles");
	return 0;
}

-----------------------------------------------------------------------

Q2 -
 Substraction of numbers
#include <stdio.h>
int main()
{
	float a,b,diff;
  	scanf("%f%f",&a,&b);
  	diff=a-b;
  	printf("The Subtraction of two number is:%f",diff);
  	printf("\nThe Subtraction of two number is:%.2f",diff);
	return 0;
}

-----------------------------------------------------------------------

Q3 - I am Waiting
#include <stdio.h>
int main()
{
	int n;
  	scanf("%d",&n);
  	if(n>0)
      	printf("I am waiting");
  	else if(n<0)
      	printf("I am Not waiting");
	return 0;
}

-----------------------------------------------------------------------

Q4 - Division of numbers(Integer data type)
#include <stdio.h>
int main()
{
	int a,b;
  	scanf("%d%d",&a,&b);
  	printf("The division of two number is:%d",(a/b));
	return 0;
}

-----------------------------------------------------------------------

Q5 - Display your name
#include <stdio.h>
int main()
{
	char name[20];
  	scanf("%s",name);
  	printf("Your name is:%s",name);
	return 0;
}

-----------------------------------------------------------------------

Q6 - Sieve of Eratosthenes
#include <stdio.h>
int main()
{
	int n,i,j;
  	scanf("%d",&n);
  	int primes[n];
  	 for (i = 2;i < n; i++)
        primes[i] = 1;
 
    for (i = 2;i < n; i++)
        if (primes[i])
            for (j = i;i * j < n; j++)
                primes[i * j] = 0;
  	 for (i = 3;i < n; i++)
        if (primes[i])
            printf("%d\n", i);
	return 0;
}

-----------------------------------------------------------------------

Q7 - Mirror Image
#include <stdio.h>
int main()
{
	int n,d,rev=0,t;
  	scanf("%d",&n);
  	t=n;
  	while(t!=0)
    {
      	d=t%10;
      	rev=rev*10+d;
      	t=t/10;
    }
  	if(rev==n)
      	printf("Mirror Image");
  	else
      	printf("Not a Mirror Image");
	return 0;
}

-----------------------------------------------------------------------

Q8 - Earth Quake
#include <stdio.h>
int main()
{
	float mag;
  	scanf("%f",&mag);
  	if(mag<2.0)
      	printf("Micro");
  	else if(mag>=2.0&&mag<3.0)
      	printf("Very minor");
  	else if(mag>=3.0&&mag<4.0)
      	printf("Minor");
  	else if(mag>=4.0&&mag<5.0)
      	printf("Light");
  	else if(mag>=5.0&&mag<6.0)
      	printf("Moderate");
  	else if(mag>=6.0&&mag<7.0)
      	printf("Strong");
  	else if(mag>=7.0&&mag<8.0)
    	printf("Major");
  	else if(mag>=8.0&&mag<9.0)
      	printf("Great");
  	else
      	printf("Meteoric");
	return 0;
}
-----------------------------------------------------------------------
Q9 - Multiplication of numbers(Integer data type)
#include <stdio.h>
int main()
{
	int a,b;
  	scanf("%d%d",&a,&b);
  	printf("The Multiplication of two number is:%d",(a*b));
	return 0;
}
-----------------------------------------------------------------------

Q10 -
 Differenzia
#include <stdio.h>
int main()
{
	int age;
  	scanf("%d",&age);
  	if(age>=18&&age<=60)
      	printf("Eligible");
  	else
      	printf("Not Eligible");
	return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------


SESSION 3:

Operators



Q1 - Chef And Operators
#include <stdio.h>
int main()
{
	int A,B,T,i;
  	scanf("%d",&T);    
  	for(i=1;i<=T;i++)
    {
        scanf("%d%d",&A,&B);    
      	if(A==B)
        	printf("=\n");
      	else if(A<B)
          	printf("<\n");
      	else
        	printf(">\n");
    }
  	return 0;
}

-----------------------------------------------------------------------

Q2 - Counting and Summing
#include <stdio.h>
int main()
{
	int n,i,countp=0,sumn=0;
  	scanf("%d",&n);	
  	int a[n];
  	for(i=0;i<n;i++)
    {
      	scanf("%d",&a[i]);
    }
  	for(i=0;i<n;i++)
    {
      	if(a[i]<0)
          	sumn=sumn+a[i];
      	else if(a[i]>0)
          	countp++;
    }
  	printf("Positive Count=%d\nNegative Sum=%d",countp,sumn);
	return 0;
}

-----------------------------------------------------------------------

Q3 - Topper
#include <stdio.h>
int main()
{
	int a,b;
  	scanf("%d%d",&a,&b);
  	if(a>b)
      	printf("%d",a);
  	else
      	printf("%d",b);
	return 0;
}

-----------------------------------------------------------------------

Q4 - FENCING THE GROUND
#include <stdio.h>
int main()
{
	int l,b;
  	scanf("%d%d",&l,&b);
  	printf("Required length is %dm\nRequired quantity of carpet is %dsqm",(2*(l+b)),(l*b));
	return 0;
}

-----------------------------------------------------------------------

Q5 - FOUR SEASONERS
#include <stdio.h>
int main()
{
	float x1,x2,x3,y1,y2,y3,x,y;
  	scanf("%f%f%f%f%f%f",&x1,&y1,&x2,&y2,&x3,&y3);
  	x=(float)((x1+x2+x3)/3);
  	y=(float)((y1+y2+y3)/3);
  	printf("Dinesh house is located at (%.1f,%.1f)",x,y);
	return 0;
}

-----------------------------------------------------------------------

Q6 - Radius of a Circle
#include <stdio.h>
#include <math.h>
int main()
{
	float a,b,c,s,r;
  	scanf("%f%f%f",&a,&b,&c);
  	s=(a+b+c)/2;
  	r=sqrt(((s-a)*(s-b)*(s-c))/s);
  	int rad = r* 100;
    float rad2 = rad/100.00;
  	printf("Radius=%.2f", rad2);
	return 0;
}

-----------------------------------------------------------------------

Q7 - Second largest
#include <stdio.h>
int main()
{
	int A,B,C,i,j,t;
  	scanf("%d%d%d",&A,&B,&C);
  	int a[]={A,B,C};
  	for(i=0;i<3;i++)
    {
      	for(j=0;j<2-i;j++)
        {
          	if(a[j]>a[j+1])
            {
              	t=a[j];
              	a[j]=a[j+1];
              	a[j+1]=t;
            }
        }
    }
  	printf("%d",a[1]);
    return 0;
}

-----------------------------------------------------------------------

Q8 - CASE OF THE ZEROS AND ONES
#include <stdio.h>
int main()
{
	int n,i,j;
  	scanf("%d",&n);
  	char bin[n];  	
  	scanf("%s",bin);
  	for(i=0;i<n;i++)
    {    	
      if(i<n-3)
      {
      	if(abs(bin[i]-bin[i+1])==1)
        {
          	for(j=i;j<n;j++)
            {
              	bin[j]=bin[j+2];
            }
          	n=n-2;
        }   
      }
      else if(i<n-1)
      {
        	if(abs(bin[i]-bin[i+1])==1)
               	n=n-2;
      }
    } 
    printf("%d",n);
	return 0;
}

-----------------------------------------------------------------------

Q9 - Finding OR of two numbers
#include <stdio.h>
int main()
{
	int a,b;
  	scanf("%d%d",&a,&b);  	
  	printf("Bitwise OR of %d and %d is:%d",a,b,a|b);
	return 0;
}

-----------------------------------------------------------------------

Q10 - Nth FIBO
#include <stdio.h>
int main()
{
	int i,n,t1=0,t2=1,t;
  	scanf("%d",&n);
  	for(i=1;i<=n;++i)
    {
      	t=t1+t2;
      	t1=t2;
      	t2=t;
    }
  	printf("%d",t1);
	return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------


SESSION 4:

Control and Looping



Q1 - BINARY ADD AND BINARY SUB
#include <stdio.h>
int main()
{
	int a,b;
  	scanf("%d%d",&a,&b);
  	printf("%d\n%d",a+b,a-b);
	return 0;
}

-----------------------------------------------------------------------

Q2 -  Approximate Value
#include <stdio.h>
int main()
{
	float n1,n2,d;
  	scanf("%f%f",&n1,&n2);
  	d=n1-n2;
  	if(d<0)
      	d=d*-1;  
  	if(d<=0.5)
      	printf("Approximate number");
  	else
      	printf("Not an Approximate number");
	return 0;
}

-----------------------------------------------------------------------

Q3 - Sum of the first and last digit
#include <stdio.h>
#include <math.h>
int main()
{
	int i,t,T,n,count,d,f;
  	scanf("%d",&T);
  	for(i=0;i<T;i++)
    {
      count=0;
      scanf("%d",&n);
      d=n%10;       
      t=n;
      while(n!=0)
      {
        count++;
      	n=n/10;
      }
      f=t/((int)pow(10,count-1));            
      printf("%d\n",(f+d));
    }
	return 0;
}
-----------------------------------------------------------------------

Q4 - Take a count
#include <stdio.h>
int main()
{
	int n,count=0;
  	scanf("%d",&n);
  	while(n!=0)
    {
      	count++;
      	n=n/10;
    }
  	printf("%d",count);
	return 0;
}

-----------------------------------------------------------------------

Q5 - Duplicate Detection
#include <stdio.h>
int main()
{
	int n,i,j,t;
  	scanf("%d",&n);
  	int a[n];
  	for(i=0;i<n;i++)
    {
      	scanf("%d",&a[i]);
    }
  	for(i=0;i<n;i++)
    {
      	for(j=0;j<n-i-1;j++)
        {
          	if(a[j]>a[j+1])
            {
              	t=a[j];
              	a[j]=a[j+1];
              	a[j+1]=t;
            }
        }
    }
  	for(i=0;i<n;i++)
    {
      	for(j=i+1;j<n;j++)
        {
          	if(a[i]==a[j])
            {
              printf("%d ",a[i]);
              break;
            }
        }
    }
	return 0;
}

-----------------------------------------------------------------------

Q6 - TRIANGULAR NUMBERS
#include <stdio.h>
int main()
{
	int n,p=1,i=0,flag=0;
  	scanf("%d",&n);
  	while(i<=n)
    {
      	i=i+p;
      	p++;
      	if(i==n)
        {
          	flag=1;
      		break;
        }
    }
  	if(flag==1)
      	printf("YES");
  	else
      	printf("NO");
	return 0;
}

-----------------------------------------------------------------------

Q7 - Hexadecimal's Numbers
#include <stdio.h>
int main()
{
	int n,i,t,d,flag,count=0;	
  	a:
  	scanf("%d",&n);
  	if(n<=1||n>=109)
      	goto a;
  	for(i=1;i<=n;i++)
    {
      	flag=1;
      	t=i;
      	while(t!=0)
        {
          	d=t%10;
          	if(d!=1&&d!=0)
            {
              	flag=0;
              	break;
            }
          	t=t/10;
        }
      	if(flag==1)
          	count++;
    }
  	printf("%d",count);
	return 0;
}

-----------------------------------------------------------------------

Q8 - horse found
#include <stdio.h>
#include <math.h>
int main()
{
	int T,N,i,j,min,k;
  	a:
  	scanf("%d",&T);
  	if(T<1||T>10)
      	goto a;
  	for(i=1;i<=T;i++)
    {
      	b:
      	scanf("%d",&N);
      	if(N<2||N>5000)
          	goto b;
      	int S[N];
      	for(j=0;j<N;j++)
        	scanf("%d",&S[j]);
      	min=abs(S[1]-S[0]);
      	for(j=0;j<N;j++)
        {
          	for(k=j+1;k<N;k++)
            {
              	if(abs(S[j]-S[k])<min)                
                  	min=abs(S[j]-S[k]);                
            }
        }   
      	printf("%d\n",min);
    }
	return 0;
}

-----------------------------------------------------------------------

Q9 - PRINT SERIES
#include <stdio.h>
int main()
{
	int n,i,j,sum;
  	scanf("%d",&n);
  	for(i=1;i<=n;i++)
    {
      	sum=0;
      	for(j=1;j<=i;j++)
        {
          	sum=sum+j;
        }
      	printf("%d ",sum);
    }
	return 0;
}

-----------------------------------------------------------------------

Q10 - Pattern 1
#include <stdio.h>
int main()
{
	int n,i,j;
  	scanf("%d",&n);
  	for(i=1;i<=n;i++)
    {
      	for(j=1;j<=n;j++)
        {
          	printf("@");
        }
      	printf("\n");
    }
	return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------


SESSION 5:

Arrays



Q1 - Choose the second small
#include <stdio.h>
int main()
{
	int n,i,j,t;
  	scanf("%d",&n);
  	int a[n];
  	for(i=0;i<n;i++)
      	scanf("%d",&a[i]);
  	for(i=0;i<n;i++)
    {
      	for(j=0;j<n-i-1;j++)
        {
          	if(a[j]>a[j+1])
            {
              	t=a[j];
              	a[j]=a[j+1];
              	a[j+1]=t;
            }
        }
    }
  	printf("%d",a[1]);
	return 0;
}

-----------------------------------------------------------------------

Q2 - Colored Array
#include <stdio.h>
int main()
{
	int cases,n,m,k,i,j;
	int col[1001],cost[1001][1001],points[1001][1001];
	scanf("%d",&cases);
	while(cases--)
	{
		
		scanf("%d %d %d",&n,&m,&k);
		int max[n+1],pts[n+1],tot,temp,x;tot=0;
		for(i=1;i<=n;i++)
			max[i]=0;
		for(i=1;i<=n;i++)
			scanf("%d",&col[i]);
		for(i=1;i<=n;i++)
			for(j=1;j<=m;j++)
				scanf("%d",&points[i][j]);	
		for(i=1;i<=n;i++)
			for(j=1;j<=m;j++)
				scanf("%d",&cost[i][j]);		
		for(i=1;i<=n;i++)
			pts[i]=points[i][col[i]];						
		for(i=1;i<=n;i++)
		{			
			for(j=1;j<=m;j++)
			{
				x=(points[i][j]-cost[i][j]);
				if(max[i]<(x-pts[i]))
					max[i]=x-pts[i];								
			}
			
		}
		if(k>n)
			k=n;
		for(i=1;i<=k;i++)
		{
			for(j=i+1;j<=n;j++)
			{
				if(max[j]>max[i])
				{
					temp=max[i];
					max[i]=max[j];
					max[j]=temp;
					temp=pts[i];
					pts[i]=pts[j];
					pts[j]=temp;
				}	
			}
			pts[i]+=max[i];
		}
		for(i=1;i<=n;i++)
				tot+=pts[i];						
		printf("%d\n",tot);			
	} 
	return 0;
}

-----------------------------------------------------------------------

Q3 - Sum of even and odd numbers
#include <stdio.h>
int main()
{
	int n,i,sumo=0,sume;
  	scanf("%d",&n);
  	int a[n];
  	for(i=0;i<n;i++)
    {
      	scanf("%d",&a[i]);
      	if(a[i]%2==0)
          	sume=sume+a[i];
      	else
          	sumo=sumo+a[i];
    }
  	printf("even=%d\nodd=%d",sume,sumo);
	return 0;
}

-----------------------------------------------------------------------

Q4 - Magic Square
#include <stdio.h>
int main()
{
	int A[3][3];
  	int i,j,flag=0,sum=0,sum1,sum2;
  	for(i=0;i<3;i++)
    {
      	for(j=0;j<3;j++)
          	scanf("%d",&A[i][j]);
    }
  	for(i=0;i<3;i++)
    {
      	for(j=0;j<3;j++)
        {
          	if(i==j)
              	sum=sum+A[i][j];
        }
    }
  	for(i=0;i<3;i++)
    {
      	sum1=0;
      	for(j=0;j<3;j++)
        {
        	sum1=sum1+A[i][j];
        }
    	if(sum==sum1)
          	flag=1;
      	else
        {
          	flag=0;
          	break;
        }
    }
  	for(i=0;i<3;i++)
    {
      	sum2=0;
      	for(j=0;j<3;j++)
        {
          	sum2=sum2+A[j][i];
        }
      	if(sum==sum2)
          	flag=1;
      	else
        {
          	flag=0;
          	break;
        }
    }
  	if(flag==1)
      	printf("Yes");
  	else
      	printf("No");
	return 0;
}

-----------------------------------------------------------------------

Q5 - Ballots
#include <stdio.h>
int main()
{
	int n,i,c1=0,c2=0,c3=0,c4=0,c5=0,c=0;
  	scanf("%d",&n);
  	int a[n];
  	for(i=0;i<n;i++)
    {
    	scanf("%d",&a[i]);
  		if(a[i]==1)
          	c1++;
      	else if(a[i]==2)
          	c2++;
      	else if(a[i]==3)
          	c3++;
      	else if(a[i]==4)
          	c4++;
      	else if(a[i]==5)
          	c5++;
      	else
          	c++;
    }
  	printf("Candidate 1=%d\nCandidate 2=%d\nCandidate 3=%d\nCandidate 4=%d\nCandidate 5=%d\nSpoil Ballot=%d",c1,c2,c3,c4,c5,c);
	return 0;
}

-----------------------------------------------------------------------

Q6 - Array Transformation
#include <stdio.h>
int main()
{
	int	t;
	scanf("%d",&t);
	while(t--)
	{
		//code
		int n,k;
		scanf("%d %d",&n,&k);
		int i,arr[n];
		for(i = 0; i < n; i++)
			scanf("%d",&arr[i]);
		if(n == 2)
		{
			printf("YES\n");
			continue;
		}
		int rem1 = arr[0]%(k+1);
		int rem2 = -1;
		int rem1_count = 1;
		int rem2_count = 0;
		for(i = 1; i < n; i++)
		{	
			if(arr[i]%(k+1) != rem1)
			{
				if(rem2 != -1)
				{
					if(arr[i]%(k+1) == rem2)
						rem2_count++;
					else 
						break;
				}
				else
				{
					rem2 = arr[i]%(k+1);
					rem2_count = 1;
				}
			}
			else
				rem1_count++;
		}
		if(i<n){
			printf("NO\n");
			continue;
		}
		if(rem1_count == n-1 || rem2_count == n-1 || rem1_count == n)
			printf("YES\n");
		else 
			printf("NO\n");
	}	
  	return 0;
}
 
-----------------------------------------------------------------------

Q7 - uncle jony
#include <stdio.h>
int main()
{
  	int T,N,K,i,j,l,u;
  	scanf("%d",&T);
  	for(i=0;i<T;i++)
    {
      	scanf("%d",&N);
      	int A[N];
      	for(j=0;j<N;j++)
          	scanf("%d",&A[j]);
      	scanf("%d",&K);
      	u=A[K-1];
      	for(j=0;j<N;j++)
        {
          	for(l=0;l<N-j-1;l++)
            {
              	if(A[l]>A[l+1])
                {
                  	A[l]=A[l]^A[l+1];
                  	A[l+1]=A[l]^A[l+1];	
                  	A[l]=A[l]^A[l+1];	
                }
            }
        }
      	for(j=0;j<N;j++)
        {
          	if(A[j]==u)
            {
              	printf("%d\n",j+1);
              	break;
            }
        }
    }
  	return 0;
}

-----------------------------------------------------------------------

Q8 - Sort by Select
#include <stdio.h>
int main()
{
	int n,i,j,t;
  	scanf("%d",&n);
  	int a[n];
  	for(i=0;i<n;i++)
      	scanf("%d",&a[i]);
  	for(i=0;i<n;i++)
    {
      	for(j=0;j<n-i-1;j++)
        {
          	if(a[j]>a[j+1])
            {
              	t=a[j];
          		a[j]=a[j+1];
              	a[j+1]=t;
            }
        }      	
    }
  	for(i=0;i<n;i++)
      	printf("%d ",a[i]);
	return 0;
}

-----------------------------------------------------------------------

Q9 - Bico Gaming
#include<stdio.h>
long long int a[101][51];
int main()
{
	int i,j;
	long long int b[60];
	a[0][0] = 1;
	for(i=1;i<=100;i++)
	for(j=0;j<=i;j++)
	{
		if(j==0)
		a[i][j] = a[i-1][j];
		else if(j==i)
		a[i][j] = a[i-1][j-1];
		else
		a[i][j] = a[i-1][j] + a[i-1][j-1];
	}
	
	int t,r,c,m=0;
	long long int g;
	scanf("%d",&t);
	while(t--)
	{
		m=0;
		scanf("%d %d %lld",&r,&c,&g);
		while(g>0)
		{
			i=c;
			while((a[i][c]<=g)&&(i<=99))
			i++;
			i--;
			b[++m] = a[i][c];
			g-=a[i][c];
			c--;	
		}
		printf("%d\n",m);
		for(i=1;i<=m;i++)
		printf("%lld ",b[i]);
		printf("\n");
	}
	return 0;
}

-----------------------------------------------------------------------

Q10 - Coin Flip
#include <stdio.h>
int main()
{
  	long int t,a,b,c,d,e,f;
	scanf("%ld",&t);
	while(t--)
	{
		scanf("%ld",&a);
		while(a--)
		{
			scanf("%ld",&b);
			scanf("%ld",&c);
			scanf("%ld",&d);
		    e=c%2;
		    f=c/2;
		    if(e==0)
		    {
		    	printf("%ld\n",f);
			}
			else
			{
				if(b==d)
				{
					printf("%ld\n",f);
				}
				else
				{
					printf("%ld\n",f+1);
				}
			}
		}
    }
	return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------------------


SESSION 6:

String



Q1 - Replace a string
#include <stdio.h>
int main()
{	
	char str[9],c,ch;
  	scanf("%s\n",str);
  	scanf("%c\n",&c);
  	scanf("%c",&ch);
  	int i=0;
  	while(str[i]!='\0')
    {
      	if(str[i]==c)
          	str[i]=ch;
      	++i;
    }
  	printf("%s",str);
	return 0;
}
-
----------------------------------------------------------------------

Q2 - Replace Last Occurrence
#include <stdio.h>
#include <string.h>
int main()
{
	char str[10],ch,c;
  	scanf("%s\n",str);
  	scanf("%c\n",&ch);
  	scanf("%c",&c);
  	int i,n=strlen(str);
  	for(i=n-1;i>=0;i--)
    {
      	if(str[i]==ch)
        {
          	str[i]=c;
          	break;
        }
    }
  	printf("%s",str);
	return 0;
}

----------------------------------------------------------------------

Q3 - Maximum Frequency
#include <stdio.h>
int main()
{	
  	char ch[10]; 	
 	scanf("%s",ch);
 	int i=0,j,count;
 	while(ch[i]!='\0')
    {
      	count=1;
      	j=i+1;
      	while(ch[j]!='\0')
        {
          	if(ch[i]==ch[j])            
              	count++;
                          
         	else                      	
           		break;
          	j++;
        }
      	printf("%c=%d\n",ch[i],count);
      	i=j;
    }
	return 0;
}
-----------------------------------------------------------------------

Q4 - Frequency of each
#include <stdio.h>
int main()
{
	int count,i,c;
  	char str[50];
  	scanf("%s",str);
  	for(c=97;c<=122;c++)
    {
      	i=0;
      	count=0;
  		while(str[i]!='\0')
    	{
      		if(str[i]==(char)c)
              	count++;
      		i++;
    	}
      	if(count>0)
          	printf("%c = %d\n",c,count);
    }
	return 0;
}

-----------------------------------------------------------------------

Q5 - Reverse string
#include <stdio.h>
int main()
{
	int T,N,i,d,rev;  
  	scanf("%d",&T);  	      
  	for(i=1;i<=T;i++)
    {
      	rev=0;      	
      	scanf("%d",&N);      	         
      	while(N!=0)
        {
          	d=N%10;
          	rev=rev*10+d;
          	N=N/10;
        }
      	printf("%d\n",rev);
    }
	return 0;
}

----------------------------------------------------------------------

Q6 - Remove All occurrence
#include <stdio.h>
int main()
{
	char str[10],c;
  	scanf("%s\n",str);
  	scanf("%c",&c);
  	int i=0;
  	while(str[i]!='\0')
    {
      	if(str[i]!=c)
          	printf("%c",str[i]);
      	i++;
    }
	return 0;
}

-----------------------------------------------------------------------

Q7 - Remove Last occurrence
#include <stdio.h>
#include <string.h>
int main()
{
	char str[20],c[20],ch;
  	scanf("%s\n",str);
  	scanf("%c",&ch);
  	int i,j=0,flag=0;
  	for(i=strlen(str)-1;i>=0;i--)
    {
      	if(ch==str[i]&&flag==0)        
          	flag=1;
      	else
        {
          	c[j]=str[i];
          	j++;
        }      	
    }
  	for(i=j-1;i>=0;i--)
      	printf("%c",c[i]);
	return 0;
}

-----------------------------------------------------------------------

Q8 - Copy Count
#include <stdio.h>
int main()
{
	char str[20],str_c[20];
  	int i=0;
  	scanf("%s",str);
  	while(str[i]!='\0')
    {
      	str_c[i]=str[i];
      	i++;
    }
  	printf("%s\n%s\n%d",str,str_c,i);
	return 0;
}

-----------------------------------------------------------------------

Q9 - Warm up
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int main()
{
	int t,length,i,value,ctr;
	char input[51];
	scanf("%d",&t);
	while(t--)
	{
		int count[26] = {0};
		scanf("%s",input);
		length = strlen(input);
		for(i=0;i<length;i++)
		{
			value = (int)input[i]-(int)'a';
			count[value]++;
		}
		ctr = 0;
		for(i=0;i<26;i++)
		{
			if(count[i]==(length-count[i]))
			{
				ctr++;
			}
		}
		if(ctr>0)
		{
			printf("YES\n");
		}
		else
		{
			printf("NO\n");
		}
	}
	return 0;
}

-----------------------------------------------------------------------

Q10 - Sorting of strings
#include <stdio.h>
#include <string.h>
int main()
{
	int i,j,n;
  	char str[10][10],temp[20];  	
  	scanf("%d",&n);
  	for(i=0;i<=n;i++)
   	  scanf("%s",(str[i]));
  	for(i=0;i<n;i++)
  	  for(j=i+1;j<n;j++)
      {
           if(strcmp(str[i],str[j])>0)
           {
               strcpy(temp,str[i]);
           	   strcpy(str[i],str[j]);
               strcpy(str[j],temp);
           }
      }
  	  for(i=0;i<n;i++)
   		   printf("%s\n",str[i]);
      return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------



SESSION 7:

Functions



Q1 - Matrix Sum using Function
#include <stdio.h>
int main()
{
	int m,n,i,j,sum=0;
  	scanf("%d%d",&m,&n);
  	int A[m][n];
  	for(i=0;i<m;i++)
    {
      	for(j=0;j<n;j++)
        {
          	scanf("%d",&A[i][j]);
          	sum=sum+A[i][j];
        }
    }
  	printf("sum=%d",sum);
	return 0;
}

-----------------------------------------------------------------------

Q2 - One-dimensional Japanese Crossword
#include <stdio.h>
int main()
{
	int i,cnt=0,a[100],j=0,grp=0,n;
    char s[105];
    scanf("%d",&n);
    scanf("%s",s);
    for(i=0; i<n; i++)
    {
        if(s[i]=='B')
        {
            cnt++;
        }
        else
        {
            if(cnt>0)
            {
                a[j]=cnt;
                j++;
                grp++;
            }
            cnt=0;
        }
    }
    if(cnt>0)
    {
        grp++;
        a[j]=cnt;
    }
    else
        j--;
    printf("%d\n",grp);
    if(j>=0)
    {
        for(i=0; i<j; i++)
        {
            printf("%d ",a[i]);
        }
        printf("%d\n",a[j]);
    }
	return 0;
}

-----------------------------------------------------------------------

Q3 - Power of 2
#include <stdio.h>
#include <math.h>
int main()
{
	int T,X,i,j,flag;
  	scanf("%d",&T);
  	for(i=1;i<=T;i++)
    {
      	flag=0;
      	scanf("%d",&X);
      	j=0;
      	while(pow(2,j)<=X)
        {
          	if(pow(2,j)==X)
            {
              	flag=1;
              	break;
            }
          	j++;
        }
      	if(flag==1)
          	printf("1\n");
      	else
          	printf("0\n");
    }
	return 0;
}

-----------------------------------------------------------------------

Q4 - Array Mode
#include <stdio.h>
int main()
{
	int n,i,j,mode,app=0,curr;
  	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
      	scanf("%d",&A[i]);
  	for(i=0;i<n;i++)
    {
      	curr=1;
      	for(j=i+1;j<n;j++)
        {
          	if(A[i]==A[j])
            {
              	curr++;
            }
        }
      	if(app<curr)
        {
          	app=curr;
          	mode=A[i];
        }
    }
  	if(app>1)
  		printf("Mode=%d",mode);
  	else
      	printf("none");
	return 0;
}

-----------------------------------------------------------------------

Q5 - Alphabetic Half Pyramid
#include <stdio.h>
int main()
{
	char c,i,j;  	
  	scanf("%c",&c);
  	for(i='A';i<=c;i++)
    {
      	for(j='A';j<=i;j++)
			printf("%c",i);
      	printf("\n");
    }
	return 0;
}

-----------------------------------------------------------------------

Q6 - Searching an Array using Functions
#include <stdio.h>
int main()
{
	int n,i,num,flag=0;
  	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
      	scanf("%d",&A[i]);
  	scanf("%d",&num);
  	for(i=0;i<n;i++)
    {
      	if(A[i]==num)
        {
          	flag=1;
          	break;
        }
    }
  	if(flag==1)
      	printf("%d is present in the array",num);
  	else
      	printf("%d is not present in the array",num);
	return 0;
}

-----------------------------------------------------------------------

Q7 - Power Calculation
#include <stdio.h>
int power(int x,int y);
int main()
{
	int a,b,ans;
  	scanf("%d%d",&a,&b);
 	ans=power(a,b);
  	printf("%d^%d = %d",a,b,ans);
    return 0;
}

int power(int x,int y)
{
  	if(y==0)
      	return 1;
  	else
      	return x*power(x,y-1);
}

-----------------------------------------------------------------------

Q8 - SQUARE OF A NUMBER
#include <stdio.h>
int main()
{
	int n;
  	scanf("%d",&n);
  	printf("%d",n*n);  
	return 0;
}
-----------------------------------------------------------------------

Q9 - Alphabet Game
#include <stdio.h>
#include <string.h>
int main()
{
	int t,j,k,c,n,m;
	char a[27];
	scanf("%s",a);
	
	n=strlen(a);
	scanf("%d",&t);
	char b[13];
	while(t--)
	{
		scanf("%s",b);
		m=strlen(b);
		c=0;
		for(j=0;j<n;j++)
		{
			for(k=0;k<m;k++)
			{
				if(a[j]==b[k])
					c++;
			}
		}
		if(c==m)
			printf("Yes\n");
		else
			printf("No\n");
    }
	return 0;
}

-----------------------------------------------------------------------

Q10 - No. of Distinct Elements in an unsorted array
#include <stdio.h>
int main()
{
  	int n,i,count=0,j,flag;
	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
      	scanf("%d",&A[i]);
  	for(i=0;i<n;i++)
    {
      	flag=1;
      	for(j=i+1;j<n;j++)
        {
          	if(A[i]==A[j])
            {
              	flag=0;
              	break;
            }
        }
      	if(flag==1)
          	count++;
    }
  	printf("%d",count);
	return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------


SESSION 8: 

Structures and Unions



Q1 - Money with Arun
#include <stdio.h>
struct money
{
  	int p,f;
};
int main()
{  	
  	int i;
	struct money m;
  	scanf("%d%d",&m.p,&m.f);
  	for(i=1;i<=m.f;i++)
    {
      	m.p=m.p*2;
    }
  	printf("%d",m.p);
	return 0;
}

-----------------------------------------------------------------------

Q2 - Student Management Array of Structure
#include <stdio.h>
struct student
{
  	char name[20];
  	int rno;
  	float mrks;
};
int main()
{
	struct student s[3];
  	int i;
  	for(i=0;i<3;i++)
    {
      	scanf("%s%f",s[i].name,&s[i].mrks);
    }
  	for(i=0;i<3;i++)
    {
      	printf("Roll number=%d\nName=%s\nMarks=%.2f\n",i+1,s[i].name,s[i].mrks);
    }
	return 0;
}

-----------------------------------------------------------------------

Q3 - Structure 41
#include <stdio.h>
struct time
{ 
  	int h,m,s;
};
int main()
{
	struct time t1,t2;
  	scanf("%d%d%d",&t1.h,&t1.m,&t1.s);
  	scanf("%d%d%d",&t2.h,&t2.m,&t2.s);
  	printf("%d hrs\n%d min\n%d sec",t1.h+t2.h,t1.m+t2.m,t1.s+t2.s);
	return 0;
}

-----------------------------------------------------------------------

Q4 - Reverse of Digits
#include <stdio.h>
struct num
{
  	int n;
};
int main()
{
	struct num u;
  	scanf("%d",&u.n);
  	int rev=0,d;
  	while(u.n!=0)
    {
      	d=u.n%10;
      	rev=rev*10+d;
      	u.n=u.n/10;
    }
  	printf("%d",rev);
	return 0;
}

-----------------------------------------------------------------------

Q5 - TRANSFORMATION
#include<stdio.h>
#include<ctype.h>
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int i,j;
		char s[400],a[80];
		scanf("%s",s);
		for(i=0,j=0;s[i]!='\0';)
		{
			while(s[i]=='(')
			
			++i;
			if(isalpha(s[i]))
			printf("%c",s[i++]);
			a[j++]=s[i++];
			if(isalpha(s[i]))
			printf("%c",s[i++]);
		
		while(s[i]==')')
		{
		
			printf("%c",a[--j]);
			++i;
	}
			
		}
		printf("\n");
	}
	return 0;
}

-----------------------------------------------------------------------

Q6 - Sum of Digits
#include <stdio.h>
struct number
{
  	int n;
};
int main()
{
  	struct number u;
	int sum=0,d;
  	scanf("%d",&u.n);
  	while(u.n!=0)
    {
      	d=u.n%10;
      	sum=sum+d;
      	u.n=u.n/10;
    }
  	printf("%d",sum);
	return 0;
}

-----------------------------------------------------------------------

Q7 - Find no of characters in name
#include <stdio.h>
struct structure
{
  	char name[10];
};
int main()
{
  	struct structure s;
  	scanf("%s",s.name);
  	int count,i=0;
  	while(s.name[i++]!='\0')
    	count++;
  	printf("%d",count);
	return 0;
}

-----------------------------------------------------------------------

Q8 - Simple Structure
#include <stdio.h>
struct info
{
  	char name[20];
  	int rno;
  	float mrks;
};
int main()
{
	struct info i;
  	scanf("%s%d%f",i.name,&i.rno,&i.mrks);
  	printf("Name=%s\nRoll number=%d\nMarks=%.1f",i.name,i.rno,i.mrks);
	return 0;
}

-----------------------------------------------------------------------

Q9 - Passing structure by reference
#include <stdio.h>
struct distance
{
  	int feet;
  	float inch;
};
int main()
{
  	struct distance d1,d2;
	scanf("%d%f%d%f",&d1.feet,&d1.inch,&d2.feet,&d2.inch);
  	printf("%dfeet",d1.feet+d2.feet);
  	printf("\n%.1finches",d1.inch+d2.inch);
	return 0;
}

-----------------------------------------------------------------------

Q10 - Date Structure for Year
#include <stdio.h>
struct Year
{
  	int date,month,year;
};
int main()
{
	struct Year s1;
  	scanf("%d%d%d",&s1.date,&s1.month,&s1.year);
  	printf("Date=%d\nMonth=%d\nYear=%d",s1.date,s1.month,s1.year);
  	if(s1.year%4==0)
      	printf("\n%d is a leap year",s1.year);
  	else
      	printf("\n%d is not a leap year",s1.year);
	return 0;
}
+
-------------------------------------------------------------------------------------------------------------------------------------------------


SESSION 9: 

----------------------------------------------------------------------
Pointers

Q1 - BIGGEST OF THREE NUMBERS
#include <stdio.h>
int main()
{
  	int i,max=0;
	int A[3];
  	for(i=0;i<3;i++)
    {
      	scanf("%d",&A[i]);
      	if(max<A[i])
          	max=A[i];
    }
  	printf("%d",max);
	return 0;
}
-----------------------------------------------------------------------

Q2 - BIGGEST VALUE IN A GIVEN ARRAY
#include <stdio.h>
int main()
{
  	int n,i,max=0;
  	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
    {
      	scanf("%d",&A[i]);
  		if(max<A[i])
          	max=A[i];
    }
  	printf("%d",max);
  	return 0;
}

-----------------------------------------------------------------------

Q3 - Pointers - 24
#include <stdio.h>
int main()
{
	char str[20],ch;
  	fgets(str,20,stdin);
  	scanf("%c",&ch);
  	int i=0;	
  	while(str[i]!='\0')
    {
      	if(str[i]!=ch)
          	printf("%c",str[i]);
      	i++;
    }
	return 0;
}

-----------------------------------------------------------------------

Q4 - Pointers - 30
#include <stdio.h>
int main()
{
	
char c;
  	
scanf("%c",&c);
  	
if(isupper(c)>0)
      	
printf("Upper case character was entered\n%c",c);
  	
else if(isupper(c)==0)
    	
printf("Lower case character was entered\nUpper case=%c",toupper(c));
	
return 0;
}

-----------------------------------------------------------------------

Q5 - Print its elements in reverse order
#include <stdio.h>
int main()
{
	int n,i;	
  	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
      	scanf("%d",&A[i]);
  	for(i=n-1;i>=0;i--)
      	printf("%d ",A[i]);
	return 0;
}
-----------------------------------------------------------------------

Q6 - Pointers 6
#include <stdio.h>
int main()
{
	char c;
  	scanf("%c",&c);
  	c=tolower(c);
  	if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u')
      	printf("vowel");
  	else
    	printf("consonant");
	return 0;
}

-----------------------------------------------------------------------

Q7 - SWAPPING
#include <stdio.h>
int main()
{
	int a,b;
  	scanf("%d%d",&a,&b);
  	a=a^b;
  	b=a^b;
  	a=a^b;
  	printf("%d %d",a,b);
	return 0;
}

-----------------------------------------------------------------------

Q8 - Numbering book pages
#include <stdio.h>
int main()
{
	int n;
  	scanf("%d",&n);
  	if((n-9)%2==0)    
      	printf("%d",((n-9)/2)+9);
  	else
      	printf("Impossible");
	return 0;
}

-----------------------------------------------------------------------

Q9 - Pointers - 48
#include <stdio.h>
#include <string.h>
int main()
{
	char ch[20];
  	fgets(ch,20,stdin);
  	int i;
  	for(i=strlen(ch)-1;i>=0;i--)
      	printf("%c",ch[i]);
	return 0;
}

-----------------------------------------------------------------------

Q10 - Sum of array
#include <stdio.h>
int main()
{
	int n,i,sum=0;
  	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
    {
      	scanf("%d",&A[i]);
      	sum=sum+A[i];
    }
  	printf("%d",sum);
	return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------


SESSION 10: 

----------------------------------------------------------------------
Practice Session

Q1 - Printing Next
#include <stdio.h>
#include <string.h>
int main()
{
	char ch[50];
  	//char s[50];
  	scanf("%s",ch);
  	int i=0;
  	while(i<strlen(ch))
    {
      	ch[i]=ch[i]+1;
      	i++;
    }
  	printf("%s",ch);
	return 0;
}

-----------------------------------------------------------------------

Q2 - IO 34
#include <stdio.h>
int main()
{
	float bp,hra,da,bon;
  	scanf("%f",&bp);
  	hra=0.8*bp;
  	da=0.4*bp;
  	bon=0.25*hra;
  	printf("Total Salary=%.2f",bp+hra+da+bon);
	return 0;
}

-----------------------------------------------------------------------

Q3 - Berland University
#include<stdio.h>
int main()
{
 long long int n,t,a[10000],b[10000],i,j,count;
 scanf("%lld",&t);
 while(t--)
 {
  count=0;
  j=0;
  scanf("%lld",&n);
  for(i=0;i<n;i++)
  scanf("%lld",&a[i]);
  for(i=0;i<n;i++)
  scanf("%lld",&b[i]);
  for(i=0;i<n;i++)
  {
   if(b[i]<=a[i]-j)
   count++;
   j=a[i];
  }
  printf("%lld\n",count);
 }
 return 0;
}
-----------------------------------------------------------------------

Q4 - Rupee Name

#include <stdio.h>
#include <math.h>

int main()

{
	
float m;
  	
scanf("%f",&m);
  
	int r=(int)floor(m);
  	
int p=(int)((m-r)*100);  	
  	
int count=0,t,f;
  	
t=r;
  	
while(t>0)
    
{
      	
count++;

      	t=t/10;

    }
  	  	
  	while(count>2)

    {

      	f=r/pow(10,count-1);

      	switch(f)
        {
          case 1:printf("ONE ");
            break;
          case 2:printf("TWO ");
            break;
          case 3:printf("THREE ");
            break;
          case 4:printf("FOUR ");
            break;
          case 5:printf("FIVE ");
            break;
          case 6:printf("SIX ");
            break;
          case 7:printf("SEVEN ");
            break;
          case 8:printf("EIGHT ");
            break;
          case 9:printf("NINE ");
            break;
        }
      	if(count==3)
          	printf("HUNDRED ");
      	else
          	printf("THOUSAND ");      	
      	r=r%((int)pow(10,count-1));
      	count--;
    }
  	if(count==2)
    {
      	f=r/pow(10,count-1);
      	switch(f)
        {
          case 1:printf("TEN ");
            break;
          case 2:printf("TWENTY ");
            break;
          case 3:printf("THIRTY ");
            break;
          case 4:printf("FOURTY ");
            break;
          case 5:printf("FIFTY ");
            break;
          case 6:printf("SIXTY ");
            break;
          case 7:printf("SEVENTY ");
            break;
          case 8:printf("EIGHTY ");
            break;
          case 9:printf("NINETY ");
            break;            
        }   
      	r=r%((int)pow(10,count-1));
      count--;
    }
  	if(count==1)
    {
      	f=r/pow(10,count-1);
      	switch(f)
        {
          case 1:printf("ONE ");
            break;
          case 2:printf("TWO ");
            break;
          case 3:printf("THREE ");
            break;
          case 4:printf("FOUR ");
            break;
          case 5:printf("FIVE ");
            break;
          case 6:printf("SIX ");
            break;
          case 7:printf("SEVEN ");
            break;
          case 8:printf("EIGHT ");
            break;
          case 9:printf("NINE ");
            break;
        }
    }
  	printf("AND PAISE ");
  	f=p/10;
  	switch(f)
        {
          case 1:printf("TEN ");
            break;
          case 2:printf("TWENTY ");
            break;
          case 3:printf("THIRTY ");
            break;
          case 4:printf("FOURTY ");
            break;
          case 5:printf("FIFTY ");
            break;
          case 6:printf("SIXTY ");
            break;
          case 7:printf("SEVENTY ");
            break;
          case 8:printf("EIGHTY ");
            break;
          case 9:printf("NINETY ");
            break;            
        }   
  	f=p%10;
  	switch(f)
    {
          case 1:printf("ONE");
            break;
          case 2:printf("TWO");
            break;
          case 3:printf("THREE");
            break;
          case 4:printf("FOUR");
            break;
          case 5:printf("FIVE");
            break;
          case 6:printf("SIX");
            break;
          case 7:printf("SEVEN");
            break;
          case 8:printf("EIGHT");
            break;
          case 9:printf("NINE");
            break;
    }
	return 0;
}

-----------------------------------------------------------------------

Q5 - Rectangular Object
#include <stdio.h>
#include <math.h>
int main()
{
	int t;
	double l,b,h,w,a;
	scanf("%d",&t);
	while(t--)
    {
        	scanf("%lf%lf",&w,&a);
        	l=(w-sqrt(w*w-24*a))/12;
        	b=l;
        	h=(w-8*b)/4;
        	printf("%0.2lf\n",l*b*h);
    }
	return 0;
}

-----------------------------------------------------------------------

Q6 - Who is big and who is Dwarf
#include <stdio.h>
int main()
{
	int n,i,s,l;
  	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
      	scanf("%d",&A[i]);
  	s=A[0];
  	l=A[0];
  	for(i=1;i<n;i++)
    {
      	if(A[i]>l)
          	l=A[i];
      	if(A[i]<s)
          	s=A[i];
    }
  	printf("%d\n%d",l,s);
	return 0;
}

-----------------------------------------------------------------------

Q7 - Sum of even and odd numbers
#include <stdio.h>
int main()
{
	int n,i,sume=0,sumo=0;
  	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
    {
      	scanf("%d",&A[i]);
      	if(A[i]%2==0)
          	sume=sume+A[i];
      	else
          	sumo=sumo+A[i];
    }
  	printf("even=%d\nodd=%d",sume,sumo);
	return 0;
}

-----------------------------------------------------------------------

Q8 - Last to first
#include <stdio.h>
int main()
{
	int n,i;
  	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
      	scanf("%d",&A[i]);
  	for(i=n-1;i>=0;i--)
      	printf("%d ",A[i]);
	return 0;
}

-----------------------------------------------------------------------

Q9 - Sum of even and odd numbers
#include <stdio.h>
int main()
{
	int n,i,sumo=0,sume=0;
  	scanf("%d",&n);
  	int A[n];
  	for(i=0;i<n;i++)
    {
   		scanf("%d",&A[i]);
  		if(A[i]%2==0)
          	sume=sume+A[i];
      	else
          	sumo=sumo+A[i];
    }
  	printf("even=%d\nodd=%d",sume,sumo);
  	
	return 0;
}

-----------------------------------------------------------------------

Q10 - Structure - 1 Students Details
#include <stdio.h>
#include <string.h>
struct Student
{
  	char name[30];
  	char department[20];
  	int yearOfStudy;
  	float cgpa;
};
int main()
{
	int MAX,i,j;
  	float t;
  	char temp1[25],temp2[25];
  	scanf("%d",&MAX);
  	struct Student s[MAX];
  	for(i=0;i<MAX;i++)    
      	scanf("%s%s%d%f",s[i].name,s[i].department,&s[i].yearOfStudy,&s[i].cgpa);
  	for(i=0;i<MAX;i++)
    {
      	for(j=0;j<MAX-i-1;j++)
        {
          	if(strcmp(s[j].name,s[j+1].name)>0)
            {              	
              	strcpy(temp1,s[j].name);
           		strcpy(s[j].name,s[j+1].name);
           		strcpy(s[j+1].name,temp1);
              	strcpy(temp2,s[j].department);
            	strcpy(s[j].department,s[j+1].department);
            	strcpy(s[j+1].department,temp2);
              	s[j].yearOfStudy=s[j].yearOfStudy^s[j+1].yearOfStudy;
              	s[j+1].yearOfStudy=s[j].yearOfStudy^s[j+1].yearOfStudy;
              	s[j].yearOfStudy=s[j].yearOfStudy^s[j+1].yearOfStudy;
              	t=s[j].cgpa;	
              	s[j].cgpa=s[j+1].cgpa;
              	s[j+1].cgpa=t;
            }
        }
    }
  	for(i=0;i<MAX;i++)    
      	printf("Name:%s\nDepartment:%s\nYear of study:%d\nCGPA:%.1f\n",s[i].name,s[i].department,s[i].yearOfStudy,s[i].cgpa);
  	//printf("%f",s[0].cgpa);
	return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------
=================================================================================================================================================
									//Created by AG
=================================================================================================================================================